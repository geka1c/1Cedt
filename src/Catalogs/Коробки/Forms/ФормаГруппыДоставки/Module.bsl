
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ОповеститьОбИзменении(Объект.Ссылка);
КонецПроцедуры


&НаКлиенте
Процедура ВесПриИзменении(Элемент)
	Объект.ДатаВзвешивания=ТекущаяДата();
КонецПроцедуры


&НаКлиенте
Процедура ПолучитьАдрес(Команда)
	ПолучитьАдресНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьАдресНаСервере()
	ТЗ=Объект.Состав.Выгрузить(,"Покупка,Участник");
	СПЗаказыТК.ПолучитьАдресаНаТЗЗаказов(ТЗ)
КонецПроцедуры

&НаКлиенте
Процедура Взвесить(Команда)
	формаОтправления=ПолучитьФорму("Документ.ОтправлениеТранзита.Форма.ФормаДокумента",новый Структура("ГруппаДоставки,ТочкаНазначения",Объект.Ссылка,Объект.ТочкаНазначения));
	ДанныеФормы = формаОтправления.Объект;
	ВзвеситьНаСервере(ДанныеФормы);
	КопироватьДанныеФормы(ДанныеФормы, формаОтправления.Объект);
	формаОтправления.Открыть();
КонецПроцедуры

Процедура ВзвеситьНаСервере(ДанныеФормы)
	
	
	
	
КонецПроцедуры	

&НаКлиенте
Процедура ОбновитьССайта(Команда)
	списокКодов = новый СписокЗначений;
	списокКодов.Добавить(Объект.Ссылка);
	СтоСПОбмен_ГруппыДоставки.Загрузить_ПоКодам(списокКодов);
	Прочитать();
	ОбновитьОтображениеДанных();
	ОповеститьОбИзменении(Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура СоставУдалитьПриИзменении(Элемент)
	Элементы.Состав.ТекущиеДанные.Исключить = не Элементы.Состав.ТекущиеДанные.Удалить;
КонецПроцедуры

&НаКлиенте
Процедура СоставИсключитьПриИзменении(Элемент)
	Элементы.Состав.ТекущиеДанные.Удалить = не Элементы.Состав.ТекущиеДанные.Исключить;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Вставить содержимое обработчикаОбъект
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Вставить содержимое обработчика
КонецПроцедуры


#Область УдалениеЗаказовИзГруппы
&НаКлиенте
Процедура УдалитьЗаказИзГруппы(Команда)
	УдалитьЗаказИзГруппыНаСервере();
	ОбновитьССайта(Неопределено);
КонецПроцедуры


&НаСервере
Процедура УдалитьЗаказИзГруппыНаСервере()
	тз = Объект.Состав.Выгрузить(новый структура("Удалить", истина),"Покупка, КодЗаказа");
	ПокупкиДляУдаления	= тз.выгрузитьКолонку("Покупка");
	КодыЗаказаДляУдаления	= тз.выгрузитьКолонку("КодЗаказа");
	УчастникДляУдаления	= Объект.УчастникГД;
	ПунктВыдачи			= Объект.ТочкаНазначения;
	УдалитьДвижениеТовара(ПокупкиДляУдаления, УчастникДляУдаления, ПунктВыдачи);
	УдалитьЗаказы(КодыЗаказаДляУдаления,УчастникДляУдаления, Объект.Ссылка);
КонецПроцедуры


Процедура УдалитьДвижениеТовара(ПокупкиДляУдаления, УчастникДляУдаления, ПунктВыдачиГруппыДоставки)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ОстаткиТоваров.Регистратор
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров КАК ОстаткиТоваров
		|ГДЕ
		|	ОстаткиТоваров.Участник = &УчастникДляУдаления
		|	И ОстаткиТоваров.Покупка.Покупка В (&ПокупкиДляУдаления)
		|	И ТИПЗНАЧЕНИЯ(ОстаткиТоваров.Регистратор) = ТИП(Документ.Движение)
		|	И ОстаткиТоваров.Регистратор.ТочкаНазначения = &ПунктВыдачиГруппыДоставки
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиТоваров.Регистратор";
	
	Запрос.УстановитьПараметр("УчастникДляУдаления", УчастникДляУдаления);
	Запрос.УстановитьПараметр("ПокупкиДляУдаления", ПокупкиДляУдаления);
	Запрос.УстановитьПараметр("ПунктВыдачиГруппыДоставки", ПунктВыдачиГруппыДоставки);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		докДвижения	= Выборка.Регистратор.ПолучитьОбъект();
		строкиДляУдаления	= новый Массив();
		Для каждого элем из докДвижения.покупки Цикл
			Если 	элем.Участник = УчастникДляУдаления и
					ПокупкиДляУдаления.найти(элем.покупка.покупка)<>Неопределено Тогда
				строкиДляУдаления.Добавить(элем);						
			КонецЕсли;
		КонецЦикла;
		Для каждого заказ из строкиДляУдаления Цикл
			докДвижения.покупки.Удалить(заказ);
		КонецЦикла;
			докДвижения.Записать(РежимЗаписиДокумента.Проведение)
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьЗаказы(КодыЗаказаДляУдаления,УчастникДляУдаления, ГруппаДоставки)
	
	СтрокаПротокола						= 	новый Структура ("ДатаНачала, ДатаОкончания,Отправили, Результат, ПолученныеДанные");
	СтрокаПротокола.Отправили			= 	ПолучитьТекстЗапросаУдаленияЗаказаИзГруппы(КодыЗаказаДляУдаления,УчастникДляУдаления, ГруппаДоставки);
	СтрокаПротокола.ДатаНачала			=	ТекущаяДата();

	Параметры    						= новый Структура;
	АдресСкрипта 						= Константы.АдресВыгрузкиНасайт.Получить();
	Параметры.Вставить("token",	Константы.Токен.Получить());
	Параметры.Вставить("xml", 	СтрокаПротокола.Отправили);

	ПолученныйФайл						= СтоСПОбмен_Общий.ПолучитьПостЗапросом(Параметры,АдресСкрипта);
	
	Если ПолученныйФайл=Неопределено Тогда 		
		СтрокаПротокола.Результат		= "Не удалось соеденится с сайтом"; 
		СтрокаПротокола.ДатаОкончания	= ТекущаяДата();
		Возврат;	
	КонецЕсли; 
	Если аспПроцедурыОбменаДанными.АвторизацияВыполнена(ПолученныйФайл) Тогда
		СтрокаПротокола.Результат="Авторизация выполнена";
	Иначе
		СтрокаПротокола.Результат="Авторизация не выполнена";
	КонецЕсли;	
	
	СтрокаПротокола.ПолученныеДанные	= СтоСПОбмен_Общий.ФайлВСтроку(ПолученныйФайл);
	СтрокаПротокола.ДатаОкончания		= ТекущаяДата();
	//СтоСПОбмен_Выгрузка100сп.СохранитьПротоколОбмена(СтрокаПротокола,ДокументПротокола);
	
КонецПроцедуры

функция   ПолучитьТекстЗапросаУдаленияЗаказаИзГруппы(КодыЗаказаДляУдаления,УчастникДляУдаления, ГруппаДоставки)
	 ЗаписьXML=новый ЗаписьXML;
	 ЗаписьXML.УстановитьСтроку("UTF-8");
	 ЗаписьXML.ЗаписатьНачалоЭлемента("distributors");
	 
	 ЗаписьXML.ЗаписатьАтрибут("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance");
	 ЗаписьXML.ЗаписатьАтрибут("xmlns:xsd","http://www.w3.org/2001/XMLSchema");
	 	
	 Для каждого стр из КодыЗаказаДляУдаления Цикл 
		 ЗаписьXML.ЗаписатьНачалоЭлемента("groupsUnlink");
			 ЗаписьXML.ЗаписатьНачалоЭлемента("group");
			 
					 ЗаписьXML.ЗаписатьНачалоЭлемента("delivery_group_id");
					 	ЗаписьXML.ЗаписатьТекст(Формат(Число(СтрЗаменить(ГруппаДоставки.Код,"гд_","")),"ЧГ=0"));
					 ЗаписьXML.ЗаписатьКонецЭлемента();
					 
					 ЗаписьXML.ЗаписатьНачалоЭлемента("orderType");
					 	ЗаписьXML.ЗаписатьТекст("sp");
					 ЗаписьXML.ЗаписатьКонецЭлемента();
					 

						 ЗаписьXML.ЗаписатьНачалоЭлемента("orderId");
						 ЗаписьXML.ЗаписатьТекст(Формат(стр,"ЧГ=0"));
						 ЗаписьXML.ЗаписатьКонецЭлемента();
					 
					 ЗаписьXML.ЗаписатьНачалоЭлемента("uid");
					 	ЗаписьXML.ЗаписатьТекст(Формат(УчастникДляУдаления.Код,"ЧГ=0"));
					 ЗаписьXML.ЗаписатьКонецЭлемента();
					 
					 
			 
			 ЗаписьXML.ЗаписатьКонецЭлемента();
		 ЗаписьXML.ЗаписатьКонецЭлемента();		 
		 
	КонецЦикла;	
	 ЗаписьXML.ЗаписатьКонецЭлемента();	
	 
	ОтправленныеДанные = ЗаписьXML.Закрыть();	
	ОтправленныеДанные = СтрЗаменить(ОтправленныеДанные,"xmlns=""http://www.100sp.ru/XMLSchema-instance"" ","");
	Возврат ОтправленныеДанные;
КонецФункции	

	
#КонецОбласти

