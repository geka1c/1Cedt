Процедура Тест() Экспорт
	//ДанныеОДиске();
	//МетаинформацияОФайлеПапке(новый Структура("path", "disk:/FreeStorage"))
	//ПлоскийСписокВсехФайлов();
	
	параметры = новый Структура;
	параметры.Вставить("ПутьКФайлу",	"/FreeStorage/032020");
	параметры.Вставить("ТелоФайла",		"жрпжукоб псупшрсуцтзкпшгруцзсрячшмгрвыж");
	ВыгрузитьНаДиск(Параметры);
	
	
	
КонецПроцедуры

Функция ВыгрузитьНаДиск(Параметры)
	
	параметрыURL = новый Структура;
	параметрыURL.Вставить("path",		Параметры.ПутьКФайлу);
	параметрыURL.Вставить("overwrite",	"true");
	//параметрыURL.Вставить("fields",	"true");
	
	Результат = ЗапросURLДляЗагрузки(параметрыURL);
	позиция = СтрНайти(Результат.href, "/upload-target");
	длина   = СтрДлина(Результат.href);	
	сервер = СтрЗаменить(Лев(Результат.href, позиция - 5),"https://","");
	скрипт = Прав(Результат.href, длина-позиция+1 );
	
	параметрыДиск = новый Структура;
	параметрыДиск.Вставить("Сервер",		сервер);
	параметрыДиск.Вставить("скрипт",		скрипт);
	параметрыДиск.Вставить("ТелоФайла",		Параметры.ТелоФайла);
	Возврат ВыполнитьПУТЗапрос(параметрыДиск);

КонецФункции



функция ЗапросURLДляЗагрузки(Параметры)
	
//	path 		- путь, по которому следует загрузить файл
//	overwrite 	- признак перезаписи
//	fields 		- свойства, которые нужно включить в ответ

	скрипт 		= ПолучитьСкриптСПараметрами("/v1/disk/resources/upload", параметры);
	
	параметры 	= Новый Структура("скрипт", скрипт);
	Результат 	= ВыполнитьЗапрос(Параметры);
	возврат Результат;	
КонецФункции	

Процедура 	ДанныеОДиске() Экспорт
	
	скрипт = "/v1/disk/";
	параметры = Новый Структура("скрипт", скрипт);
	Результат = ВыполнитьЗапрос(Параметры);

КонецПроцедуры

Процедура 	МетаинформацияОФайлеПапке(Параметры)
	
	скрипт = "/v1/disk/resources";
	скрипт = скрипт + "?" + "path=" + Параметры.path;
	
	имяПараметра = "fields";
	Если параметры.Свойство(имяПараметра) Тогда
		скрипт = скрипт + "&" + параметры[имяПараметра]; 
	КонецЕсли;	

	имяПараметра = "limit";
	Если параметры.Свойство(имяПараметра) Тогда
		скрипт = скрипт + "&" + параметры[имяПараметра]; 
	КонецЕсли;	
	имяПараметра = "offset";
	Если параметры.Свойство(имяПараметра) Тогда
		скрипт = скрипт + "&" + параметры[имяПараметра]; 
	КонецЕсли;	
	имяПараметра = "preview_crop";
	Если параметры.Свойство(имяПараметра) Тогда
		скрипт = скрипт + "&" + параметры[имяПараметра]; 
	КонецЕсли;	
	имяПараметра = "preview_size";
	Если параметры.Свойство(имяПараметра) Тогда
		скрипт = скрипт + "&" + параметры[имяПараметра]; 
	КонецЕсли;	
	имяПараметра = "sort";
	Если параметры.Свойство(имяПараметра) Тогда
		скрипт = скрипт + "&" + параметры[имяПараметра]; 
	КонецЕсли;	


	
	параметры = Новый Структура("скрипт", скрипт);
	Результат = ВыполнитьЗапрос(Параметры);
	
КонецПроцедуры


Процедура 	ПлоскийСписокВсехФайлов(Параметры = неопределено)

	// limit 		- количество файлов в списке
	// media_type 	- тип запрашиваемых файлов
	// offset		- смещение относительно начала списка
	// fields		- свойства, которые нужно включить в ответ
	// preview_crop - признак обрезки превью
	// preview_size - размер превью
	
	

	скрипт = ПолучитьСкриптСПараметрами("/v1/disk/resources/files", параметры);
	
	параметры = Новый Структура("скрипт", скрипт);
	Результат = ВыполнитьЗапрос(Параметры);
	
КонецПроцедуры

Функция 	ВыполнитьЗапрос(Параметры) 
	Токен = "AgAAAAA-MkdCAADLW1WmbGYjNEwohzZGkw--t9Q";
	Соединение = Новый HTTPСоединение("cloud-api.yandex.net", 443, , , , , Новый ЗащищенноеСоединениеOpenSSL);
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
	Заголовки.Вставить("Authorization", "OAuth " + Токен);

	//Запрос = Новый HTTPЗапрос("/v1/disk/resources/files?path=app:/", Заголовки);
	Запрос = Новый HTTPЗапрос(Параметры.скрипт, Заголовки);
	
	Ответ = Соединение.Получить(Запрос);
	Если Ответ.КодСостояния = 200 Тогда
		Джейсон = Новый ЧтениеJSON;
		Джейсон.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
		Данные = ПрочитатьJSON(Джейсон);
		Возврат Данные;
	КонецЕсли;
КонецФункции

Функция ВыполнитьПУТЗапрос(Параметры) Экспорт 

   ЗаголовокHTTP 		= Новый Соответствие();
    СтрокаСоединения 	= СтрокаСоединенияИнформационнойБазы();
    СерверИсточник 		= НСтр(СтрокаСоединения, "Srvr") + НСтр(СтрокаСоединения, "Ref");

    ЗаголовокHTTP.Вставить("Referer", СерверИсточник);
    ЗаголовокHTTP.Вставить("Content-Type", "application/json; charset=utf-8");
	
	ССЛ			= Новый ЗащищенноеСоединениеOpenSSL;
	НТТР 		= Новый HTTPСоединение(параметры.сервер,443,,,,,ССЛ);
	
	Запрос		= новый HTTPЗапрос(Параметры.скрипт, ЗаголовокHTTP);
	Запрос.УстановитьТелоИзСтроки(Параметры.ТелоФайла);
	
	ответ 		= НТТР.Записать(Запрос);
	Если Ответ.КодСостояния = 201 тогда
		возврат истина;
	КонецЕсли;	
	возврат ответ;
КонецФункции


	

функция 	ПолучитьСкриптСПараметрами(скрипт, параметры)
	если параметры = неопределено Тогда возврат скрипт КонецЕсли;
	певый = истина;
	
	строкаПараметров = "";
	для каждого элем из Параметры Цикл
		Если параметры.Свойство(элем.Ключ) Тогда
			Если певый = истина Тогда
				строкаПараметров = строкаПараметров + "?" + элем.Ключ + "=" + Параметры[элем.Ключ];
				певый = ложь;
			Иначе				
				строкаПараметров = строкаПараметров + "&" + элем.Ключ + "=" + Параметры[элем.Ключ];
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	скрипт = скрипт + СтрЗаменить(строкаПараметров, "/" , "%2F");
	Возврат скрипт;			
КонецФункции	
