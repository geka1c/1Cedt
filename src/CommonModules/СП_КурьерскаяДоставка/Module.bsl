Функция ДокументКурьерскойДоставки_из_Api(стр, документДоставки = неопределено) экспорт
	
	Если документДоставки = Неопределено Тогда
		документНайден		= Документы.КурьерскаяДоставка.НайтиПоНомеру(стр.id);
		Если ЗначениеЗаполнено(документНайден) Тогда
			документДоставки = документНайден.ПолучитьОбъект();
		Иначе
			документДоставки 				= Документы.КурьерскаяДоставка.СоздатьДокумент();
			документДоставки.Номер			= стр.id;
			документДоставки.Дата			= ТекущаяДата();
		КонецЕсли;

	КонецЕсли;
	Если 	ЗначениеЗаполнено(ДокументДоставки.СтатусДоставки) и 
			ДокументДоставки.СтатусДоставки <> Перечисления.СтатусыДоставки.ОжидаетСборки Тогда 	
			стр.Ссылка	= документДоставки.Ссылка;
			Возврат документДоставки.Ссылка;
	КонецЕсли;

	документДоставки.ТочкаСбора					= СП_РаботаСоСправочниками.ПолучитьПунктВыдачиПо_Коду(стр.distributor_code);
	документДоставки.Статус						= Перечисления.СтатусыГруппыДоставки[стр.status];
	документДоставки.Участник					= СП_РаботаСоСправочниками.ПолучитьУчастникаПо_Коду(стр.uid);
	документДоставки.МинимальнаяДатаДоставки	= СтоСПОбмен_Общий.ДатаИзСтроки(стр.min_delivery_date);
	документДоставки.МаксимальнаяДатаДоставки	= СтоСПОбмен_Общий.ДатаИзСтроки(стр.max_delivery_date);
	документДоставки.СрокХраненияГруппы			= Число(стр.date_range_limit);
	документДоставки.ДатаСоздания				= СтоСПОбмен_Общий.ДатаИзСтроки(стр.created_at);
	документДоставки.ДатаМодификации			= СтоСПОбмен_Общий.ДатаИзСтроки(стр.updated_at);
	документДоставки.МетодОплаты				= ?(стр.payment_method = "",Перечисления.МетодыОплаты.ПустаяСсылка(),Перечисления.МетодыОплаты[стр.payment_method]);
	документДоставки.СтатусДоставки 			= Перечисления.СтатусыДоставки.ОжидаетСборки;
	
	

	ДокументДоставки.Заказы.Очистить();
	для каждого заказ из стр.orders.order Цикл
		новыйЗаказ		= ДокументДоставки.Заказы.Добавить();
		новыйЗаказ.КодЗаказа 				= заказ.orderId;
		новыйЗаказ.Покупка					= СП_РаботаСоСправочниками.ПолучитьЗаказПоXDTO(заказ,"orderType");
		новыйЗаказ.ОбъявленнаяСтоимость		= заказ.payment_sum;
		Если заказ.packages <> Неопределено Тогда
			Для Каждого посылка Из заказ.packages.package Цикл
				ЗаказСПосылкой = ДокументДоставки.ЗаказыСПосылками.Добавить();
				ЗаполнитьЗначенияСвойств(ЗаказСПосылкой, новыйЗаказ);
				ЗаказСПосылкой.Посылка	= СП_РаботаСоСправочниками.ПолучитьПосылкуПо_Коду(Посылка);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;	
	//	ТочкаНазначения		= СП_РаботаСоСправочниками.ПолучитьПунктВыдачиПо_Коду(стр.recipient_code);

	ДокументДоставки.Догрузить = (ДокументДоставки.ЗаказыСПосылками.Количество()=0);
	
	Попытка
			документДоставки.Записать();
			стр.Ссылка	= документДоставки.Ссылка;
		Возврат документДоставки.Ссылка;
	Исключение
		ТекстСообщения = "Не удалось создать документ Курьерской доставки №"+стр.id+Символы.ПС+
						ОписаниеОшибки();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецПопытки;
	

	Возврат Неопределено;			
	
КонецФункции


Функция ТекстЗапроса_Счет_Api(ДокументКД)	Экспорт
	 ЗаписьXML=новый ЗаписьXML;
	 ЗаписьXML.УстановитьСтроку("UTF-8");
	 ЗаписьXML.ЗаписатьНачалоЭлемента("distributors");
	 
	 ЗаписьXML.ЗаписатьАтрибут("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance");
	 ЗаписьXML.ЗаписатьАтрибут("xmlns:xsd","http://www.w3.org/2001/XMLSchema");
	 	
	 
		 ЗаписьXML.ЗаписатьНачалоЭлемента("groupsBill");
			 ЗаписьXML.ЗаписатьНачалоЭлемента("group");
			 
				 ЗаписьXML.ЗаписатьНачалоЭлемента("delivery_group_id");
				 	ЗаписьXML.ЗаписатьТекст(ДокументКД.номер);
				 ЗаписьXML.ЗаписатьКонецЭлемента();
				 
				 ЗаписьXML.ЗаписатьНачалоЭлемента("weight");
				 	ЗаписьXML.ЗаписатьТекст(Формат(0,"ЧГ=0"));
				 ЗаписьXML.ЗаписатьКонецЭлемента();
				 
				 ЗаписьXML.ЗаписатьНачалоЭлемента("width");
				 	ЗаписьXML.ЗаписатьТекст(Формат(0,"ЧГ=0"));
				 ЗаписьXML.ЗаписатьКонецЭлемента();
				 
				 ЗаписьXML.ЗаписатьНачалоЭлемента("height");
				 	ЗаписьXML.ЗаписатьТекст(Формат(0,"ЧГ=0"));
				 ЗаписьXML.ЗаписатьКонецЭлемента();
	 
				 ЗаписьXML.ЗаписатьНачалоЭлемента("length");
				 	ЗаписьXML.ЗаписатьТекст(Формат(0,"ЧГ=0"));
				 ЗаписьXML.ЗаписатьКонецЭлемента();
	 
				 ЗаписьXML.ЗаписатьНачалоЭлемента("prepay_price");
				 	ЗаписьXML.ЗаписатьТекст(Формат(ДокументКД.СтоимостьДоставки,"ЧДЦ=2; ЧГ=0"));
				 ЗаписьXML.ЗаписатьКонецЭлемента();
	 
				 ЗаписьXML.ЗаписатьНачалоЭлемента("cod_price");
				 	ЗаписьXML.ЗаписатьТекст(Формат(ДокументКД.СтоимостьДоставки,"ЧДЦ=2; ЧГ=0"));
				 ЗаписьXML.ЗаписатьКонецЭлемента();
				 
				 ЗаписьXML.ЗаписатьНачалоЭлемента("bill_date");
				 	ЗаписьXML.ЗаписатьТекст(Строка(ДокументКД.Дата));
				 ЗаписьXML.ЗаписатьКонецЭлемента();
				 
			 ЗаписьXML.ЗаписатьКонецЭлемента();
		 ЗаписьXML.ЗаписатьКонецЭлемента();		 
		 

	 ЗаписьXML.ЗаписатьКонецЭлемента();	
	ТекстЗапроса = ЗаписьXML.Закрыть();	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"xmlns=""http://www.100sp.ru/XMLSchema-instance"" ","");
	Возврат ТекстЗапроса;	
КонецФункции	

Функция Статистика() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КурьерскаяДоставка.Статус,
		|	СУММА(1) КАК КоличествоЗаказов
		|ИЗ
		|	Документ.КурьерскаяДоставка КАК КурьерскаяДоставка
		|ГДЕ
		|		КурьерскаяДоставка.СтатусДоставки <> ЗНАЧЕНИЕ(Перечисление.СтатусыДоставки.Отправлен)
		|	 и 	КурьерскаяДоставка.СтатусДоставки <> ЗНАЧЕНИЕ(Перечисление.СтатусыДоставки.Отменен)
		|СГРУППИРОВАТЬ ПО
		|	КурьерскаяДоставка.Статус";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Результат = новый структура;
	
		
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Результат.Вставить(ВыборкаДетальныеЗаписи.статус.имя,ВыборкаДетальныеЗаписи.количествоЗаказов);	// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции	