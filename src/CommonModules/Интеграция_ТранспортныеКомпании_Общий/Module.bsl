Процедура  РасчитатьСтоимостьОтправления(ДокументОтправления) Экспорт
	если Ложь Тогда
		ДокументОтправления = Документы.ОтправлениеТранзита.СоздатьДокумент();
	КонецЕсли;	
	
	Параметры = Новый Структура;
	Параметры.Вставить("ДатаДокумента",			ДокументОтправления.Дата);  		
	Параметры.Вставить("ОбъявленнаяСтоимость",	ДокументОтправления.ОбъявленнаяСтоимость);  		
	Параметры.Вставить("Хрупкое",				ДокументОтправления.Хрупкое);
	Параметры.Вставить("ИндексОтправителя", 	ДокументОтправления.ИндексОтправителя);  	
	Параметры.Вставить("ИндексПолучателя", 		ДокументОтправления.Индекс);  	
	
	Параметры.Вставить("Тип", 					ДокументОтправления.тип);
	Параметры.Вставить("Вес", 					ДокументОтправления.вес);
	Параметры.Вставить("Высота", 				ДокументОтправления.Высота);
	Параметры.Вставить("Ширина", 				ДокументОтправления.ширина);
	Параметры.Вставить("Длина", 				ДокументОтправления.Длина);
	
	Если Параметры.Тип = "postMail" или Параметры.Тип = "ems" Тогда
		Параметры.Вставить("ЭтоEMS", 		   (ДокументОтправления.ТочкаНазначения = СП_РаботаСоСправочниками.ПолучитьПунктВыдачиПо_Коду("0021")));
		Параметры.Вставить("КатегорияРПО", 		ДокументОтправления.КатегорияРПО);  	
		Параметры.Вставить("ВидРПО", 			ДокументОтправления.ВидРПО);  	
		Параметры.Вставить("Негаборит",			ДокументОтправления.Негаборит);  
		МодульИнтеграции = Интеграция_ПочтаРоссии;
	ИначеЕсли Параметры.Тип = "boxberry" или Параметры.Тип = "boxberryCourier" Тогда
		Параметры.Вставить("КодПС",				ДокументОтправления.ПунктПриема.Код);			//ПунктСдачи	
		Параметры.Вставить("КодПВЗ",			ДокументОтправления.КодПВЗ);					//ПунктПолучения
		
		МодульИнтеграции = Интеграция_BoxBerry;
	ИначеЕсли Параметры.Тип = "sdec" или Параметры.Тип = "sdecCourier" Тогда
		Параметры.Вставить("Логин",					ДокументОтправления.ТочкаНазначения.АккаунтДляОбменаСТК);
		Параметры.Вставить("Пароль",				ДокументОтправления.ТочкаНазначения.ПарольДляОбменаСТК);
		Параметры.Вставить("Тариф",					ДокументОтправления.Тариф.КодТарифа);
		Параметры.Вставить("КодГородаОтправителя",	ДокументОтправления.ГородОтправитель.Код);
		Параметры.Вставить("КодГородаПолучателя", 	ДокументОтправления.cityCode);
		Параметры.Вставить("ТяжелыйГруз", 			ДокументОтправления.ТяжелыйГруз);

		МодульИнтеграции = ОбменДаннымиСДЭК;
	ИначеЕсли Параметры.Тип = "dpd" Тогда
		Параметры.Вставить("Город",				ДокументОтправления.Город);
		Параметры.Вставить("КодПВЗ",			ДокументОтправления.КодПВЗ);					//ПунктПолучения
		Параметры.Вставить("УслугаDPD",			ДокументОтправления.УслугаDPD);
		МодульИнтеграции = Интеграция_DPD;
	ИначеЕсли Параметры.Тип = "" Тогда
		
	Конецесли;		
	
	Протокол			=  МодульИнтеграции.РассчитатьСтоимость(Параметры);
	строка_Протокола 	= ДокументОтправления.ПротоколыПередач.Добавить();
	ЗаполнитьЗначенияСвойств(строка_Протокола, Протокол);
	Если Протокол.Результат = "error" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Протокол.ТекстОшибки);
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ДокументОтправления, Протокол,"ТарифТК, РасчетКалькулятора");
КонецПроцедуры

Процедура СформироватьЗаказ(ДокументОтправления) Экспорт
	если Ложь Тогда ДокументОтправления = Документы.ОтправлениеТранзита.СоздатьДокумент(); КонецЕсли;
	Параметры = новый Структура;
	Параметры.Вставить("Тип", 					ДокументОтправления.тип);
	Параметры.Вставить("Вес",					ДокументОтправления.Вес);
	Параметры.Вставить("Длина",					ДокументОтправления.Длина);
	Параметры.Вставить("Ширина",				ДокументОтправления.Ширина);
	Параметры.Вставить("Высота",				ДокументОтправления.Высота);
	Параметры.Вставить("Хрупкое",				ДокументОтправления.Хрупкое);
	Параметры.Вставить("ОбъявленнаяСтоимость",	ДокументОтправления.ОбъявленнаяСтоимость);
	Параметры.Вставить("МетодОплаты",			ДокументОтправления.Коробка.МетодОплаты);
	Параметры.Вставить("ФИО",					ДокументОтправления.ФИО);
	Параметры.Вставить("КодПВЗ",				ДокументОтправления.КодПВЗ);                        //ПунктПолучения
	Параметры.Вставить("Телефон",				ДокументОтправления.Телефон);
	Параметры.Вставить("email",					ДокументОтправления.email);
	Параметры.Вставить("Город",					ДокументОтправления.Город);
	Параметры.Вставить("Индекс",				ДокументОтправления.Индекс);
	Параметры.Вставить("НомерЗаказа",			ДокументОтправления.Номер);							//Наш номер


	
	
	Если Параметры.Тип = "dpd" Тогда
		Параметры.Вставить("ДатаПриемаГруза",	ДокументОтправления.ДатаПриемаГруза);
		Параметры.Вставить("УслугаDPD",			ДокументОтправления.УслугаDPD);
		
		МодульИнтеграции = Интеграция_DPD;
	ИначеЕсли Параметры.Тип="boxberry" или Параметры.Тип="boxberryCourier" Тогда	
		Параметры.Вставить("ИтогоСтоимость",	ДокументОтправления.ИтогоСтоимость);			
		Параметры.Вставить("ТарифТК",			ДокументОтправления.ТарифТК);			
		Параметры.Вставить("КодПС",				ДокументОтправления.ПунктПриема.Код);			//ПунктСдачи	
		Параметры.Вставить("СоставЗаказа",		ДокументОтправления.Заказы.Выгрузить(,"НомерСтроки, Покупка, Количество"));
		Параметры.Вставить("Адрес",				ДокументОтправления.Адрес);			
		
		МодульИнтеграции = Интеграция_BoxBerry;
	ИначеЕсли Параметры.Тип="sdec"  или Параметры.Тип = "sdecCourier"  Тогда	
		Параметры.Вставить("ИтогоСтоимость",	ДокументОтправления.ИтогоСтоимость);			
		Параметры.Вставить("ТарифТК",			ДокументОтправления.ТарифТК);			
		Параметры.Вставить("КодПС",				ДокументОтправления.ПунктПриема.Код);			//ПунктСдачи	
		Параметры.Вставить("СоставЗаказа",		ДокументОтправления.Заказы.Выгрузить(,"НомерСтроки, Покупка, Количество"));
		
		МодульИнтеграции = ОбменДаннымиСДЭК;
		
	ИначеЕсли Параметры.Тип = "" Тогда
		
	Конецесли;	
	Протокол =  МодульИнтеграции.СозданиеЗаказаНаДоставку(Параметры);
	
	строка_Протокола = ДокументОтправления.ПротоколыПередач.Добавить();
	ЗаполнитьЗначенияСвойств(строка_Протокола, Протокол);
	Если Протокол.Результат = "error" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Протокол.ТекстОшибки);
	КонецЕсли;
	ДокументОтправления.НомерЗаказа	=	Протокол.ТрекНомер;
КонецПроцедуры	

Функция  ПолучитьНаклейки(СписокДокументовОтправления) экспорт
	Если ТипЗнч(СписокДокументовОтправления) = Тип("ДокументСсылка.ОтправлениеТранзита") или 
		 ТипЗнч(СписокДокументовОтправления) = Тип("ДокументОбъект.ОтправлениеТранзита")Тогда
		СписокДокументов = Новый СписокЗначений;
		СписокДокументов.Добавить(СписокДокументовОтправления);
	Иначе 	
		СписокДокументов = СписокДокументовОтправления;
	КонецЕсли;	
	
	тип = СписокДокументов[0].Значение.Тип;
	Если Тип = "dpd" тогда
		Возврат Интеграция_DPD.ПолучитьНаклейкиЗаказа(СписокДокументов);
	конецЕсли;
КонецФункции

Процедура УдалитьЗаказ(ДокументОтправления) Экспорт
	Параметры = новый Структура;
	Параметры.Вставить("Тип", 					ДокументОтправления.тип);

	Параметры.Вставить("НомерЗаказа",			ДокументОтправления.Номер);							//Наш номер
	Параметры.Вставить("НомерДПД",				ДокументОтправления.НомерЗаказа);							//Наш номер
	Если Параметры.Тип = "dpd" Тогда
		МодульИнтеграции = Интеграция_DPD;
	КонецЕсли;	
	Протокол =  МодульИнтеграции.УдалениеЗаказа(Параметры);
	строка_Протокола = ДокументОтправления.ПротоколыПередач.Добавить();
	ЗаполнитьЗначенияСвойств(строка_Протокола, Протокол);
	Если Протокол.Результат = "error" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Протокол.ТекстОшибки);
	Иначе	
		ДокументОтправления.НомерЗаказа	=	"";	
	КонецЕсли;
	
КонецПроцедуры



Функция ПолучитьСтруктуруПротокола(ВидОбмена = "Стоимость") Экспорт
	Если ВидОбмена = "Стоимость" Тогда
		ВидОбмена = Перечисления.ВидыОбменовСДЭК.СтоимостьПоТарифу ;
	КонецЕсли;	
	протокол = новый Структура;
	протокол.Вставить("ДатаНачала",				ТекущаяДата());
	протокол.Вставить("ОтправленныеДанные",		"");
	протокол.Вставить("ПолученныеДанные",		"");
	протокол.Вставить("ВидОбмена",				ВидОбмена);
	протокол.Вставить("ТекстОшибки", 			"");
	
	протокол.Вставить("ДатаОкончания");
	протокол.Вставить("Результат");
	Если ВидОбмена = Перечисления.ВидыОбменовСДЭК.СтоимостьПоТарифу Тогда
		протокол.Вставить("ТарифТК",			0);
		протокол.Вставить("РасчетКалькулятора",	"");
	ИначеЕсли ВидОбмена = Перечисления.ВидыОбменовСДЭК.СозданиеЗаказаНаДоставку Тогда	
		протокол.Вставить("ТрекНомер",			"");
	ИначеЕсли ВидОбмена = Перечисления.ВидыОбменовСДЭК.ПолучитьКвитанцию Тогда		
		протокол.Вставить("Файл",			"");
		Протокол.Вставить("ТипФайла",		"");
	КонецЕсли;
	Возврат протокол;
КонецФункции	

//
//Получаем представление Отправленных данных, когда взаимодействуем через Web servis
//
Функция ПолучитьОтправляемыеДанные(Параметры) экспорт
	Текст = "";
	Если ТипЗнч(Параметры) = тип("СписокЗначений") Тогда
		Для каждого элем из Параметры цикл
			Текст = Текст +"Документ: "+Элем.Значение.Номер+" от "+Элем.Значение.Номер+", трек:"+Элем.Значение.НомерЗаказа+", гуппа:"+Элем.Значение.Коробка+"."+Символы.ПС;
		КонецЦикла;	
	Конецесли;	
	Если ТипЗнч(Параметры) = тип("Структура") Тогда
		Для каждого элем из Параметры цикл
			Текст = Текст + элем.Ключ+ ": "+Элем.Значение+", "+Символы.ПС;
		КонецЦикла;	
	КонецЕсли;
	Возврат Текст;
КонецФункции	

