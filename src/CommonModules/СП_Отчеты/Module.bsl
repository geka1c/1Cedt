Функция ОтчетПоБесплатнойВыдаче(МесяцОтчета) Экспорт
	ПериодОтчета 			= новый СтандартныйПериод(НачалоМесяца(МесяцОтчета), КонецМесяца(МесяцОтчета));
	
	параметры				= новый Структура("ПериодОтчета", ПериодОтчета);
	СхемаКомпоновкиДанных 	= Отчеты.ОтчетПоБесплатнойВыдаче.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Вариант					= "ОтчетПоБесплатнойВыдачеДетальный";
	Возврат ПолучитьТаблицуОтчета(параметры, СхемаКомпоновкиДанных, Вариант);	
	
КонецФункции

Функция ОтчетПоБесплатнойВыдачеXLSX(имяФайла, МесяцОтчета) Экспорт
	
	ПериодОтчета 			= новый СтандартныйПериод(НачалоМесяца(МесяцОтчета), КонецМесяца(МесяцОтчета));
	
	параметры				= новый Структура("ПериодОтчета", ПериодОтчета);
	СхемаКомпоновкиДанных 	= Отчеты.ОтчетПоБесплатнойВыдаче.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Вариант					= "ОтчетПоБесплатнойВыдаче";
	ТабДок 					= ПолучитьОтчет(параметры, СхемаКомпоновкиДанных, Вариант);
	
	Попытка
		а =Новый файл(ИмяФайла);
		Если а.Существует() Тогда
			а.УстановитьТолькоЧтение(Ложь);
		КонецЕсли;

		ТабДок.Записать(ИмяФайла, ТипФайлаТабличногоДокумента.XLSX);
		Возврат ИмяФайла;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		Возврат "";
	КонецПопытки;

КонецФункции





Функция ПолучитьТаблицуОтчета(Параметры, СхемаКомпоновкиДанных, Вариант) Экспорт

	КомпоновщикНастроек		= Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	КомпоновщикНастроек.ЗагрузитьНастройки(
		СхемаКомпоновкиДанных.ВариантыНастроек[Вариант].Настройки);

	Настройки 			= КомпоновщикНастроек.Настройки;
	Для Каждого элем Из параметры Цикл
		ПараметрДанных 					= Настройки.ПараметрыДанных.Элементы.Найти(элем.Ключ);
		ПараметрДанных.Значение 		= элем.Значение;
		ПараметрДанных.Использование	= Истина;	
	КонецЦикла;
	КомпоновщикМакета 	= Новый КомпоновщикМакетаКомпоновкиДанных;

	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, , , Тип(
		"ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
		
	ВнешниеНаборыДанных = Новый Структура;
//	ВнешниеНаборыДанных.Вставить("сверка", ТЗ_Сверка);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, );

	Результат = Новый ТаблицаЗначений;
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

	Возврат Результат;
КонецФункции


Функция ПолучитьОтчет(Параметры, СхемаКомпоновкиДанных, Вариант) Экспорт

	КомпоновщикНастроек		= Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	КомпоновщикНастроек.ЗагрузитьНастройки(
		СхемаКомпоновкиДанных.ВариантыНастроек[Вариант].Настройки);

	Настройки 			= КомпоновщикНастроек.Настройки;
	Для Каждого элем Из параметры Цикл
		ПараметрДанных 					= Настройки.ПараметрыДанных.Элементы.Найти(элем.Ключ);
		ПараметрДанных.Значение 		= элем.Значение;
		ПараметрДанных.Использование	= Истина;	
	КонецЦикла;
	КомпоновщикМакета 	= Новый КомпоновщикМакетаКомпоновкиДанных;

	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, , , Тип(
		"ГенераторМакетаКомпоновкиДанных"));
		
	ВнешниеНаборыДанных = Новый Структура;
//	ВнешниеНаборыДанных.Вставить("сверка", ТЗ_Сверка);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, );

	Результат = Новый ТабличныйДокумент();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент();;
	ПроцессорВывода.УстановитьДокумент(Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

	Возврат Результат;
КонецФункции