Процедура ДобавитьКомандыПечатиПоступлений(КомандыПечати) Экспорт
    КомандаПечати = КомандыПечати.Добавить();
    КомандаПечати.МенеджерПечати 	= "ЖурналДокументов.ВсеПриходы";
    КомандаПечати.Идентификатор 	= "ЧекПросмотр";
	КомандаПечати.Картинка 			= БиблиотекаКартинок.Печать;
    КомандаПечати.Представление 	= НСтр("ru = 'Чек просмотр'");
	
    КомандаПечати = КомандыПечати.Добавить();
    КомандаПечати.МенеджерПечати 	= "ЖурналДокументов.ВсеПриходы";
    КомандаПечати.Идентификатор 	= "Чек";
	КомандаПечати.Картинка 			= БиблиотекаКартинок.ПечатьСразу;
    КомандаПечати.Представление 	= НСтр("ru = 'Чек'");
	КомандаПечати.СразуНаПринтер	=истина;
	
    КомандаПечати = КомандыПечати.Добавить();
    КомандаПечати.МенеджерПечати 	= "ЖурналДокументов.ВсеПриходы";
    КомандаПечати.Идентификатор 	= "СписокУчастников";
	КомандаПечати.Картинка 			= БиблиотекаКартинок.Печать;
    КомандаПечати.Представление 	= НСтр("ru = 'Список участников'");
    
	КомандаПечати 							= КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати 			= "ЖурналДокументов.ВсеПриходы";
	КомандаПечати.Идентификатор 			= "ЧекПоОрганизаторам";
	КомандаПечати.Картинка 					= БиблиотекаКартинок.Печать;
	КомандаПечати.обработчик				= "СтоСП_Печать_Клиент.ЧекПоступленияПоОрганизаторам";
	КомандаПечати.Представление 			= НСтр("ru = 'Чек по организаторам'");
//	КомандаПечати.НеВыполнятьЗаписьВФорме	= Истина;	    

	КомандаПечати 							= КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати 			= "ЖурналДокументов.ВсеПриходы";
	КомандаПечати.Идентификатор 			= "СписокЗаказов";
	КомандаПечати.Картинка 					= БиблиотекаКартинок.Печать;
	КомандаПечати.обработчик				= "СтоСП_Печать_Клиент.СписокЗаказов";
	КомандаПечати.Представление 			= НСтр("ru = 'СписокЗаказов'");

    
КонецПроцедуры

Функция ТабДок_ЧекаПоступления(МассивОбъектов, ОбъектыПечати,МассивОрганизаторов = неопределено) Экспорт
   ТабДок = Новый ТабличныйДокумент;
	
   Макет = ПолучитьОбщийМакет("ПФ_MXL_ЧекПоступления");
   ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка");
   ОбластьСсылка 			= Макет.ПолучитьОбласть("Ссылка");
   ОбластьКоробка 			= Макет.ПолучитьОбласть("Коробка");
   ОбластьОрганизатор 		= Макет.ПолучитьОбласть("Организатор");
   ОбластьПокупка 			= Макет.ПолучитьОбласть("Покупка");
   ОбластьДетали 			= Макет.ПолучитьОбласть("Детали");
   ОбластьПодвал 			= Макет.ПолучитьОбласть("Подвал");
   ОбластьГабарит       	= Макет.ПолучитьОбласть("Габарит");
   
   ОбластьШапка.Параметры.НазваниеОрганизации=Константы.СвояТочка.Получить();
   ТабДок.Вывести(ОбластьШапка);

	Запрос = Новый Запрос;
	Если МассивОрганизаторов = неопределено Тогда
		Запрос.Текст = ПолучитьТекстЗапросаДляЧекаПоступления();
	Иначе
		Запрос.Текст = ПолучитьТекстЗапросаДляЧекаПоступления("ДляЧекаСОтборомПоОрганизаторам");
		Запрос.УстановитьПараметр("Организаторы", МассивОрганизаторов);	
	КонецЕсли;		
	
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Итого		= 0;
	ИтогоРуб 	= 0;
	Пока ВыборкаСсылка.Следующий() Цикл
		ОбластьСсылка.Параметры.Заполнить(ВыборкаСсылка);
		ТабДок.Вывести(ОбластьСсылка);
		ВыборкаКоробка = ВыборкаСсылка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаКоробка.Следующий() Цикл
			ОбластьКоробка.Параметры.Коробка=ВыборкаКоробка.Коробка.Наименование+
											 "; о:"+ВыборкаКоробка.Коробка.Организатор+
											 "; шт:"+ВыборкаКоробка.Коробка.Количество+
											 "; тчк:"+ВыборкаКоробка.Коробка.ТочкаНазначения;
			ТабДок.Вывести(ОбластьКоробка);
			ВыборкаОрганизатор = ВыборкаКоробка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
			Пока ВыборкаОрганизатор.Следующий() Цикл
				ОбластьОрганизатор.Параметры.Заполнить(ВыборкаОрганизатор);
				ТабДок.Вывести(ОбластьОрганизатор);
				ВыборкаПокупка = ВыборкаОрганизатор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
				Пока ВыборкаПокупка.Следующий() Цикл
					ОбластьПокупка.Параметры.Заполнить(ВыборкаПокупка);
					Если ТипЗнч(ВыборкаПокупка.Покупка) =Тип("СправочникСсылка.Коробки") Тогда
						ОбластьПокупка.Параметры.Покупка=ВыборкаПокупка.Покупка.Наименование+
						"; о:"+ВыборкаПокупка.Покупка.Организатор+
						"; шт:"+ВыборкаПокупка.Покупка.Количество+
						"; тчк:"+ВыборкаПокупка.Покупка.ТочкаНазначения;
					КонецЕсли;
					Если ТипЗнч(ВыборкаПокупка.Покупка) = Тип("СправочникСсылка.Пристрой") и
						ТипЗнч(ВыборкаПокупка.Ссылка)  = Тип("ДокументСсылка.ПоступлениеПристроя") Тогда
						ОбластьПокупка.Параметры.Покупка=ВыборкаПокупка.Покупка.Наименование+
						" - "+ВыборкаПокупка.Сумма + " руб.";
						ИтогоРуб	= ИтогоРуб + ВыборкаПокупка.Сумма;
					КонецЕсли;		
					ТабДок.Вывести(ОбластьПокупка);
					ВыборкаГабарит = ВыборкаПокупка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Пока ВыборкаГабарит.Следующий() Цикл
						ОбластьГабарит.Параметры.Заполнить(ВыборкаГабарит);
						ТабДок.Вывести(ОбластьГабарит);
						ВыборкаДетальныеЗаписи = ВыборкаГабарит.Выбрать();
						
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
							Если ТипЗнч(ВыборкаДетальныеЗаписи.Покупка) =Тип("СправочникСсылка.Коробки") Тогда
								ОбластьДетали.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
								ТабДок.Вывести(ОбластьДетали);
								Итого=Итого+1;
							Иначе
								Для сч=1 по ВыборкаДетальныеЗаписи.Количество Цикл
									ОбластьДетали.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
									ТабДок.Вывести(ОбластьДетали);
									Итого=Итого+1;
								КонецЦикла;
							КонецЕсли;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ОбластьПодвал.Параметры.Итого		= Итого;
	ОбластьПодвал.Параметры.ИтогоРуб	= ИтогоРуб;
	
	ТабДок.Вывести(ОбластьПодвал);
	ТабДок.АвтоМасштаб = Истина;
	Возврат ТабДок;
КонецФункции


Функция ТабДок_ЧекаПоступления_НЗ(ОбъектПечати) Экспорт
   ТабДок = Новый ТабличныйДокумент;
	
   Макет = ПолучитьОбщийМакет("ПФ_MXL_ЧекПоступления");
   ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка");
   ОбластьСсылка 			= Макет.ПолучитьОбласть("Ссылка");
   ОбластьКоробка 			= Макет.ПолучитьОбласть("Коробка");
   ОбластьОрганизатор 		= Макет.ПолучитьОбласть("Организатор");
   ОбластьПокупка 			= Макет.ПолучитьОбласть("Покупка");
   ОбластьДетали 			= Макет.ПолучитьОбласть("Детали");
   ОбластьПодвал 			= Макет.ПолучитьОбласть("Подвал");
   ОбластьГабарит       	= Макет.ПолучитьОбласть("Габарит");
   ОбластьРазделитель      	= Макет.ПолучитьОбласть("Разделитель");
   
   ОбластьШапка.Параметры.НазваниеОрганизации=Константы.СвояТочка.Получить();
   ТабДок.Вывести(ОбластьШапка);


	Итого		= 0;
	ИтогоРуб 	= 0;

		ОбластьСсылка.Параметры.Ссылка = "Отправление для "+ОбъектПечати.Участник;
		ТабДок.Вывести(ОбластьСсылка);

		ОбластьКоробка.Параметры.Коробка = ОбъектПечати.ТочкаНазначения;
		ТабДок.Вывести(ОбластьКоробка);


			Для каждого элем из ОбъектПечати.Заказы Цикл
					ОбластьПокупка.Параметры.Покупка 		= элем.Покупка.Наименование;
					ОбластьДетали.Параметры.Участник 		= элем.Покупка.Организатор;
					ОбластьДетали.Параметры.МестоХранения 	= элем.МестоХранения;
					ОбластьДетали.Параметры.НСтроки	 		= элем.НомерСтроки;
					
					ТабДок.Вывести(ОбластьРазделитель);
					ТабДок.Вывести(ОбластьПокупка);
					ТабДок.Вывести(ОбластьДетали);
			КонецЦикла;
		ТабДок.Вывести(ОбластьРазделитель);
	
//	ОбластьПодвал.Параметры.Итого		= Итого;
//	ОбластьПодвал.Параметры.ИтогоРуб	= ИтогоРуб;
//	
//	ТабДок.Вывести(ОбластьПодвал);
	ТабДок.АвтоМасштаб = Истина;
	Возврат ТабДок;
КонецФункции




Функция ТабДок_СпискаУчастников(МассивОбъектов, ОбъектыПечати) Экспорт
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьОбщийМакет("ПФ_MXL_СписокУчастниковПоступления");
	ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьУчастники 		= Макет.ПолучитьОбласть("Участники");
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПриходнаяПокупки.Ссылка КАК Ссылка,
	|	ПриходнаяПокупки.Участник КАК Участник
	|ПОМЕСТИТЬ Пред
	|ИЗ
	|	Документ.Приходная.Покупки КАК ПриходнаяПокупки
	|ГДЕ
	|	ПриходнаяПокупки.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ПоступлениеПристрояЗаказы.Ссылка,
	|	ПоступлениеПристрояЗаказы.Пристрой.Участник
	|ИЗ
	|	Документ.ПоступлениеПристроя.Заказы КАК ПоступлениеПристрояЗаказы
	|ГДЕ
	|	ПоступлениеПристрояЗаказы.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПриходнаяПосылки.Ссылка,
	|	ПриходнаяПосылки.Посылка.Участник
	|ИЗ
	|	Документ.Приходная.Посылки КАК ПриходнаяПосылки
	|ГДЕ
	|	ПриходнаяПосылки.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РазборКоробкиПокупки.Ссылка,
	|	РазборКоробкиПокупки.Участник
	|ИЗ
	|	Документ.РазборКоробки.Покупки КАК РазборКоробкиПокупки
	|ГДЕ
	|	РазборКоробкиПокупки.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РазборКоробкиПосылки.Ссылка,
	|	РазборКоробкиПосылки.Посылка.Участник
	|ИЗ
	|	Документ.РазборКоробки.Посылки КАК РазборКоробкиПосылки
	|ГДЕ
	|	РазборКоробкиПосылки.Ссылка В(&Ссылка)
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Пред.Ссылка КАК Ссылка,
	|	Пред.Участник КАК Участник
	|ИЗ
	|	Пред КАК Пред
	|
	|СГРУППИРОВАТЬ ПО
	|	Пред.Ссылка,
	|	Пред.Участник
	|ИТОГИ ПО
	|	Ссылка";
	Запрос.Параметры.Вставить("Ссылка", МассивОбъектов);
	
	РезультатЗапроса 	= Запрос.Выполнить();
	ВыборкаСсылка 		= РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);


	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	ТабДок.Вывести(ОбластьЗаголовок);
	Пока ВыборкаСсылка.Следующий() Цикл
		ОбластьШапка.Параметры.Заполнить(ВыборкаСсылка);
		ТабДок.Вывести(ОбластьШапка);
		
		ВыборкаУчастники = ВыборкаСсылка.Выбрать();
		Пока ВыборкаУчастники.Следующий() Цикл
			ОбластьУчастники.Параметры.Заполнить(ВыборкаУчастники);
			ТабДок.Вывести(ОбластьУчастники);
		КонецЦикла;
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	ТабДок.АвтоМасштаб = Истина;
	Возврат ТабДок;
КонецФункции


//Процедура ДобавитьКомандыПечатиПоступлениеПристроя(КомандыПечати) Экспорт
//    КомандаПечати = КомандыПечати.Добавить();
//    КомандаПечати.МенеджерПечати 	= "ЖурналДокументов.ВсеПриходы";
//    КомандаПечати.Идентификатор 	= "ЧекПросмотр";
//	КомандаПечати.Картинка 			= БиблиотекаКартинок.Печать;
//    КомандаПечати.Представление 	= НСтр("ru = 'Чек просмотр'");
//	
//    КомандаПечати = КомандыПечати.Добавить();
//    КомандаПечати.МенеджерПечати 	= "ЖурналДокументов.ВсеПриходы";
//    КомандаПечати.Идентификатор 	= "Чек";
//	КомандаПечати.Картинка 			= БиблиотекаКартинок.ПечатьСразу;
//    КомандаПечати.Представление 	= НСтр("ru = 'Чек'");
//	КомандаПечати.СразуНаПринтер	=истина;
//	
//    КомандаПечати = КомандыПечати.Добавить();
//    КомандаПечати.МенеджерПечати 	= "ЖурналДокументов.ВсеПриходы";
//    КомандаПечати.Идентификатор 	= "СписокУчастников";
//	КомандаПечати.Картинка 			= БиблиотекаКартинок.Печать;
//    КомандаПечати.Представление 	= НСтр("ru = 'Список участников'");
//КонецПроцедуры


 Функция ТабДок_РасходнаяЧекНЗ(объект) экспорт
	ТабДок 				= Новый ТабличныйДокумент;
	Макет 				= Документы.Расходная.ПолучитьМакет("ПФ_MXL_Чек");
	
	Шапка 				= Макет.ПолучитьОбласть("Шапка");
	ОбластьПокупкиШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПокупки 		= Макет.ПолучитьОбласть("Покупки");
	ОбластьПокупкиБВ	= Макет.ПолучитьОбласть("ПокупкиБВ");
	ОбластьБВИтог 		= Макет.ПолучитьОбласть("ОплачиваетОрганизатор");
	ОбластьПодвал 		= Макет.ПолучитьОбласть("Подвал");
	ЗаПоискНика 		= Макет.ПолучитьОбласть("ЗаПоискНика");

	ТабДок.Очистить();
	ВставлятьРазделительСтраниц = Ложь;
	Итого						=0;

	Шапка.Параметры.Дата				= ТекущаяДата();
	Шапка.Параметры.Номер				= "Не записан";
	Шапка.Параметры.НазваниеОрганизации	= Константы.НазваниеОрганизации.Получить();
	Шапка.Параметры.Участник			= Объект.Участник;
	Шапка.Параметры.КодУчастника		= Объект.Участник.Код;  
	Шапка.Параметры.КартаУчастника		=?(ЗначениеЗаполнено(Объект.КартаУчастника),Объект.КартаУчастника,"без карты");
	ТабДок.Вывести(Шапка);	
	
	нпп=1;
	ОплачиваетОрганизатор = 0;
	Для каждого ЭлемПокупки из Объект["Покупки"] Цикл
		Если ЭлемПокупки.БесплатнаяВыдача Тогда
			ОбластьВыводаПокупки = ОбластьПокупкиБВ;
			ОбластьВыводаПокупки.Параметры.ОплачиваетУчастник = ЭлемПокупки.ОплачиваетУчастник;
		Иначе
			ОбластьВыводаПокупки = ОбластьПокупки;
		КонецЕсли;		
		ОплачиваетОрганизатор = ОплачиваетОрганизатор + ЭлемПокупки.ОплачиваетОрганизатор;
		
		ОбластьВыводаПокупки.Параметры.нпп				= нпп;
		ОбластьВыводаПокупки.Параметры.Организатор		= ?(ТипЗнч(ЭлемПокупки.Покупка)=Тип("СправочникСсылка.Покупки"),ЭлемПокупки.Покупка.Владелец,ЭлемПокупки.Покупка.Организатор);
		ОбластьВыводаПокупки.Параметры.Покупка			= ЭлемПокупки.Покупка;
		ОбластьВыводаПокупки.Параметры.ПокупкаСпр		= ЭлемПокупки.ПокупкаСпр;
		ОбластьВыводаПокупки.Параметры.МестоХранения	= ?(ЭлемПокупки.МестоХранения.Родитель=Справочники.МестаХранения.ПустаяССылка(),ЭлемПокупки.МестоХранения,ЭлемПокупки.МестоХранения.Родитель.Наименование+"\"+ ЭлемПокупки.МестоХранения);
		ОбластьВыводаПокупки.Параметры.Габарит        	= ЭлемПокупки.Габарит;
		ОбластьВыводаПокупки.Параметры.ВремяХранения  	= ЭлемПокупки.ВремяХранения;

		ОбластьВыводаПокупки.Параметры.СтоимостьИтого		= ЭлемПокупки.СтоимостьИтого;
		Если ЭлемПокупки.Количество>1 Тогда
			ОбластьВыводаПокупки.Параметры.КоличествоМест	="мест: "+ЭлемПокупки.Количество;	
		КонецЕсли;	
		
		ТабДок.Вывести(ОбластьВыводаПокупки);
		Итого	= Итого	+ ЭлемПокупки.ОплачиваетУчастник;
		нпп		= нпп	+ 1;
	КонецЦикла;
	
	Если Объект.ПоискНикаСтоимость<>0 Тогда
		ЗаПоискНика.Параметры.ЗаПоискНика	= Объект.ПоискНикаСтоимость;
		ТабДок.Вывести(ЗаПоискНика);
	КонецЕсли;
	
	
	ОбластьПодвал.Параметры.Участник			= Объект.Участник;
	ОбластьПодвал.Параметры.Итого = Итого + Объект.ПоискНикаСтоимость;
	ОбластьБВИтог.Параметры.бесплатнаяВыдача = ОплачиваетОрганизатор;
	Если ОплачиваетОрганизатор > 0 Тогда
		ТабДок.Вывести(ОбластьБВИтог);
	КонецЕсли;	
		
	ТабДок.Вывести(ОбластьПодвал);
	возврат ТабДок;
КонецФункции // ПолучитМакетЧека()


  

Функция ТабДок_РасходнаяЧекНЗ_ПоУчастнику(Участник) Экспорт
	ТабДок				= Новый ТабличныйДокумент;
	Макет 				= Документы.Расходная.ПолучитьМакет("ПФ_MXL_Чек");
	Шапка 				= Макет.ПолучитьОбласть("Шапка");
	ОбластьПокупкиШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПокупки 		= Макет.ПолучитьОбласть("Покупки");
	ОбластьПодвал 		= Макет.ПолучитьОбласть("Подвал");
	ЗаПоискНика 		= Макет.ПолучитьОбласть("ЗаПоискНика");

	ВставлятьРазделительСтраниц = Ложь;
	Итого=0;
	
	Шапка.Параметры.Дата=ТекущаяДата();
	Шапка.Параметры.Номер="Не записан";
	Шапка.Параметры.НазваниеОрганизации=Константы.НазваниеОрганизации.Получить();
	Шапка.Параметры.Участник=Участник;
	Шапка.Параметры.КодУчастника=Участник.Код;
	ЗаПоискНика.Параметры.ЗаПоискНика=0;//ПоискНикаСтоимость;

	ТабДок.Вывести(Шапка);

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиТоваровОстатки.Габарит,
		|	ОстаткиТоваровОстатки.Участник,
		|	ОстаткиТоваровОстатки.МестоХранения,
		|	ОстаткиТоваровОстатки.Покупка,
		|	ОстаткиТоваровОстатки.Партия,
		|	ОстаткиТоваровОстатки.Оплачен,
		|	ОстаткиТоваровОстатки.Потерян,
		|	Покупки.Ссылка КАК ПокупкаСсылка,
		|	ОстаткиТоваровОстатки.КоличествоОстаток,
		|	РАЗНОСТЬДАТ(ОстаткиТоваровОстатки.Партия.Дата, &ДатаОтчета, ДЕНЬ) КАК ВремяХранения
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров.Остатки(, Участник = &Участник) КАК ОстаткиТоваровОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Покупки КАК Покупки
		|		ПО ОстаткиТоваровОстатки.Покупка = Покупки.Код
		|ГДЕ
		|	ОстаткиТоваровОстатки.КоличествоОстаток > 0";
    Запрос.УстановитьПараметр("ДатаОтчета", ТекущаяДата());
	Запрос.УстановитьПараметр("Участник", Участник);

	РезультатЗапр = Запрос.Выполнить();

	Выборка = РезультатЗапр.Выбрать();

	Пока Выборка.Следующий() Цикл
		ПокупкаСсылка	=	Выборка.Покупка;
		Если ТипЗнч(ПокупкаСсылка)=Тип("СправочникСсылка.Покупки") Тогда
			ОбластьПокупки.Параметры.Организатор=ПокупкаСсылка.Владелец.Наименование;
		Иначе
			ОбластьПокупки.Параметры.Организатор=ПокупкаСсылка.Организатор.Наименование;
		КонецЕсли;	
		ОбластьПокупки.Параметры.Покупка		= Выборка.Покупка.Код;
		ОбластьПокупки.Параметры.ПокупкаСпр		= ПокупкаСсылка.Наименование;
		ОбластьПокупки.Параметры.МестоХранения	= ?(Выборка.МестоХранения.Родитель=Справочники.МестаХранения.ПустаяССылка(),Выборка.МестоХранения,Выборка.МестоХранения.Родитель.Наименование+"\"+ Выборка.МестоХранения);
		ОбластьПокупки.Параметры.Габарит        = Выборка.Габарит;
		ОбластьПокупки.Параметры.ВремяХранения  = Выборка.ВремяХранения;
		
		СтоимостьХранения	= Выборка.Габарит.СтоимостьХранения;
		ХранитсяНаСкладе	= Выборка.Габарит.ДниХранения;
			если Выборка.ВремяХранения > ХранитсяНаСкладе тогда
				СтоимостьХранения=СтоимостьХранения+(Выборка.ВремяХранения-Выборка.Габарит.ДниХранения)*Выборка.Габарит.ДобавочнаяСтоимость ;
			КонецЕсли;

		ОбластьПокупки.Параметры.СтоимостьИтого  =СтоимостьХранения;
		ТабДок.Вывести(ОбластьПокупки);
		Итого= Итого+СтоимостьХранения;

	КонецЦикла;

	ОбластьПодвал.Параметры.Участник=Участник;
	ОбластьПодвал.Параметры.Итого=Итого;//+ПоискНикаСтоимость;
	ТабДок.Вывести(ОбластьПодвал);
	возврат ТабДок;
КонецФункции



 Функция ТабДок_ПередачаВозвратовОрганизаторуЧекНЗ(объект) экспорт
	ТабДок 				= Новый ТабличныйДокумент;
	Макет 				= Документы.ПередачаВозвратовОрганизатору.ПолучитьМакет("ПФ_MXL_Чек");
	
	
	ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка		= Макет.ПолучитьОбласть("Шапка");
	ОбластьПокупки 		= Макет.ПолучитьОбласть("Покупки");
	ОбластьПодвал 		= Макет.ПолучитьОбласть("Подвал");
	ТабДок.Очистить();
	
	СуммаИтого						= 0;
	КоличествоИтого					= 0;

	ТабДок.Вывести(ОбластьЗаголовок);

	ОбластьШапка.Параметры.Дата				= ТекущаяДата();
	ОбластьШапка.Параметры.Номер			= "Не записан";
	ОбластьШапка.Параметры.Получатель		= Объект.Получатель;
	ТабДок.Вывести(ОбластьШапка);	
	
	нпп=1;

	Для каждого ЭлемПокупки из Объект["Покупки"] Цикл
		
		ОбластьПокупки.Параметры.Заполнить(ЭлемПокупки);
		
		
		ТабДок.Вывести(ОбластьПокупки);
		
		СуммаИтого		= СуммаИтого 		+ ЭлемПокупки.Сумма;
		КоличествоИтого	= КоличествоИтого	+ ЭлемПокупки.Количество;
		
		нпп		= нпп	+ 1;
	КонецЦикла;

	ОбластьПодвал.Параметры.ИтогоШт 	= КоличествоИтого;
	ОбластьПодвал.Параметры.ИтогоРуб 	= СуммаИтого;

		
	ТабДок.Вывести(ОбластьПодвал);
	возврат ТабДок;
КонецФункции // ПолучитМакетЧека()


Функция ПолучитьТекстЗапросаДляЧекаПоступления(ТипЗапроса = "ДляЧека")
ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ПоступлениеПристрояЗаказы.Ссылка КАК Ссылка,
		|	ЗНАЧЕНИЕ(Справочник.Коробки.БезКоробки) КАК Коробка,
		|	ПоступлениеПристрояЗаказы.Пристрой КАК Покупка,
		|	ПоступлениеПристрояЗаказы.Пристрой.Участник КАК Участник,
		|	1 КАК Количество,
		|	ПоступлениеПристрояЗаказы.Габарит КАК Габарит,
		|	ПоступлениеПристрояЗаказы.Пристрой.УчастникОтправитель КАК Организатор,
		|	ПоступлениеПристрояЗаказы.МестоХранения КАК МестоХранения,
		|	ПоступлениеПристрояЗаказы.Сумма КАК Сумма
		|ПОМЕСТИТЬ ПРед
		|ИЗ
		|	Документ.ПоступлениеПристроя.Заказы КАК ПоступлениеПристрояЗаказы
		|ГДЕ
		|	ПоступлениеПристрояЗаказы.Ссылка В (&Ссылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПриходнаяПокупки.Ссылка,
		|	ЗНАЧЕНИЕ(Справочник.Коробки.БезКоробки),
		|	ПриходнаяПокупки.Покупка,
		|	ПриходнаяПокупки.Участник,
		|	ПриходнаяПокупки.Количество,
		|	ПриходнаяПокупки.Габарит,
		|	ПриходнаяПокупки.Организатор,
		|	ПриходнаяПокупки.МестоХранения,
		|	0
		|ИЗ
		|	Документ.Приходная.Покупки КАК ПриходнаяПокупки
		|ГДЕ
		|	ПриходнаяПокупки.Ссылка В (&Ссылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РазборКоробкиПокупки.Ссылка,
		|	РазборКоробкиПокупки.Коробка,
		|	РазборКоробкиПокупки.Покупка,
		|	РазборКоробкиПокупки.Участник,
		|	РазборКоробкиПокупки.Количество,
		|	РазборКоробкиПокупки.Габарит,
		|	РазборКоробкиПокупки.Организатор,
		|	РазборКоробкиПокупки.МестоХранения,
		|	0
		|ИЗ
		|	Документ.РазборКоробки.Покупки КАК РазборКоробкиПокупки
		|ГДЕ
		|	РазборКоробкиПокупки.Ссылка.Ссылка В (&Ссылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПриходнаяПокупки.Ссылка,
		|	ЗНАЧЕНИЕ(Справочник.Коробки.БезКоробки),
		|	ПриходнаяПокупки.Посылка,
		|	ПриходнаяПокупки.Посылка.Участник,
		|	1,
		|	ПриходнаяПокупки.Габарит,
		|	ПриходнаяПокупки.Посылка.Организатор,
		|	ПриходнаяПокупки.МестоХранения,
		|	0
		|ИЗ
		|	Документ.Приходная.Посылки КАК ПриходнаяПокупки
		|ГДЕ
		|	ПриходнаяПокупки.Ссылка В (&Ссылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РазборКоробкиПокупки.Ссылка,
		|	РазборКоробкиПокупки.Коробка,
		|	РазборКоробкиПокупки.Посылка,
		|	РазборКоробкиПокупки.Посылка.Участник,
		|	1,
		|	РазборКоробкиПокупки.Габарит,
		|	РазборКоробкиПокупки.Посылка.Организатор,
		|	РазборКоробкиПокупки.МестоХранения,
		|	0
		|ИЗ
		|	Документ.РазборКоробки.Посылки КАК РазборКоробкиПокупки
		|ГДЕ
		|	РазборКоробкиПокупки.Ссылка.Ссылка В (&Ссылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РазборКоробкиГруппыНаТранзит.Ссылка,
		|	ЗНАЧЕНИЕ(Справочник.Коробки.БезКоробки),
		|	РазборКоробкиГруппыНаТранзит.Коробка,
		|	РазборКоробкиГруппыНаТранзит.ПунктВыдачи,
		|	РазборКоробкиГруппыНаТранзит.Количество,
		|	РазборКоробкиГруппыНаТранзит.Габарит,
		|	РазборКоробкиГруппыНаТранзит.Коробка.Организатор,
		|	РазборКоробкиГруппыНаТранзит.МестоХранения,
		|	0
		|ИЗ
		|	Документ.РазборКоробки.ГруппыНаТранзит КАК РазборКоробкиГруппыНаТранзит
		|ГДЕ
		|	РазборКоробкиГруппыНаТранзит.Ссылка В (&Ссылка)
		|;
		|//ТекстЗапроса";	
		
		
		ТекстВыборкиОрганизаторов ="
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПРед.Организатор КАК Организатор
		|ИЗ
		|	ПРед КАК ПРед
		|СГРУППИРОВАТЬ ПО
		|	ПРед.Организатор";
		
		ТекстВыборкиДляЧекаСотборомПоОрганизатору ="
		|ВЫБРАТЬ
		|	ПРед.Ссылка КАК Ссылка,
		|	ПРед.Коробка КАК Коробка,
		|	ПРед.Покупка КАК Покупка,
		|	ПРед.Участник КАК Участник,
		|	ПРед.Количество КАК Количество,
		|	ПРед.Габарит КАК Габарит,
		|	ПРед.Организатор КАК Организатор,
		|	ПРед.МестоХранения КАК МестоХранения,
		|	ПРед.Сумма КАК Сумма
		|ИЗ
		|	ПРед КАК ПРед
		|ГДЕ
		|	ПРед.Организатор В (&Организаторы)
		|ИТОГИ
		|	СУММА(Сумма)
		|ПО
		|	Ссылка,
		|	Коробка,
		|	Организатор,
		|	Покупка,
		|	Габарит";
		
		ТекстВыборкиДляЧека =" 
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПРед.Ссылка КАК Ссылка,
		|	ПРед.Коробка КАК Коробка,
		|	ПРед.Покупка КАК Покупка,
		|	ПРед.Участник КАК Участник,
		|	ПРед.Количество КАК Количество,
		|	ПРед.Габарит КАК Габарит,
		|	ПРед.Организатор КАК Организатор,
		|	ПРед.МестоХранения КАК МестоХранения,
		|	ПРед.Сумма КАК Сумма
		|ИЗ
		|	ПРед КАК ПРед
		|ИТОГИ
		|	СУММА(Сумма)
		|ПО
		|	Ссылка,
		|	Коробка,
		|	Организатор,
		|	Покупка,
		|	Габарит";		
		
	Если ТипЗапроса = "Организаторы" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//ТекстЗапроса" , ТекстВыборкиОрганизаторов);
	ИначеЕсли ТипЗапроса = "ДляЧекаСОтборомПоОрганизаторам" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//ТекстЗапроса" , ТекстВыборкиДляЧекаСотборомПоОрганизатору);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//ТекстЗапроса" , ТекстВыборкиДляЧека);		
	КонецЕсли;			
		
Возврат ТекстЗапроса;
	
КонецФункции	

Функция ПолучитьОрганизаторовВЧекеПоступления(МассивОбъектов) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДляЧекаПоступления("Организаторы");
	
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();	
	Возврат РезультатЗапроса.Выгрузить()
КонецФункции	

