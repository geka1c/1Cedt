
#Область ЗагрузкаПосылкиПоКодам

Функция ПолучитьХМЛ_ВыданныеПокупки(СписокКодовУчастников,Дни)
	Тип_receivedOrdersForUser	= ФабрикаXDTO.Тип("http://www.100sp.ru/out","distributors.receivedOrders.receivedOrdersForUser");
	Тип_receivedOrders			= ФабрикаXDTO.Тип("http://www.100sp.ru/out","distributors.receivedOrders");
	Тип_distributors			= ФабрикаXDTO.Тип("http://www.100sp.ru/out","distributors");
	
	Если ТипЗнч(Дни) = Тип("Дата") Тогда
		ДатаЗапроса = Дни;
	Иначе	
		ДатаЗапроса=НачалоДня(ТекущаяДата()-Дни*24*60*60);
	КонецЕсли;	
	
	Объект_distributors=ФабрикаXDTO.Создать(Тип_distributors);
	Объект_receivedOrders=ФабрикаXDTO.Создать(Тип_receivedOrders);
	
	Для каждого элем из СписокКодовУчастников Цикл
		Объект_receivedOrdersForUser		= ФабрикаXDTO.Создать(Тип_receivedOrdersForUser);
		Объект_receivedOrdersForUser.uid	= элем.Значение;
		Объект_receivedOrdersForUser.since	= ДатаЗапроса;
		
		Объект_receivedOrders.receivedOrdersForUser.Добавить(Объект_receivedOrdersForUser);
	КонецЦикла;
	Объект_distributors.receivedOrders=Объект_receivedOrders;
	
	Запись = Новый ЗаписьXML;
	Запись.УстановитьСтроку(); 
	ФабрикаXDTO.ЗаписатьXML(Запись, Объект_distributors);
	ДанныеXML = Запись.Закрыть();
	ДанныеXML="<?xml version=""1.0"" encoding=""UTF-8""?> "+СтрЗаменить(ДанныеXML,"xmlns=""http://www.100sp.ru/out"" ","");
	Возврат ДанныеXML; 
КонецФункции

Функция ПолученныеДанные_ВыданныеПокупки(ДанныеXML) 
	Параметры    = новый Структура;
	Параметры.Вставить("token",Константы.Токен.Получить());
	Параметры.Вставить("xml", ДанныеXML);
	АдресСкрипта = Константы.АдресЗагрузкиССайта.Получить();

	ПолученныйФайл=СтоСПОбмен_Общий.ПолучитьПостЗапросом(Параметры,АдресСкрипта);
	Если ПолученныйФайл=Неопределено Тогда Возврат Неопределено КонецЕсли;

	ПолученныеДанные=СтоСПОбмен_Общий.ФайлВСтроку(ПолученныйФайл);
	ПолученныеДанные = СтрЗаменить(ПолученныеДанные, "<receiveDistributorCode/>","<receiveDistributorCode>0</receiveDistributorCode>" );
	
	Возврат ПолученныеДанные;
КонецФункции	

Функция Разбор_ВыданныеПокупки(ТЗЗаказов,ПолученныеДанные) 
	пространствоИмен="http://www.100sp.ru/api/distributor/upload/back";
	ПолученныеДанные=СтрЗаменить(ПолученныеДанные,"http://www.100sp.ru",пространствоИмен);
	авторизацияВыполнена=ложь;
	
	
	Тип_distributors=ФабрикаXDTO.Тип(пространствоИмен, "distributors");
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ПолученныеДанные);
	
	Объект_distributors= ФабрикаXDTO.ПрочитатьXML(ЧтениеXML,Тип_distributors);
	Если Объект_distributors.auth.result="ok" Тогда
		авторизацияВыполнена=истина;
	КонецЕсли;
	Если Объект_distributors.receivedOrders=Неопределено Тогда
		Возврат новый Структура ("авторизацияВыполнена,результат",авторизацияВыполнена,Неопределено);
	КонецЕсли;	
	
	тз_результат=новый ТаблицаЗначений;
	тз_результат.Колонки.Добавить("Участник");
	тз_результат.Колонки.Добавить("Покупка");
	тз_результат.Колонки.Добавить("ДатаВыдачи");
	тз_результат.Колонки.Добавить("ПунктВыдачи");
	
	Для каждого тэг_участник из Объект_distributors.receivedOrders.receivedOrdersForUser Цикл
		Для каждого тэг_заказ из тэг_участник.order Цикл
			н_строка			= тз_результат.Добавить();
			н_строка.Участник	= СП_РаботаСоСправочниками.ПолучитьУчастникаПо_Коду(тэг_участник.uid);
			н_строка.Покупка	= СП_РаботаСоСправочниками.ПолучитьЗаказПоXDTO(тэг_заказ,"orderType");
			н_строка.ДатаВыдачи	= СтоСПОбмен_Общий.ДатаИзСтроки(тэг_заказ.receiveDate);
			н_строка.ПунктВыдачи= СП_РаботаСоСправочниками.ПолучитьПунктВыдачиПо_Коду(тэг_заказ.receiveDistributorCode)
		КонецЦикла;	
	КонецЦикла;
	Возврат новый Структура ("авторизацияВыполнена,результат",авторизацияВыполнена,тз_результат);
КонецФункции

Функция Ошибки_ВыданныеПокупки(ТЗ) 
	//ТЗОшибок=ТЗЗаказов.Скопировать(новый Структура("result","error"));
	//строкиСошибками=ТЗЗаказов.НайтиСтроки(новый Структура("result","error"));
	//Для каждого стр из строкиСошибками Цикл
	//	ТЗЗаказов.Удалить(стр);
	//КонецЦикла;	
	//
	//строкиСвои=ТЗЗаказов.НайтиСтроки(новый Структура("ТочкаНазначение",Константы.СвояТочка.Получить()));
	//Для каждого стр из строкиСвои Цикл
	//	ТЗЗаказов.Удалить(стр);
	//КонецЦикла;	
	Возврат ТЗ;
КонецФункции

Функция Загрузить_ВыданныеПокупки(ПараметрУчастник,Дни) Экспорт
	Если ТипЗнч(ПараметрУчастник) = Тип("СправочникСсылка.Участники") Тогда 
		СписокКодовУчастников = новый СписокЗначений;
		СписокКодовУчастников.Добавить(Формат(ПараметрУчастник.Код,"ЧГ=0"));
	Иначе	
		СписокКодовУчастников = ПараметрУчастник;
	КонецЕсли;	
	
	хмл_отправили=ПолучитьХМЛ_ВыданныеПокупки(СписокКодовУчастников,Дни);
	хмл_получили =ПолученныеДанные_ВыданныеПокупки(хмл_отправили);
	
	ТЗ=Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Ошибка");
	Если хмл_получили=Неопределено Тогда 
		стр=тз.Добавить();
		стр.Ошибка="Не удалось соединиться с сайтом";
	Иначе	
		возврат Разбор_ВыданныеПокупки(ТЗ,хмл_получили);
	КонецЕсли;
	//Ошибки_ВыданныеПокупки(ТЗ);
	Возврат новый Структура ("авторизацияВыполнена,результат",ложь, неопределено);
КонецФункции	

#КонецОбласти



#Область ТоварыВЗаказе

Функция ТоварыВЗаказе(массивПосылок) Экспорт

	
	Протокол					= 	СтоСПОбмен_Выгрузка100сп.СтруктураПротокола();
	Протокол.Отправили			= 	текстЗапроса_ТоварыВЗаказе(массивПосылок);;
	Протокол.ДатаНачала			=	ТекущаяДата();
	Протокол.Описание			=	"Товары в заказе";
	Протокол.ПолученныеДанные	= 	ВыполнитьЗапрос_ТоварыВЗаказе(Протокол.Отправили);
	АнализОтвета				=	АнализОтвета_ТоварыВЗаказе(Протокол.ПолученныеДанные);
	Протокол.Результат			= 	АнализОтвета.авторизацияВыполнена;
	
	Возврат новый Структура("Протокол, Данные", Протокол, АнализОтвета.Данные);
	
КонецФункции	

Функция АнализОтвета_ТоварыВЗаказе(ПолученныеДанные)
	стр_Результат			= Новый Структура("авторизацияВыполнена,Данные",Ложь,Неопределено);
	
	Если не ЗначениеЗаполнено(ПолученныеДанные) Тогда Возврат стр_Результат;	КонецЕсли;

	пространствоИмен		= "http://www.100sp.ru/api/distributor/upload/back";
	авторизацияВыполнена	= ложь;
	Тип_distributors		= ФабрикаXDTO.Тип(пространствоИмен, "distributors");

	ПолученныеДанные		= СтрЗаменить(ПолученныеДанные, "<distributors ", "<distributors "+"xmlns= """+пространствоИмен +""" " );

	ЧтениеXML 				= Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ПолученныеДанные);
	
	Объект_distributors		= ФабрикаXDTO.ПрочитатьXML(ЧтениеXML,Тип_distributors);
	Если Объект_distributors.auth.result	= "ok" Тогда
		авторизацияВыполнена	= истина;
	Иначе	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Объект_distributors.auth.message);
	КонецЕсли;
	                                                                                      
	Если Объект_distributors.receivedOrdersGoods				<> Неопределено Тогда
		тз	= новый таблицаЗначений;
		тз.Колонки.Добавить("Посылка",		новый ОписаниеТипов("СправочникСсылка.Посылки"));
		тз.Колонки.Добавить("кодТовара",	новый ОписаниеТипов("Строка"));
		тз.Колонки.Добавить("кодМегаордера",новый ОписаниеТипов("Строка"));
		тз.Колонки.Добавить("Наименование",	новый ОписаниеТипов("Строка"));
		тз.Колонки.Добавить("Цена",			новый ОписаниеТипов("Строка"));
		тз.Колонки.Добавить("Артикул",		новый ОписаниеТипов("Строка"));
		тз.Колонки.Добавить("Размер",		новый ОписаниеТипов("Строка"));
		тз.Колонки.Добавить("Картинка",		новый ОписаниеТипов("Строка"));
		
		Для каждого элемПосылка из Объект_distributors.receivedOrdersGoods.requestedObject Цикл
			Посылка	=	СП_РаботаСоСправочниками.ПолучитьПосылкуПо_Коду(элемПосылка.orderId);
			Для каждого элемМегаордер из элемПосылка.megaorders.megaorder Цикл
				кодМегаордера	= элемМегаордер.id;
				Для каждого элемТовар из элемМегаордер.goods.good Цикл
					новаяСтрока	= тз.Добавить();
					новаяСтрока.Посылка			= Посылка;
					новаяСтрока.кодМегаордера	= кодМегаордера;
					новаяСтрока.кодТовара		= элемТовар.id;
					новаяСтрока.Наименование	= элемТовар.name;
					новаяСтрока.Цена			= элемТовар.price;
					новаяСтрока.Артикул			= элемТовар.articul;
					новаяСтрока.Размер			= элемТовар.size;
					новаяСтрока.Картинка		= элемТовар.image;
				КонецЦикла;	
			КонецЦикла;
		КонецЦикла;
		стр_Результат.Данные	=  тз;
	КонецЕсли;

	стр_Результат.авторизацияВыполнена	= авторизацияВыполнена;
	Возврат стр_Результат;	
	
КонецФункции

Функция ВыполнитьЗапрос_ТоварыВЗаказе(отправили) 
	Параметры    		= новый Структура;
	Параметры.Вставить("token",Константы.Токен.Получить());
	Параметры.Вставить("xml", отправили);
	
	АдресСкрипта 		= Константы.АдресЗагрузкиССайта.Получить();
	ПолученныеДанные 	= СтоСПОбмен_Общий.ПолучитьПостЗапросом_Ответ(Параметры,АдресСкрипта);
	
	

	Возврат ПолученныеДанные;
КонецФункции	

Функция текстЗапроса_ТоварыВЗаказе(массивПосылок)
	ЗаписьXML=Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку("UTF-8");
	ЗаписьXML.ЗаписатьНачалоЭлемента("distributors");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:xsd", "http://www.w3.org/2001/XMLSchema");
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("receivedOrdersGoods");
	Для Каждого элем из массивПосылок Цикл
		ЗаписьXML.ЗаписатьНачалоЭлемента("requestedObject");
			ЗаписьXML.ЗаписатьНачалоЭлемента("orderType");
			ЗаписьXML.ЗаписатьТекст("package");
			ЗаписьXML.ЗаписатьКонецЭлемента();
	
			ЗаписьXML.ЗаписатьНачалоЭлемента("orderId");
			ЗаписьXML.ЗаписатьТекст(Формат(элем.Код,"ЧГ=0;"));
			ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.ЗаписатьКонецЭлемента();
	КонецЦикла;
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ОтправленныеДанные = ЗаписьXML.Закрыть();
	ОтправленныеДанные = СтрЗаменить(ОтправленныеДанные, "xmlns=""http://www.100sp.ru/XMLSchema-instance"" ", "");
	Возврат ОтправленныеДанные;
КонецФункции
#КонецОбласти

#Область Вспомогательные
#КонецОбласти