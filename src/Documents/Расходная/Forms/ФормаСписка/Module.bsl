
#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

#КонецОбласти



// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды



#Область ККМ
&НаКлиенте
Процедура ЗакрытьКассовуюСмену(Команда)
	
	
	
	ОчиститьСообщения();
	
	Элементы.ГруппаКасса.Доступность = Ложь;
   ПараметрыОперации = МенеджерОборудованияКлиентСервер.ПараметрыОткрытияЗакрытияСмены();
   ПараметрыОперации.Кассир = НСтр("ru='Администратор'");
	
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ЗакрытьКассовуюСмену_Завершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьЗакрытиеСменыНаФискальномУстройстве(ОповещениеПриЗавершении, УникальныйИдентификатор,ПараметрыОперации);
	
	//	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда // Проверка на определенность рабочего места ВО
	//
	//	ПараметрыКассыККМ = ПолучитьПараметрыКассыККМ();
	//	ИдентификаторУстройстваФР              = ПараметрыКассыККМ.ИдентификаторУстройства;
	//	ОписаниеОшибки = "";
	//	Если ИдентификаторУстройстваФР <> Неопределено  Тогда
	//		
	//		// Подключаем ФР
	//		Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
	//		                                                                              ИдентификаторУстройстваФР,
	//		                                                                              ОписаниеОшибки);
	//		ВходныеПараметры=Неопределено;
	//		ВыходныеПараметры=Неопределено;
	//		Если Результат  Тогда
	//				Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР,
	//				                                                        "PrintZReport",
	//				                                                        ВходныеПараметры,
	//				                                                        ВыходныеПараметры);

	//		Конецесли;
	//	Конецесли;
	//	Конецесли;
КонецПроцедуры


&НаКлиенте
Процедура ЗакрытьКассовуюСмену_Завершение(РезультатВыполнения, Параметры) Экспорт
	
	Если РезультатВыполнения.Результат Тогда
		//Если НЕ ЗаархивироватьДокументыНаСервере() Тогда
		//	ТекстПредупреждения = НСтр("ru = 'Ошибка записи документов'");
		//	ПоказатьПредупреждение(, ТекстПредупреждения, 10);
		//	Возврат;
		//КонецЕсли;
		ОписаниеОшибки = "";
	КонецЕсли;
	
	Элементы.ГруппаКасса.Доступность = Истина;
	
КонецПроцедуры

Функция ПолучитьПараметрыКассыККМ()
	параметрыККМ=Новый Структура;
	параметрыККМ.Вставить("ИдентификаторУстройства",Константы.фр.Получить());
	возврат параметрыККМ;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьКассовуюСмену(Команда)
	//	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда // Проверка на определенность рабочего места ВО
	//
	//	ПараметрыКассыККМ = ПолучитьПараметрыКассыККМ();
	//	ИдентификаторУстройстваФР              = ПараметрыКассыККМ.ИдентификаторУстройства;
	//	ОписаниеОшибки = "";
	//	Если ИдентификаторУстройстваФР <> Неопределено  Тогда
	//		
	//		// Подключаем ФР
	//		Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
	//		                                                                              ИдентификаторУстройстваФР,
	//		                                                                              ОписаниеОшибки);
	//		ВходныеПараметры=Неопределено;
	//		ВыходныеПараметры=Неопределено;
	//		Если Результат  Тогда
	//				Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР,
	//				                                                        "OpenDay",
	//				                                                        ВходныеПараметры,
	//				                                                        ВыходныеПараметры);

	//		Конецесли;
	//	Конецесли;
	//	Конецесли;
	
	ОчиститьСообщения();
	Элементы.ГруппаКасса.Доступность = Ложь;
   ПараметрыОперации = МенеджерОборудованияКлиентСервер.ПараметрыОткрытияЗакрытияСмены();
   ПараметрыОперации.Кассир = НСтр("ru='Администратор'");
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОткрытьКассовуюСмену_Завершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьОткрытиеСменыНаФискальномУстройстве(ОповещениеПриЗавершении, УникальныйИдентификатор,ПараметрыОперации);
КонецПроцедуры

Процедура ВыполнениеКоманды_Завершение(РезультатВыполнения, Параметры) Экспорт
	
	Элементы.ГруппаКасса.Доступность = Истина;
	
	Если НЕ РезультатВыполнения.Результат Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатВыполнения.ОписаниеОшибки);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКассовуюСмену_Завершение(РезультатВыполнения, Параметры) Экспорт
	
	Элементы.ГруппаКасса.Доступность = Истина;
	
	Если НЕ РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр("ru = 'При выполнении команды открытия смены на фискальном устройстве произошла ошибка.
			|%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", РезультатВыполнения.ОписаниеОшибки);
		ПоказатьПредупреждение(, ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетОТекущемСостоянииРасчетов(Команда)
	
	ЭтаФорма.Доступность = Ложь; 
	
	ПараметрыОперации = МенеджерОборудованияКлиентСервер.ПараметрыОткрытияЗакрытияСмены();
	ПараметрыОперации.Кассир = НСтр("ru='Администратор'");
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ВыполнениеКоманды_Завершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьФормированиеОтчетаОТекущемСостоянииРасчетов(ОповещениеПриЗавершении, УникальныйИдентификатор, ПараметрыОперации, Неопределено);
	
КонецПроцедуры

#КонецОбласти