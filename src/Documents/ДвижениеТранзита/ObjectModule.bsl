Процедура ЗаполнитьЗаказамиДруихТочек() Экспорт
	стрВозврата=СтоСПОбмен_ГруппыДоставки.ЗаказыДругихТочек_ПроверитьОстатки();	
	Если стрВозврата.Авторизация Тогда
		ПокупкиТранзит.Загрузить(стрВозврата.ЗаказыДругихТочек);
		ВидОперации=Перечисления.ВидыОпераций_ДвижениеТранзита.ТранзитНаТранзит;
		Комментарий="Друнгая точка сбора. Автоматически.";
	КонецЕсли
КонецПроцедуры


Процедура ЗаполнитьЗаказамиДляВозврата(МассДляОтправления) Экспорт
	Если МассДляОтправления.Количество()=0 Тогда
		Возврат;
	КонецЕсли; 	
	ГД=МассДляОтправления[0];
	//Перепроводим Документы по группам из которых удаляли заказы чтоб они вернулись на транзит
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтправлениеТранзита.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ОтправлениеТранзита КАК ОтправлениеТранзита
		|ГДЕ
		|	ОтправлениеТранзита.Проведен
		|	И ОтправлениеТранзита.Коробка = &ГД";
	
	Запрос.УстановитьПараметр("ГД", ГД);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		об=Выборка.Ссылка.ПолучитьОбъект();
		Попытка
			об.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	
	//Находим что удаляли из данной группы
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗапросыГруппДоставкиЗапросыИсключения.Покупка КАК Покупка,
		|	ЗапросыГруппДоставкиЗапросыИсключения.Участник КАК Участник
		|ПОМЕСТИТЬ Заказы
		|ИЗ
		|	Документ.ЗапросыГруппДоставки.ЗапросыИсключения КАК ЗапросыГруппДоставкиЗапросыИсключения
		|ГДЕ
		|	ЗапросыГруппДоставкиЗапросыИсключения.Успех
		|	И ЗапросыГруппДоставкиЗапросыИсключения.ГруппаДоставки = &ГД
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗапросыГруппДоставкиЗапросыИсключения.Покупка,
		|	ЗапросыГруппДоставкиЗапросыИсключения.Участник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Заказы.Покупка КАК Покупка,
		|	Заказы.Участник КАК Участник,
		|	ТранзитОстатки.Габарит КАК Габарит,
		|	ТранзитОстатки.МестоХранения КАК МестоХранения,
		|	ТранзитОстатки.Партия КАК Партия,
		|	ТранзитОстатки.Точка КАК Точка,
		|	ТранзитОстатки.КоличествоОстаток КАК Количество
		|ИЗ
		|	Заказы КАК Заказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Транзит.Остатки КАК ТранзитОстатки
		|		ПО Заказы.Покупка = ТранзитОстатки.ПокупкаСсылка
		|			И Заказы.Участник = ТранзитОстатки.Участник";
	
	Запрос.УстановитьПараметр("ГД", ГД);
	
	РезультатЗапроса = Запрос.Выполнить();
	
    ПокупкиТранзит.Загрузить(РезультатЗапроса.Выгрузить());
	ВидОперации	= Перечисления.ВидыОпераций_ДвижениеТранзита.ТранзитНаВозврат;
	Для каждого стр из ПокупкиТранзит Цикл
		стр.Организатор	= СП_РаботаСоСправочниками.ПолучитьОрганизатораПо_Коду(стр.Покупка.Организатор.Код);		
	КонецЦикла;
	Комментарий="Возврат удаленных из группы. Автоматически.";
КонецПроцедуры	

Процедура ДвиженияТранзит_Списание(Отказ, Режим)
	// регистр Транзит Расход
	Движения.Транзит.Записывать = Истина;
	Для Каждого ТекСтрокаПокупкиТранзит Из ПокупкиТранзит Цикл
		Движение 				= Движения.Транзит.Добавить();
		Движение.ВидДвижения 	= ВидДвиженияНакопления.Расход;
		Движение.Период 		= Дата;
		Движение.Габарит 		= ТекСтрокаПокупкиТранзит.Габарит;
		Движение.Участник 		= ТекСтрокаПокупкиТранзит.Участник;
		Движение.МестоХранения 	= ТекСтрокаПокупкиТранзит.МестоХранения;
		Движение.Партия 		= ТекСтрокаПокупкиТранзит.Партия;
		Движение.ПокупкаСсылка 	= ТекСтрокаПокупкиТранзит.Покупка;
		Движение.Точка 			= ТекСтрокаПокупкиТранзит.Точка;
		Движение.Количество 	= ТекСтрокаПокупкиТранзит.Количество;
	КонецЦикла;
КонецПроцедуры

Процедура ДвиженияТранзит_Поступление(Отказ, Режим)	
	// регистр Транзит Приход
	Движения.Транзит.Записывать = Истина;	
	Для Каждого ТекСтрокаПокупкиТранзит Из ПокупкиТранзит Цикл
		Движение = Движения.Транзит.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Габарит = ТекСтрокаПокупкиТранзит.ГабаритНазначение;
		Движение.Участник = ТекСтрокаПокупкиТранзит.Участник;
		Движение.МестоХранения = ТекСтрокаПокупкиТранзит.МестоХраненияНазначение;
		Движение.Партия = ТекСтрокаПокупкиТранзит.Партия;
		Движение.ПокупкаСсылка = ТекСтрокаПокупкиТранзит.Покупка;
		Движение.Точка = ТекСтрокаПокупкиТранзит.ТочкаНазначение;
		Движение.Количество = ТекСтрокаПокупкиТранзит.Количество;
	КонецЦикла;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ДвиженияТранзит_Списание(Отказ, РежимПроведения);
	Если ВидОперации=Перечисления.ВидыОпераций_ДвижениеТранзита.ТранзитНаТранзит Тогда
		ДвиженияТранзит_Поступление(Отказ, РежимПроведения);
	ИначеЕсли ВидОперации=Перечисления.ВидыОпераций_ДвижениеТранзита.ТранзитНаВозврат Тогда	
		ДвиженияВозврат_Поступление(Отказ, РежимПроведения);
	Конецесли;		
КонецПроцедуры

Процедура ДвиженияВозврат_Поступление(Отказ, Режим)
	// регистр Возвраты Приход
	Движения.Возвраты.Записывать = Истина;
	Для Каждого ТекСтрокаПокупкиТранзит Из ПокупкиТранзит Цикл
		Движение 			= Движения.Возвраты.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Организатор = ТекСтрокаПокупкиТранзит.Организатор;
		Движение.Участник = ТекСтрокаПокупкиТранзит.Участник;
		Движение.Покупка = ТекСтрокаПокупкиТранзит.Покупка;
		Движение.МестоХранения = ТекСтрокаПокупкиТранзит.МестоХранения;
		Движение.Партия = ТекСтрокаПокупкиТранзит.Партия;
		Движение.Количество = ТекСтрокаПокупкиТранзит.Количество;
	КонецЦикла;
КонецПроцедуры
