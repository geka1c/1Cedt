Процедура УстановитьВиДимость()
	наТранзит=(Объект.ВидОперации=Перечисления.ВидыОпераций_ДвижениеТранзита.ТранзитНаТранзит);
	наВозврат=(Объект.ВидОперации=Перечисления.ВидыОпераций_ДвижениеТранзита.ТранзитНаВозврат);
	наОстаток=(Объект.ВидОперации=Перечисления.ВидыОпераций_ДвижениеТранзита.ТранзитНаОстатки);
	Элементы.ПокупкиТранзитГабаритНазначение.Видимость = (наТранзит или наОстаток);
	Элементы.ПокупкиТранзитТочкаНазначение.Видимость   = (наТранзит или наОстаток);
	Элементы.ПокупкиТранзитОрганизатор.Видимость       = (наВозврат);
КонецПроцедуры	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВиДимость();
КонецПроцедуры

//Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
//	    
//	// ПодключаемоеОборудование
//	Если Источник = "ПодключаемоеОборудование"   и не (АктивноеОкно()=неопределено или АктивноеОкно().Основное) и АктивноеОкно().Содержимое[0]=ЭтаФорма// и Лев(АктивноеОкно().Заголовок,4)="Движ"
//	  // И ВводДоступен() 
//	  Тогда
//		Если ИмяСобытия = "ScanData" Тогда
//			//Преобразуем предварительно к ожидаемому формату
//			Данные = Новый Массив();
//			Если Параметр[1] = Неопределено Тогда
//				Данные.Добавить(Новый Структура("Штрихкод, Количество", Параметр[0], 1)); // Достаем штрихкод из основных данных
//			Иначе
//				Данные.Добавить(Новый Структура("Штрихкод, Количество", Параметр[1][1], 1)); // Достаем штрихкод из дополнительных данных
//			КонецЕсли;

//			ПолученыШтрихкоды(Данные);
//		КонецЕсли;
//	КонецЕсли;
//	// Конец ПодключаемоеОборудование



//КонецПроцедуры

//&НаКлиенте
//Процедура ПолученыШтрихкоды(ДанныеШтрикодов) Экспорт
//	Данные=ДанныеШтрикодов[ДанныеШтрикодов.Количество() - 1].Штрихкод ;
//	Ошибки=Неопределено;
//	РазобралиШК= аСПШтрихКоды.РазобратьШтрихкод(Данные,Ошибки);
//		
//		Если Лев(сокрлп(Данные),2)<>"11" и Лев(сокрлп(Данные),2)<>"33" Тогда
//			Сигнал();
//			Сообщить("Не вреный тип штрихкода!!!");
//			Возврат;
//		КонецЕсли;
//		
//		
//		Если РазобралиШК.ТипШК="33" Тогда
//			СсылкаПокупки  =РазобралиШК.Заказы;//Сред(сокрлп(Данные),9,6);
//			СсылкаУчастники=РазобралиШК.Участник;
//		Иначе
//			СсылкаПокупки  =РазобралиШК.Покупка;//Сред(сокрлп(Данные),9,6);
//			СсылкаУчастники=РазобралиШК.Участник;
//		КонецЕсли;

//		
//		Если РазобралиШК.СвояТочка=РазобралиШК.ТочкаРаздачи или РазобралиШК.НеУказанаТочка=истина Тогда
//			
//		иначе	
//			Ответ = Вопрос("Покупка для другой точки .Все равно добавить?", РежимДиалогаВопрос.ДаНет, 0);
//			Если Ответ = КодВозвратаДиалога.Нет Тогда
//				Возврат;
//			КонецЕсли;
//		КонецЕсли;
//		
//		Участник=СсылкаУчастники;
//		Покупка=СсылкаПокупки;
//		строка =Новый Структура;
//		строка.Вставить("Участник",Участник);
//		строка.Вставить("Покупка", Покупка);
//		Предупреждение="";
//	
//	Если Объект.Покупки.НайтиСтроки(строка).Количество()>0 Тогда
//			Режим = РежимДиалогаВопрос.ДаНет;
//			Ответ = Вопрос("Сторока с такими данными уже внесена.Все равно добавить?", Режим, 0);
//			Если Ответ = КодВозвратаДиалога.Нет Тогда
//				Возврат;
//			КонецЕсли;
//	КонецЕсли;	
//	
//		
//	Если Элементы.ГруппаТабЧасти.ТекущаяСтраница=Элементы.ГруппаТабЧасти.ПодчиненныеЭлементы.тчСклад Тогда
//		ВыборкаОстатков(Объект.Дата,null,фМестаХранения,Участник,Покупка,null,null);
//	Иначе
//		
//	КонецЕсли;	
//КонецПроцедуры 