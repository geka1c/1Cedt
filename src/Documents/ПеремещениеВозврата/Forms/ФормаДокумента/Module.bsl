
Функция ЗаполнитьВозвраты() 
	Если Объект.Проведен Тогда
		Сообщить("Нельзя заполнить проведенный документ!!!");	
	Иначе	
		Объект.Покупки.Очистить();
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВозвратыОстаткиИОбороты.Организатор,
		|	ВозвратыОстаткиИОбороты.Участник,
		|	ВозвратыОстаткиИОбороты.Покупка,
		|	ВозвратыОстаткиИОбороты.МестоХранения,
		|	ВозвратыОстаткиИОбороты.Партия,
		|	СУММА(ВозвратыОстаткиИОбороты.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток
		|ПОМЕСТИТЬ Перед
		|ИЗ
		|	РегистрНакопления.Возвраты.ОстаткиИОбороты(, &НаДату, Авто, ДвиженияИГраницыПериода, ) КАК ВозвратыОстаткиИОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ВозвратыОстаткиИОбороты.Организатор,
		|	ВозвратыОстаткиИОбороты.Партия,
		|	ВозвратыОстаткиИОбороты.Участник,
		|	ВозвратыОстаткиИОбороты.Покупка,
		|	ВозвратыОстаткиИОбороты.МестоХранения
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВозвратыОстаткиИОбороты.КоличествоКонечныйОстаток) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Перед.Организатор КАК Организатор,
		|	Перед.Участник,
		|	Перед.Покупка,
		|	Перед.МестоХранения,
		|	Перед.Партия КАК Партия,
		|	РАЗНОСТЬДАТ(ЕСТЬNULL(Перед.Партия.Дата, ДАТАВРЕМЯ(1, 1, 1)), &НаДату, ДЕНЬ) КАК ДниХранения,
		|	Перед.КоличествоКонечныйОстаток КАК Количество
		|ИЗ
		|	Перед КАК Перед
		//|ГДЕ
		//|	РАЗНОСТЬДАТ(ЕСТЬNULL(Перед.Партия.Дата, ДАТАВРЕМЯ(1, 1, 1)), &НаДату, ДЕНЬ) > &ДнейХранения
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организатор,
		|	Партия";
		
		
		
		Запрос.Параметры.Вставить("НаДату",КонецДня(ТекущаяДата()));
		Запрос.Параметры.Вставить("ДнейХранения",Объект.ДниХранения);
		Результат = Запрос.Выполнить();
		тз=Результат.Выгрузить();
		Объект.Покупки.Загрузить(тз);
	КонецЕсли;
КонецФункции 


&НаКлиенте
Процедура Заполнить(Команда)
	
	тз=	ЗаполнитьВозвраты();

КонецПроцедуры


&НаКлиенте
Процедура УстановитьВидимость()
	Элементы.ДниХранения.Видимость=Объект.Списать;	
	Элементы.ТочкаРаздачи.Видимость= не Объект.Списать;	

КонецПроцедуры // УстановитьВидимость()

&НаКлиенте
Процедура ДниХраненияПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура СписатьПриИзменении(Элемент)
	УстановитьВидимость()

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОтбору(Команда)
	фрм=ПолучитьФорму("Документ.ПеремещениеВозврата.Форма.ФормаОтбора",новый Структура("имяСхемы","СКДОтборВозвраты"),ЭтаФорма);
	фрм.Открыть();
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение)
	КомпоновщикНастроек	= ВыбранноеЗначение.КомпоновщикНастроек;
	Схема				= ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресСхемы);
	
	настройки						= КомпоновщикНастроек.Настройки;
	параметрПериод					= настройки.ПараметрыДанных.НайтиЗначениеПараметра(новый ПараметрКомпоновкиДанных("НаДату"));
	параметрПериод.Значение			= КонецДня(Объект.Дата);
	параметрПериод.Использование	= Истина;
	
	КомпановщикМакета				= Новый КомпоновщикМакетаКомпоновкиДанных;
	Макет							= КомпановщикМакета.Выполнить(Схема,КомпоновщикНастроек.Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки				= новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(Макет);
	ПроцессорВывода					= новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТЗ								= новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТЗ);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки,Истина);
	Объект.Покупки.Загрузить(ТЗ);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	ОбработкаВыбораНаСервере(ВыбранноеЗначение);
КонецПроцедуры



#Область СобытияФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СП_РаботаСДокументами.ПриСозданииНаСервере(ЭтотОбъект);	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьВидимость();
	
КонецПроцедуры

#КонецОбласти

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
