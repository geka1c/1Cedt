#Область ШтрихКоды

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// ПодключаемоеОборудование
	Если 	ИмяСобытия 	= "ScanData" 					и
			Источник 	= "ПодключаемоеОборудование" 	и
			ВводДоступен()										Тогда
			
			ШК 			= СтоСП_Клиент.ПолучитьШКизПараметров(Параметр);
			ОбработатьШКнаКлиенте(ШК);
			
	КонецЕсли;
	
	
	// Конец ПодключаемоеОборудование
КонецПроцедуры

&НаКлиенте
Функция ОбработатьШКнаКлиенте(ШК)
	ДанныеШК    = СП_Штрихкоды.ПолучитьДанныеПоШК(ШК);
	Если 		Строка(ДанныеШК.Тип) 	= "Посылка (12)" 			или
		 		Строка(ДанныеШК.Тип) 	= "Покупка (11)"			Или		
		 		Строка(ДанныеШК.Тип) 	= "Заказ100маркета (33)"	или
		 		Строка(ДанныеШК.Тип) 	= "Коробка (44)"					Тогда
		 			
		 	Если ВозвратыБезДетализации Тогда		
				ЗаказДобавлен	= ДобавитьЗаказ(ДанныеШК);
				Если ЗаказДобавлен Тогда
					#Если не вебклиент Тогда
						Сигнал();
					#КонецЕсли
				КонецЕсли;
		 	Иначе
		 		ОткрытьФорму("ОбщаяФорма.ВыборЗаказаПолученногоУчастником",Новый Структура("ДанныеШК, Локально",ДанныеШК ,Ложь),
		 						ЭтотОбъект,,,,Новый ОписаниеОповещения("ДобавитьПоДатеВыдачи_Завершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);		
		 			
			КонецЕсли;	
	ИначеЕсли 	Строка(ДанныеШК.Тип) 	= "Карта участника (22)" или
			Строка(ДанныеШК.Тип) 	= "Карта участника (23)" 		Тогда
		Объект.Участник = ДанныеШК.Участник;	
	ИначеЕсли Строка(ДанныеШК.Тип) = "Место хранения (63)" 		Тогда	
		МестоХранения	= ДанныеШК.МестоХранения;
	Иначеесли Строка(ДанныеШК.Тип) 		= "Сотрудник (55)" 			Тогда	
		Если СП_РаботаСДокументами_Клиент.ЗаписатьДокумент(этотОбъект,,ДанныеШК.Сотрудник) Тогда
			Закрыть();
		КонецЕсли;				
	КонецЕсли;		

КонецФункции	

&НаКлиенте
Процедура СчитатьШКВручную(Команда)
	ОткрытьФорму("ОбщаяФорма.ФормаВводаШК",,ЭтотОбъект,,,,Новый ОписаниеОповещения("ВвестиШтрихКодВручную_Завершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ВвестиШтрихКодВручную_Завершение(ШК, ДополнительныеПараметры) Экспорт
	ОбработатьШКнаКлиенте(ШК);
КонецПроцедуры	

Функция ДобавитьЗаказ(ДанныеШК, КодыТоваров = Неопределено)
	об=ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.ВозвратПокупокОрганизатору"));
	ДействиеВыполнено = об.ДобавитьПокупку(ДанныеШК.ШК,МестоХранения,КодыТоваров); 
	Если ДействиеВыполнено Тогда
		ЗначениеВДанныеФормы(об,Объект);
	КонецЕсли;
	Возврат ДействиеВыполнено;
КонецФункции	


Функция ДобавитьЗаказСТоварами(ЗаказыСТоварами)
	Объект.Покупки.Очистить();
	Объект.Товары.Очистить();
	
	тзПосылок	=	Новый ТаблицаЗначений;
	тзПосылок.Колонки.Добавить("Посылка",		новый ОписаниеТипов("СправочникСсылка.Посылки"));
	тзПосылок.Колонки.Добавить("ШК",			новый ОписаниеТипов("СправочникСсылка.Мегаордера"));
	тзПосылок.Колонки.Добавить("КодыТоваров",	новый ОписаниеТипов("Строка"));
	
	Для каждого элем из ЗаказыСТоварами Цикл
		найдено = тзПосылок.НайтиСтроки(новый структура("Посылка", элем.Значение.Посылка));
		Если найдено.Количество() = 0 Тогда
			строкаТаблицы 				= тзПосылок.Добавить();
			строкаТаблицы.Посылка		= элем.Значение.Посылка;
			строкаТаблицы.ШК			= элем.Значение.ШК;
			строкаТаблицы.КодыТоваров	= элем.Значение.Кодтовара;
		Иначе
			строкаТаблицы	= найдено[0];		
			строкаТаблицы.КодыТоваров	= строкаТаблицы.КодыТоваров + "," + элем.Значение.КодТовара;
		КонецЕсли;	
		новыйТовар	= Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(новыйТовар, элем.Значение);
	КонецЦикла;
	Объект.Участник = элем.Значение.Посылка.Участник;
	
	
	Для каждого элем из тзПосылок Цикл
		ДобавитьЗаказ(новый структура("ШК ",элем.ШК), элем.КодыТоваров);
	КонецЦикла;	
КонецФункции

#КонецОбласти	


#Область ВыборВыданныхПокупокПоУчастнику

&НаКлиенте
Процедура ДобавитьПоПокупкеУчастнику(Команда)
	ОткрытьФорму("ОбщаяФорма.ВыборПосылкиПоПокупкеУчастнику",,ЭтотОбъект,,,,Новый ОписаниеОповещения("ДобавитьПоПокупкеУчастнику_Завершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоПокупкеУчастнику_Завершение(ШК, ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(ШК) Тогда
		Если ЗначениеЗаполнено(ДополнительныеПараметры) Тогда
			масс_Строк	= объект.Покупки.НайтиСтроки(ДополнительныеПараметры);
			Для каждого элем из масс_Строк Цикл 
				Объект.Покупки.Удалить(Элем);
			КонецЦикла;	
		КонецЕсли;	
		ДобавитьЗаказ(новый структура("ШК",ШК.ШК));	
	КонецЕсли;	
КонецПроцедуры	

&НаКлиенте
Процедура ВыбратьПосылку(Команда)
	ПараметрыОтбора = новый Структура;
	ПараметрыОтбора.Вставить("Покупка",		Элементы.Покупки.ТекущиеДанные.Покупка);
	ПараметрыОтбора.Вставить("Участник",	Элементы.Покупки.ТекущиеДанные.Участник);
	ОткрытьФорму("ОбщаяФорма.ВыборПосылкиПоПокупкеУчастнику",ПараметрыОтбора,ЭтотОбъект,,,,Новый ОписаниеОповещения("ДобавитьПоПокупкеУчастнику_Завершение", ЭтотОбъект,ПараметрыОтбора), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьПоДатеВыдачи(Команда)
	ОткрытьФорму("ОбщаяФорма.ВыборЗаказаПолученногоУчастником",Новый Структура("Участник, Локально",Объект.Участник ,Ложь),ЭтотОбъект,,,,Новый ОписаниеОповещения("ДобавитьПоДатеВыдачи_Завершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоДатеВыдачиНаСвоемПВ(Команда)
	ОткрытьФорму("ОбщаяФорма.ВыборЗаказаПолученногоУчастником",Новый Структура("Участник, Локально",Объект.Участник, Истина),ЭтотОбъект,,,,Новый ОписаниеОповещения("ДобавитьПоДатеВыдачи_Завершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьПоДатеВыдачи_Завершение(ШК, ДополнительныеПараметры) Экспорт
	Если не ЗначениеЗаполнено(ШК) Тогда Возврат; КонецЕсли;
	
	Если ТипЗнч(ШК) = Тип("СписокЗначений") Тогда
		ДобавитьЗаказСТоварами(ШК);
	Иначе
			масс_Строк	= объект.Покупки.НайтиСтроки(новый структура("ШК", ШК));
			Для каждого элем из масс_Строк Цикл 
				Объект.Покупки.Удалить(Элем);
			КонецЦикла;	
		ДобавитьЗаказ(новый структура("ШК",ШК));	
	КонецЕсли;	
КонецПроцедуры	





&НаКлиенте
Процедура ВыбратьПокупки(Команда)
	Если не ЗначениеЗаполнено(Объект.Участник) Тогда
		Предупреждение("Необходимо выбрать участника!!!");
		Возврат;
	КонецЕсли;	
	ОткрытьПодборВыданыхПокупок();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодборВыданыхПокупок()
	форма				= ПолучитьФорму("обработка.ПодборВыданыхПокупок.Форма");
	обОбработка 		= Форма.Объект;
	ЗаполнитьНаСервере(обОбработка,Объект.Участник);
	КопироватьДанныеФормы(обОбработка, Форма.Объект);
	Форма.ВладелецФормы = ЭтаФорма;
	Форма.Открыть();
КонецПроцедуры
	
&НаСервереБезКонтекста
Процедура ЗаполнитьНаСервере(Обработка,Участник);
	Обработка.Участник=Участник;
	Обработка.НаДату=ТекущаяДата();
КонецПроцедуры

#КонецОбласти	


#Область СобытияФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды		
	Если не ЗначениеЗаполнено(Объект.ВидОперации) Тогда
		объект.ВидОперации=Перечисления.ВидыВозвратов.ОтУчастника;
	КонецЕсли;	
	ВозвратыБезДетализации = Константы.ВозвратыБезДетализации.Получить(); //12000012774583000369
	МестоХранения=Получить_ПоследнееМестоХранения();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//Сканер штрихкода
	СтоСП_Клиент.ПодключитьСканерШК(УникальныйИдентификатор);
	
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ПслеЗаписиНСервере();
	Если ЗначениеЗаполнено(Объект.Основание) и ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Оповестить("ПроведенВозврат",Объект.Основание,ЭтаФорма);
	КонецЕсли;	
КонецПроцедуры

Процедура ПслеЗаписиНСервере()

	Если Константы.ВыгружатьВозвратПриЗаписи.Получить() Тогда
		аспПроцедурыОбменаДанными.СформироватИОтправитьПакет();
	КонецЕсли ;
КонецПроцедуры


///////////////////////////////////////////////

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Для каждого стр из ВыбранноеЗначение Цикл
		СтрТЧ				= Объект.Покупки.Добавить();
		СтрТч.Покупка		= стр.Значение.Покупка;
		СтрТч.Организатор	= стр.Значение.Организатор;
		СтрТч.Участник		= Объект.Участник;
		СтрТч.МестоХранения	= МестоХранения;
		СтрТч.ШК			= СП_Штрихкоды.ПолучитьМегаордер(СтрТч.Покупка,СтрТч.Участник);
	КонецЦикла;	
КонецПроцедуры


&НаКлиенте
Процедура ПокупкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если не ЗначениеЗаполнено(Элемент.ТекущиеДанные.МестоХранения) Тогда
		Элемент.ТекущиеДанные.МестоХранения=МестоХранения;
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.Участник) Тогда
		Элемент.ТекущиеДанные.Участник=Объект.Участник;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	УстановитьВидимость();
	Если Строка(Объект.ВидОперации)="Изменился пункт выдачи" Тогда
		Если Вопрос("Табличная часть будет перезаполнена! Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			ЗаполнитьПосылкамиИзменившимиПВ();	
		КонецЕсли;	
	Конецесли;	
КонецПроцедуры


#КонецОбласти


#Область Вспомогательные

Функция 	Получить_ПоследнееМестоХранения()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВозвратОтУчастникаПокупки.МестоХранения
		|ИЗ
		|	Документ.ВозвратПокупокОрганизатору.Покупки КАК ВозвратОтУчастникаПокупки
		|ГДЕ
		|	ВозвратОтУчастникаПокупки.МестоХранения <> ЗНАЧЕНИЕ(Справочник.МестаХранения.ПустаяСсылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВозвратОтУчастникаПокупки.Ссылка.Дата УБЫВ,
		|	ВозвратОтУчастникаПокупки.Ссылка.Номер УБЫВ,
		|	ВозвратОтУчастникаПокупки.НомерСтроки УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.МестоХранения;
	КонецЕсли;
	Возврат Справочники.МестаХранения.ПустаяСсылка();
КонецФункции

&НаСервере
Процедура 	ЗаполнитьПосылкамиИзменившимиПВ()
	об=ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.ВозвратПокупокОрганизатору"));
	об.ЗаполнитьПосылкамиИзменившимиПВ(МестоХранения);
	ЗначениеВДанныеФормы(об,Объект);
КонецПроцедуры

Процедура 	УстановитьВидимость()
	Элементы.Участник.Видимость=(Объект.ВидОперации=Перечисления.ВидыВозвратов.ОтУчастника);
	Если ЗначениеЗаполнено(Объект.Основание) и
		 ТипЗнч(Объект.Основание) = Тип("ДокументСсылка.ОтправлениеТранзита") Тогда
		 Элементы.Оповещение.Заголовок = "Группа: "+Объект.Основание.Коробка+" будет списанна со склада,"+Символы.ПС+
		 								 "а заказы удаленны из группы!";	
		 Элементы.Оповещение.Видимость = Истина;
	Конецесли	 
КонецПроцедуры // УстановитьВидимость()

#КонецОбласти 


// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПокупкиПриИзменении(Элемент)
	Объект.Сумма = Объект.Покупки.Итог("СтоимостьВозврата");
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВозвращаемыеТовары(Команда)
	ВыбратьВозвращаемыеТоварыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыбратьВозвращаемыеТоварыНаСервере()
	//TODO: Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Процедура Картинка(Команда)
	Если элементы.Товары.ТекущиеДанные <> неопределено Тогда
		ЗапуститьПриложение(элементы.Товары.ТекущиеДанные.Картинка);
	КонецЕсли;	
КонецПроцедуры






// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
