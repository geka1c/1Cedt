

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
    КомандаПечати 									= КомандыПечати.Добавить();
    КомандаПечати.МенеджерПечати 					= "Документ.УпаковатьЗаказы";
    КомандаПечати.Идентификатор 					= "СупперГруппа";
    КомандаПечати.Представление 					= НСтр("ru = 'Суппер группа'");
    КомандаПечати.ПроверкаПроведенияПередПечатью 	= Истина; 	
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  – Массив    – ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати – Структура – дополнительные настройки печати;
//  КоллекцияПечатныхФорм – ТаблицаЗначений – сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         – СписокЗначений  – значение – ссылка на объект;
//                                            представление – имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       – Структура       – дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
#Если Сервер Тогда 
	
    НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СупперГруппа");
    Если НужноПечататьМакет Тогда
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
        КоллекцияПечатныхФорм,
        "СупперГруппа",
        НСтр("ru = 'Суппер группа'"),
        ПечатьСупперГруппы(МассивОбъектов, ОбъектыПечати),
        ,
        "Документ.ВыдачаТранзита.ПФ_MXL_СупперГруппа");
	КонецЕсли;		
	
	
#КонецЕсли 	
КонецПроцедуры


Функция ПечатьСупперГруппы(МассивОбъектов, ОбъектыПечати) Экспорт
	ТабДок= Новый ТабличныйДокумент;
	Макет = Документы.ВыдачаТранзита.ПолучитьМакет("ПФ_MXL_СупперГруппа");
	Макет.АвтоМасштаб=Истина;
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УпаковатьЗаказы.Дата КАК Дата,
	|	УпаковатьЗаказы.Номер КАК Номер,
	|	УпаковатьЗаказы.ТочкаОтправитель КАК ТочкаОтправления,
	|	УпаковатьЗаказы.ТочкаНазначения КАК ТочкаНазначения,
	|	УпаковатьЗаказы.Супергруппа КАК ШК,
	|	УпаковатьЗаказы.Ссылка КАК Ссылка,
	|	УпаковатьЗаказы.Покупки.(
	|		НомерСтроки КАК НомерСтроки,
	|		Покупка КАК Покупка,
	|		МестоХранения КАК МестоХранения,
	|		Габарит КАК Габарит,
	|		КоличествоМест КАК Количество,
	|		ВремяХранения КАК ВремяХранения,
	|		СтоимостьХранения КАК СтоимостьХранения,
	|		Партия КАК Партия,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(УпаковатьЗаказы.Покупки.Покупка) = ТИП(Справочник.Коробки)
	|					И УпаковатьЗаказы.Покупки.Покупка.ВидСтикера = ЗНАЧЕНИЕ(Перечисление.ВидыСтикеров.ГС)
	|				ТОГДА """"
	|			ИНАЧЕ УпаковатьЗаказы.Покупки.Участник
	|		КОНЕЦ КАК Участник,
	|		Покупка.Владелец КАК Организатор,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(УпаковатьЗаказы.Покупки.Покупка) = ТИП(Справочник.Коробки)
	|				ТОГДА УпаковатьЗаказы.Покупки.Покупка.ВидСтикера
	|			ИНАЧЕ ТИПЗНАЧЕНИЯ(УпаковатьЗаказы.Покупки.Покупка)
	|		КОНЕЦ КАК ТипПокупки,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(УпаковатьЗаказы.Покупки.Покупка) = ТИП(Справочник.Коробки)
	|					И УпаковатьЗаказы.Покупки.Покупка.ВидСтикера <> ЗНАЧЕНИЕ(Перечисление.ВидыСтикеров.ГС)
	|				ТОГДА УпаковатьЗаказы.Покупки.Покупка.НомерЗаказа
	|			ИНАЧЕ УпаковатьЗаказы.Покупки.Покупка.Код
	|		КОНЕЦ КАК КодПокупки,
	|		Участник.Код КАК КодУчастника
	|	) КАК Покупки
	|ИЗ
	|	Документ.УпаковатьЗаказы КАК УпаковатьЗаказы
	|ГДЕ
	|	УпаковатьЗаказы.Ссылка В(&Ссылка)
	|	И УпаковатьЗаказы.Покупки.Подбор";
	Запрос.Параметры.Вставить("Ссылка", МассивОбъектов);
	Выборка 			= Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
	Шапка 				= Макет.ПолучитьОбласть("Шапка");
	ОбластьПокупкиШапка = Макет.ПолучитьОбласть("ПокупкиШапка");
	ОбластьПокупки 		= Макет.ПолучитьОбласть("Покупки");
	ОбластьПодвал		= Макет.ПолучитьОбласть("Подвал");
	ТабДок.Очистить();

	
	
	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ШК							= Выборка.ШК.Код;
		ОбластьШК					= Шапка.Области.Шапка;
		РисунокШтрихкод				= Шапка.Рисунки.РисунокШтрихкод;
		
		
		ПараметрыШтрихкода			= Документы.ВыдачаТранзита.ЗаполнитьПараметрыОбработки(ШК);
		РисунокШтрихкод.Картинка 	= МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
		РисунокШтрихкод.Расположить(ОбластьШК);
		
		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ТабДок.Вывести(ОбластьПокупкиШапка);
		ВыборкаПокупки = Выборка.Покупки.Выбрать();
		Пока ВыборкаПокупки.Следующий() Цикл
			ОбластьПокупки.Параметры.Заполнить(ВыборкаПокупки);
			ТабДок.Вывести(ОбластьПокупки, ВыборкаПокупки.Уровень());
		КонецЦикла;
		ТабДок.Вывести(ОбластьПодвал);
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	
	Возврат ТабДок;
КонецФункции




#Область Проведение

Процедура 	ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	ТекстыЗапроса = Новый СписокЗначений;
	Получить_ТекстЗапроса_Транзит(Запрос, ТекстыЗапроса, Регистры);
	Получить_ТекстЗапроса_УпакованныеЗаказы(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
	
КонецПроцедуры

Процедура 	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.Комментарий КАК Комментарий
	|ИЗ
	|	Документ.УпаковатьЗаказы КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                                                         Реквизиты.Период);
	Запрос.УстановитьПараметр("Номер",                         Реквизиты.Номер);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",       ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяОбъекта()));
	Запрос.УстановитьПараметр("Комментарий",                   Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("ПометкаУдаления",               Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("Проведен",                      Реквизиты.Проведен);
	Запрос.УстановитьПараметр("КоличествоВДокументе",          Реквизиты.Проведен);
КонецПроцедуры

Функция 	Получить_ТекстЗапроса_Транзит(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "Транзит";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если ТипЗнч(Запрос.Параметры.Ссылка)=Тип("ДокументСсылка.УпаковатьЗаказы") Тогда
		ТекстЗапроса = "
		|
		|ВЫБРАТЬ
		|	УпаковатьЗаказыПокупки.Ссылка.Дата КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	УпаковатьЗаказыПокупки.Покупка КАК ПокупкаСсылка,
		|	УпаковатьЗаказыПокупки.МестоХранения КАК МестоХранения,
		|	УпаковатьЗаказыПокупки.Габарит КАК Габарит,
		|	УпаковатьЗаказыПокупки.Участник КАК Участник,
		|	УпаковатьЗаказыПокупки.Ссылка.ТочкаНазначения КАК Точка,
		|	УпаковатьЗаказыПокупки.Партия КАК Партия,
		|	1 КАК Количество
		|ИЗ
		|	Документ.УпаковатьЗаказы.Покупки КАК УпаковатьЗаказыПокупки
		|ГДЕ
		|	 УпаковатьЗаказыПокупки.Ссылка = &Ссылка и
		|    УпаковатьЗаказыПокупки.Подбор
		|";
	КонецЕсли;	

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

Функция 	Получить_ТекстЗапроса_УпакованныеЗаказы(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "УпакованныеЗаказы";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если ТипЗнч(Запрос.Параметры.Ссылка)=Тип("ДокументСсылка.УпаковатьЗаказы") Тогда
		ТекстЗапроса = "ВЫБРАТЬ
		               |	УпаковатьЗаказыПокупки.Ссылка.Дата 				КАК Период,
		               |	УпаковатьЗаказыПокупки.Покупка 					КАК Покупка,
		               |	УпаковатьЗаказыПокупки.МестоХранения 			КАК МестоХранения,
		               |	УпаковатьЗаказыПокупки.Габарит 					КАК Габарит,
		               |	УпаковатьЗаказыПокупки.Участник 				КАК Участник,
		               |	УпаковатьЗаказыПокупки.Ссылка.ТочкаНазначения 	КАК Точка,
		               |	УпаковатьЗаказыПокупки.Партия 					КАК Партия,
		               |	1 												КАК Количество
		               |ИЗ
		               |	Документ.УпаковатьЗаказы.Покупки КАК УпаковатьЗаказыПокупки
		               |ГДЕ
		               |	УпаковатьЗаказыПокупки.Ссылка = &Ссылка
		               |	И УпаковатьЗаказыПокупки.Подбор
		               |	И не УпаковатьЗаказыПокупки.Ссылка.КонтролироватьСупергруппы
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	УпаковатьЗаказы.Дата,
		               |	УпаковатьЗаказы.Супергруппа,
		               |	УпаковатьЗаказы.МестоХраненияСупергруппы,
		               |	УпаковатьЗаказы.ГабаритСупергруппы,
		               |	ЗНАЧЕНИЕ(Справочник.Участники.Нулевой),
		               |	УпаковатьЗаказы.ТочкаНазначения,
		               |	УпаковатьЗаказы.Ссылка,
		               |	1
		               |ИЗ
		               |	Документ.УпаковатьЗаказы КАК УпаковатьЗаказы
		               |ГДЕ
		               |	УпаковатьЗаказы.Ссылка = &Ссылка
		               |	И УпаковатьЗаказы.КонтролироватьСупергруппы
		               |	И УпаковатьЗаказы.Супергруппа <> ЗНАЧЕНИЕ(Справочник.Мегаордера.ПустаяСсылка)";
	КонецЕсли;	

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

Функция ПолноеИмяОбъекта()
	Возврат "Документ.УпаковатьЗаказы";
КонецФункции



Процедура ПроверитьНаличие(Объект,Отказ)      Экспорт
	Если Не Константы.КонтралироватьОстаткиПриРасходе.Получить() 
		Тогда  Возврат; КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Покупки.НомерСтроки КАК НомерСтроки,
		|	Покупки.Габарит КАК Габарит,
		|	Покупки.Количество КАК Количество,
		|	Покупки.МестоХранения КАК МестоХранения,
		|	Покупки.Партия КАК Партия,
		|	Покупки.Покупка КАК ПокупкаСсылка,
		|	Покупки.Участник КАК Участник,
		|	Покупки.ТочкаНазначения КАК Точка
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	&Покупки КАК Покупки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВТ.НомерСтроки) КАК НомерСтроки,
		|	ВТ.Габарит КАК Габарит,
		|	СУММА(ВТ.Количество) КАК Количество,
		|	ВТ.МестоХранения КАК МестоХранения,
		|	ВТ.Партия КАК Партия,
		|	ВТ.ПокупкаСсылка КАК ПокупкаСсылка,
		|	ВТ.Участник КАК Участник,
		|	ВТ.Точка КАК Точка
		|ПОМЕСТИТЬ ВТГруппа
		|ИЗ
		|	ВТ КАК ВТ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ.Точка,
		|	ВТ.Участник,
		|	ВТ.Габарит,
		|	ВТ.МестоХранения,
		|	ВТ.Партия,
		|	ВТ.ПокупкаСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТГруппа.НомерСтроки КАК НомерСтроки,
		|	ВТГруппа.Габарит КАК Габарит,
		|	ВТГруппа.Количество КАК Количество,
		|	ВТГруппа.МестоХранения КАК МестоХранения,
		|	ВТГруппа.Партия КАК Партия,
		|	ВТГруппа.ПокупкаСсылка КАК ПокупкаСсылка,
		|	ВТГруппа.Участник КАК Участник,
		|	ВТГруппа.Точка КАК Точка,
		|	ЕСТЬNULL(ТранзитОстатки.КоличествоОстаток, 0) КАК КоличествоНаСкладе
		|ПОМЕСТИТЬ СОстатками
		|ИЗ
		|	ВТГруппа КАК ВТГруппа
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Транзит.Остатки(&НаДату, ) КАК ТранзитОстатки
		|		ПО ВТГруппа.Участник = ТранзитОстатки.Участник
		|			И ВТГруппа.ПокупкаСсылка = ТранзитОстатки.ПокупкаСсылка
		|			И ВТГруппа.МестоХранения = ТранзитОстатки.МестоХранения
		|			И ВТГруппа.Габарит = ТранзитОстатки.Габарит
		|			И ВТГруппа.Партия = ТранзитОстатки.Партия
		|			И ВТГруппа.Точка = ТранзитОстатки.Точка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	0,
		|	Транзит.Габарит,
		|	Транзит.Количество * -1,
		|	Транзит.МестоХранения,
		|	Транзит.Партия,
		|	Транзит.ПокупкаСсылка,
		|	Транзит.Участник,
		|	Транзит.Точка,
		|	0
		|ИЗ
		|	РегистрНакопления.Транзит КАК Транзит
		|ГДЕ
		|	Транзит.Регистратор = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СОстатками.Габарит КАК Габарит,
		|	СУММА(СОстатками.Количество) КАК Количество,
		|	СОстатками.МестоХранения КАК МестоХранения,
		|	СОстатками.Партия КАК Партия,
		|	СОстатками.ПокупкаСсылка КАК ПокупкаСсылка,
		|	СОстатками.Участник КАК Участник,
		|	СОстатками.Точка КАК Точка,
		|	СУММА(СОстатками.КоличествоНаСкладе) КАК КоличествоНаОстатках,
		|	МАКСИМУМ(СОстатками.НомерСтроки) КАК НомерСтроки
		|ИЗ
		|	СОстатками КАК СОстатками
		|
		|СГРУППИРОВАТЬ ПО
		|	СОстатками.Габарит,
		|	СОстатками.МестоХранения,
		|	СОстатками.Участник,
		|	СОстатками.ПокупкаСсылка,
		|	СОстатками.Точка,
		|	СОстатками.Партия
		|
		|ИМЕЮЩИЕ
		|	СУММА(СОстатками.Количество) > 0 И
		|	СУММА(СОстатками.Количество) > СУММА(СОстатками.КоличествоНаСкладе)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";

	ТаблицаПокупокДокумента=Объект.Покупки.Выгрузить();
	ТаблицаПокупокДокумента.Колонки.Добавить("ТочкаНазначения",новый ОписаниеТипов("СправочникСсылка.ТочкиРаздачи"));
	ТаблицаПокупокДокумента.ЗаполнитьЗначения(Объект.ТочкаНазначения,"ТочкаНазначения");

	Запрос.УстановитьПараметр("Покупки",ТаблицаПокупокДокумента);
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Запрос.УстановитьПараметр("НаДату",Объект.Дата);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Ошибки=неопределено;
	Пока Выборка.Следующий() Цикл
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки,"Объект.Покупки["+(Выборка.НомерСтроки-1)+"].Количество",
		"В строке: "+Выборка.НомерСтроки+". На складе: "+Выборка.КоличествоНаОстатках+" шт. из требуемых: "+Выборка.Количество,,Выборка.НомерСтроки-1);
	КонецЦикла;
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки,Отказ);
	
КонецПроцедуры

