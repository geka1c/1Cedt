
#Область Проведение

Процедура ОбработкаПроведения(Отказ, Режим)
	Документы.УпаковатьЗаказы.ПроверитьНаличие(ЭтотОбъект,Отказ);
	
	#Область ПравильноеПроведение
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, Режим);
	Документы.УпаковатьЗаказы.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	ДополнительныеСвойства.Вставить("ЭтоНовый",ЭтоНовый());
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	СП_ДвиженияСервер.ОтразитьТранзит(ДополнительныеСвойства, Движения, Отказ);
	СП_ДвиженияСервер.ОтразитьУпакованныеЗаказы(ДополнительныеСвойства, Движения, Отказ);
	#КонецОбласти
	
КонецПроцедуры


#КонецОбласти



Процедура ЗаполнитьПоТочкеНазначения(ОчищатьЗаказы=Ложь)   Экспорт
	Если не ЗначениеЗаполнено(ТочкаНазначения) Тогда
		Возврат;
	КонецЕсли;	
	Дата=ТекущаяДата();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	&Подбор КАК Подбор,
		|	ТранзитОстатки.ПокупкаСсылка КАК Покупка,
		|	ТранзитОстатки.Участник КАК Участник,
		|	ТранзитОстатки.МестоХранения КАК МестоХранения,
		|	ТранзитОстатки.Габарит КАК Габарит,
		|	СУММА(ТранзитОстатки.КоличествоОстаток) КАК КоличествоМест,
		|	СУММА(ВЫБОР
		|			КОГДА ТИПЗНАЧЕНИЯ(ТранзитОстатки.ПокупкаСсылка) = ТИП(Справочник.Коробки)
		|				ТОГДА ТранзитОстатки.ПокупкаСсылка.Количество
		|			ИНАЧЕ ТранзитОстатки.КоличествоОстаток
		|		КОНЕЦ) КАК Количество,
		|	ТранзитОстатки.Партия КАК Партия
		|ИЗ
		|	РегистрНакопления.Транзит.Остатки(&ДатаДокумента, Точка = &Точка) КАК ТранзитОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ТранзитОстатки.Габарит,
		|	ТранзитОстатки.МестоХранения,
		|	ТранзитОстатки.ПокупкаСсылка,
		|	ТранзитОстатки.Участник,
		|	ТранзитОстатки.Партия
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТранзитОстатки.КоличествоОстаток) > 0";

	Запрос.УстановитьПараметр("Точка", ТочкаНазначения);
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.УстановитьПараметр("Подбор", Константы.ПомечатьЗаказыПриФормированииДокументаВыдачаТранзита.Получить());

	Результат 	= Запрос.Выполнить();
	выборка 	= Результат.Выбрать();
	Если ОчищатьЗаказы Тогда
		Покупки.Очистить();
	КонецЕсли;	
		
	Пока выборка.Следующий() Цикл
		стр_покупок = Покупки.Добавить();
		ЗаполнитьЗначенияСвойств(стр_покупок, выборка);
		структура_Стоимости 			= СП_РаботаСДокументами.ПолучитьСтоимостьХранения(Выборка,Дата);
		Стр_Покупок.ВремяХранения     	= структура_Стоимости.ВремяХранения;
		Стр_Покупок.СтоимостьХранения 	= структура_Стоимости.СтоимостьХранения;
		
		
		стр_покупок.Подбор 				= Ложь;
	КонецЦИкла;	
	СтоимостьИтого	=	Покупки.Итог("СтоимостьХранения");	

КонецПроцедуры 

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если РежимЗаписи=РежимЗаписиДокумента.Проведение Тогда
		НеПомеченныеСтроки=Покупки.НайтиСтроки(Новый Структура("Подбор",ложь));
		Для каждого стр из НеПомеченныеСтроки Цикл
			Покупки.Удалить(стр);
		КонецЦикла
	Конецесли;

КонецПроцедуры


Процедура ПриЗаписи(Отказ)
	// Вставить содержимое обработчика.
КонецПроцедуры

