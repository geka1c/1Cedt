

&НаКлиенте
Процедура ОбновитьЗаказыНаСкладе(Команда)
	ОбновитьЗаказыНаСкладеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СП_РаботаСДокументами.ПриСозданииНаСервере(ЭтотОбъект);	
	Если Объект.ЗаказыНаСкладе.Количество() = 0 и Объект.СтатусДоставки<>Перечисления.СтатусыДоставки.Отправлен Тогда
		ОбновитьЗаказыНаСкладеНаСервере();
	КонецЕсли;	
	
	Если не ЗначениеЗаполнено(Объект.МестоХранения) Тогда
		Объект.МестоХранения= Справочники.ТочкиРаздачи.НайтиПоКоду("0100").МестоХранения;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СделатьОтправленным(Команда)
	СделатьОтправленнымНаСервере();
КонецПроцедуры
Процедура СделатьОтправленнымНаСервере()
	Объект.СтатусДоставки = Перечисления.СтатусыДоставки.Отправлен;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	//Сканер штрихкода
	СтоСП_Клиент.ПодключитьСканерШК(УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	СП_РаботаСДокументами_Клиент.ПроверитьОтветственного(ЭтотОбъект,Отказ);
КонецПроцедуры




&НаСервере
Процедура ОбновитьЗаказыНаСкладеНаСервере()
	док	= ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.КурьерскаяДоставка"));
	док.ЗаполнитьОстатками();
	ЗначениеВДанныеФормы(док, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьАдресДоставки(Команда)
	ПолучитьАдресДоставкиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьАдресДоставкиНаСервере()
	док	= ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.КурьерскаяДоставка"));
	док.ПолучитьАдресДоставки_Api();
	ЗначениеВДанныеФормы(док, Объект);
КонецПроцедуры


Процедура РасчитатьСтоимостьИтого()
	Объект.СтоимостьИтого = Объект.СтоимостьХранения+Объект.СтоимостьДоставки;
КонецПроцедуры

&НаКлиенте
Процедура СтоимостьХраненияПриИзменении(Элемент)
	РасчитатьСтоимостьИтого();
КонецПроцедуры

&НаКлиенте
Процедура СтоимостьДоставкиПриИзменении(Элемент)
	РасчитатьСтоимостьИтого();
КонецПроцедуры





&НаСервере
Процедура ГруппаСтраницыПриСменеСтраницыНаСервере()
	Если Элементы.Страницы.ТекущаяСтраница	= Элементы.Страницы.ПодчиненныеЭлементы.ГруппаПротокол Тогда
		парамДок				= Протокол.Параметры.Элементы.Найти("Документ");
		парамДок.Значение		= Объект.Ссылка;
		парамДок.Использование	= Истина;
	Конецесли;	
КонецПроцедуры


&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ГруппаСтраницыПриСменеСтраницыНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ОтправитьСчет(Команда)
	ОтправитьСчетНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтправитьСчетНаСервере()
	док	= ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.КурьерскаяДоставка"));
	док.ВыставитьСчет_Api();
	ЗначениеВДанныеФормы(док, Объект);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды	
КонецПроцедуры



// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

