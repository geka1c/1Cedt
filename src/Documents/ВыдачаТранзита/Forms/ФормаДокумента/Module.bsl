#Область ШтрихКоды

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если 	ИмяСобытия 	= "ScanData" и
			Источник 	= "ПодключаемоеОборудование" и
			ВводДоступен()									Тогда
			
			ШК = СтоСП_Клиент.ПолучитьШКизПараметров(Параметр);
			ОбработатьШКнаКлиенте(ШК);
	ИначеЕсли ИмяСобытия="ПерепровестиДокумент" и Параметр=Объект.Ссылка Тогда
		Записать(новый Структура("РежимЗаписи",РежимЗаписиДокумента.Проведение));
	ИначеЕсли ИмяСобытия="ОбновитьФорму" Тогда	
        ОбновитьСупергруппу();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОбработатьШКнаКлиенте(ШК)
	ДанныеШК    = СП_Штрихкоды.ПолучитьДанныеПоШК(ШК);
	
	Если 	Строка(ДанныеШК.Тип) = "Посылка (12)" 			или
			Строка(ДанныеШК.Тип) = "Покупка (11)" 			или 
			Строка(ДанныеШК.Тип) = "Заказ100маркета (33)" 	или
			Строка(ДанныеШК.Тип) = "Коробка (44)"				Тогда
		
		ПометитьПокупку(ДанныеШК);
	Иначеесли Строка(ДанныеШК.Тип) = "Сотрудник (55)" 			Тогда	
		Если СП_РаботаСДокументами_Клиент.ЗаписатьДокумент(этотОбъект,,ДанныеШК.Сотрудник) Тогда
			Закрыть();
		КонецЕсли;		
	КонецЕсли;
	Модифицированность			= Истина;
	УстановитьВидимость();
КонецПроцедуры	


&НаКлиенте
Процедура ВвестиШтрихКодВручную(Команда)
	ОткрытьФорму("ОбщаяФорма.ФормаВводаШК",,ЭтотОбъект,,,,Новый ОписаниеОповещения("ВвестиШтрихКодВручную_Завершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ВвестиШтрихКодВручную_Завершение(ШК, ДополнительныеПараметры) Экспорт
	ОбработатьШКнаКлиенте(ШК);
КонецПроцедуры	

&НаКлиенте
Процедура ПометитьПокупку(ДанныеШК)

	строка 		 	= Новый Структура;
	ЕстьУчастник 	= ДанныеШК.Свойство("Участник");
	Если ЕстьУчастник Тогда
		строка.Вставить("Участник",	ДанныеШК.Участник);
	КонецЕсли;
	строка.Вставить("Покупка", ДанныеШК.Заказ);
	
	МассивСтрок	= Объект.Покупки.НайтиСтроки(строка);
	
	Если МассивСтрок.Количество()	= 0 Тогда
		ТекстСообщения="Не найдено в документе: "+Символы.ПС+
						?(ЕстьУчастник, "участник: "+ДанныеШК.Участник,"")+" ,"+"покупка:  "+ДанныеШК.Заказ+".";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	ИначеЕсли МассивСтрок[0].Подбор	= Истина Тогда
		ТекстСообщения="Строка №"+МассивСтрок[0].НомерСтроки+" уже помечена: "+Символы.ПС+
						?(ЕстьУчастник, "участник: "+ДанныеШК.Участник,"")+" ,"+"покупка:  "+ДанныеШК.Заказ+".";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.Покупки["+(МассивСтрок[0].НомерСтроки-1)+"].Покупка");
		Возврат;
	Иначе
		МассивСтрок[0].Подбор	= Истина;
	КонецЕсли;	
	УстановитьКоличествоПомеченныхСтрок();
#Если НЕ ВебКлиент Тогда
	сигнал();
#КонецЕсли
КонецПроцедуры



#КонецОбласти

#Область СобытияФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	СП_РаботаСДокументами.ПриСозданииНаСервере(ЭтотОбъект);	
	 
	Если Не ЗначениеЗаполнено(Объект.ВидОперации)  Тогда
		объект.ВидОперации	= Перечисления.ВидыОперацийВыдачаТранзита.НаОднуТочку;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ОграничениеВыдачи) Тогда
		Объект.ОграничениеВыдачи = СоединитьДатуИВремя(ТекущаяДата(), Константы.ОграничениеВыдачиТранзита.Получить());
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ТочкаНазначения) Тогда
		ЗаполнитьПоТочекНазначенияНаСервере(Параметры.ТочкаНазначения);
	КонецЕсли;
	ПодсветкаСтрок();
КонецПроцедуры


Функция СоединитьДатуИВремя(Дата, Время) Экспорт
 
  ДатаСтрока  = Формат(Дата, "ДФ=""ггггММдд""");
  ВремяСтрока = Формат(Время, "ДФ=""ЧЧммсс""");
  Результат  = Дата(ДатаСтрока + ВремяСтрока);
 
  Возврат Результат;
 
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
   СтоСП_Клиент.ПодключитьСканерШК(УникальныйИдентификатор);
	
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	СП_РаботаСДокументами_Клиент.ПроверитьОтветственного(ЭтотОбъект,Отказ);
	УстановитьКоличествоПомеченныхСтрок();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	
	Для каждого стр из Объект.Покупки Цикл
		Если ТипЗнч(стр.Покупка)=Тип("СправочникСсылка.Коробки") Тогда
			ОповеститьОбИзменении(стр.Покупка);
		КонецЕсли;
		ОповеститьОбИзменении(стр.Партия);	
	КонецЦикла;	

	Оповестить("ПровелиВыдачуТранзита",истина);

	ПослеЗаписиНаСервере();
	УстановитьВидимость();
//	Если 		КурьерскаяДоставка(Объект.ТочкаНазначения) Тогда
//		ПоказатьВопрос(новый ОписаниеОповещения("ОтправитьВедомостьКурьерскойДоставки_Завершение",ЭтотОбъект),"Отправить по почте ведомость курьерской доставки?", РежимДиалогаВопрос.ДаНет );
//	КонецЕсли;
КонецПроцедуры

Процедура ПослеЗаписиНаСервере()

	Если Константы.ВыгружатьТранзитПриЗаписи.Получить()  Тогда
		аспПроцедурыОбменаДанными.УдалитьДокументИзОтправленных(Объект.Ссылка);
		аспПроцедурыОбменаДанными.СформироватИОтправитьПакет(Объект.Ссылка);
	Иначе	
		аспПроцедурыОбменаДанными.УдалитьДокументИзОтправленных(Объект.Ссылка);
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КурьерскаяДоставка(ТочкаНазначения)	
	Возврат (ТочкаНазначения = Справочники.ТочкиРаздачи.НайтиПоКоду("0100"));
КонецФункции	

&НаКлиенте
Процедура ПриЗакрытии()
	Оповестить("ОбновитьВсеЗаявки");
КонецПроцедуры

////////////////////////////



&НаКлиенте
Процедура ПокупкиПриИзменении(Элемент)
	УстановитьКоличествоПомеченныхСтрок();
КонецПроцедуры

&НаКлиенте
Процедура ТочкаНазначенияПриИзменении(Элемент)
	Объект.ТочкаТранзита = Объект.ТочкаНазначения;
	УстановитьВидимость();	
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры


&НаСервере
Процедура ТочкаТранзитаПриИзмененииНаСервере()
	Если 	ЗначениеЗаполнено(Объект.Супергруппа) и 
			Объект.ТочкаТранзита <> Объект.Супергруппа.ПунктВыдачи Тогда
			
		обСупергруппа				= Объект.Супергруппа.ПолучитьОбъект();
		обСупергруппа.ПунктВыдачи	= Объект.ТочкаТранзита;
		
		Попытка
			обСупергруппа.Записать();
		Исключение
		КонецПопытки;
		
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ТочкаТранзитаПриИзменении(Элемент)
	ТочкаТранзитаПриИзмененииНаСервере();
КонецПроцедуры



#КонецОбласти


#Область Команды
&НаКлиенте
Процедура ИсторияДоставки(Команда)
//	ИсторияЗаказов	= ИсторияДоставкиНаСервере(Элементы.Покупки.ТекущиеДанные.ШК);
	ОткрытьФорму(	"Отчет.ИсторияЗаказов.Форма.ФормаОтчета",
					новый структура("мегаордер, СформироватьПриОткрытии",Элементы.Покупки.ТекущиеДанные.ШК, истина),
					ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
					
	
КонецПроцедуры


&НаКлиенте
Процедура ПометитьВсе(Команда)
	Если Элементы.Покупки.ТолькоПросмотр Тогда Возврат; КонецЕсли;
	Для каждого стр из Объект.Покупки Цикл
		стр.Подбор=Истина;
	КонецЦикла;	
	УстановитьКоличествоПомеченныхСтрок();
КонецПроцедуры

&НаКлиенте
Процедура ПометитьУпакованные(Команда)
	Если Элементы.Покупки.ТолькоПросмотр Тогда Возврат; КонецЕсли;
	Для каждого стр из Объект.Покупки Цикл
		Если стр.Упакован Тогда
			стр.Подбор=Истина;
		КонецЕсли;	
	КонецЦикла;	
	УстановитьКоличествоПомеченныхСтрок();
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыделениеВсе(Команда)
	Если Элементы.Покупки.ТолькоПросмотр Тогда Возврат; КонецЕсли;
	Для каждого стр из Объект.Покупки Цикл
		стр.Подбор=Ложь;
	КонецЦикла;
	УстановитьКоличествоПомеченныхСтрок();
КонецПроцедуры

&НаКлиенте
Процедура ИнвертироватьВыделение(Команда)
	Если Элементы.Покупки.ТолькоПросмотр Тогда Возврат; КонецЕсли;
	Для каждого стр из Объект.Покупки Цикл
		стр.Подбор=не стр.Подбор;
	КонецЦикла;
	УстановитьКоличествоПомеченныхСтрок();
КонецПроцедуры


&НаКлиенте
Процедура ДоЗаполнитьОстатками(Команда)
	Если не Объект.Проведен Тогда
		Ответ = Вопрос("Для до заполнения докумен должен быть проведен. Провести?", РежимДиалогаВопрос.ДаНет, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		Попытка
			Записать(новый Структура("РежимЗаписи",РежимЗаписиДокумента.Проведение));
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());		
			Возврат;
		КонецПопытки;
	КонецЕсли;	
	ДоЗаполнитьОстаткамиНаСервере();
КонецПроцедуры

Процедура ДоЗаполнитьОстаткамиНаСервере()
	об=ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.ВыдачаТранзита"));
	об.ЗаполнитьПоТочкеНазначения(Ложь);
	ЗначениеВДанныеФормы(об,Объект);
КонецПроцедуры


&НаСервере
Процедура ПерезаполнитьУчастниковНаСервере()
	Для каждого стр из Объект.Покупки Цикл
		Если ТипЗнч(стр.Партия)=Тип("ДокументСсылка.ОтправлениеТранзита") Тогда
			стр.участник=стр.партия.Участник ;
		КонецЕсли;
	КонецЦикла	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьУчастников(Команда)
	ПерезаполнитьУчастниковНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьОграничениеВыдачи(Команда)
	ОткрытьФорму("ОбщаяФорма.ФормаОжиданиеВводаШтрихкода",,ЭтотОбъект,,,,Новый ОписаниеОповещения("ВвестиШтрихКодАдминистратора_Завершение", ЭтотОбъект),РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры


&НаКлиенте
Процедура ВвестиШтрихКодАдминистратора_Завершение(ШК, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(ШК) =  Тип("Структура") и
		 ШК.Свойство("Администратор")	и
		 ШК.Администратор         Тогда
		ПараметрыВыбораДатыИВремени = Новый Структура("Сообщение", "Документ будет перезаполнен заказами, с учетом  введенного ограничения!");
		ОткрытьФорму("ОбщаяФорма.ВыборДатыИВремени",ПараметрыВыбораДатыИВремени ,ЭтотОбъект,,,,Новый ОписаниеОповещения("ВыборДатыИВремени_Завершение", ЭтотОбъект),РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	 
	КонецЕсли;	 
КонецПроцедуры	

&НаКлиенте
Процедура ВыборДатыИВремени_Завершение(ШК, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(ШК) =  Тип("Дата") и
		 ЗначениеЗаполнено(ШК)          Тогда
		Объект.ОграничениеВыдачи = ШК;
		ЗаполнитьПоТочекНазначенияНаСервере();
	КонецЕсли;	 
КонецПроцедуры

Процедура ЗаполнитьПоТочекНазначенияНаСервере(ПунктВыдачи = Неопределено)
	объект_ВыдачаТранзита					= ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.ВыдачаТранзита"));
	Если ПунктВыдачи <> Неопределено Тогда
		объект_ВыдачаТранзита.ТочкаНазначения	= Параметры.ТочкаНазначения;
		объект_ВыдачаТранзита.ТочкаТранзита		= Параметры.ТочкаНазначения;
	КонецЕсли;
	объект_ВыдачаТранзита.ЗаполнитьПоТочкеНазначения();		
	ЗначениеВДанныеФормы(объект_ВыдачаТранзита,Объект);	
КонецПроцедуры		

#КонецОбласти

#Область Вспомогательные

Процедура УстановитьВидимость()
	этоDPD	= (Объект.ТочкаНазначения = СП_РаботаСоСправочниками.ПолучитьПунктВыдачиПо_Коду("0048"));
	ЭтоEMS	= (Объект.ТочкаНазначения = СП_РаботаСоСправочниками.ПолучитьПунктВыдачиПо_Коду("0021")); 

   Элементы.ПокупкиГабарит.Видимость			= не Объект.ПоОбмену;
   Элементы.ПокупкиМестоХранения.Видимость		= не Объект.ПоОбмену;
   Элементы.НомерОтправителя.Видимость			= Объект.ПоОбмену;
   Элементы.ПокупкиНомерОтправителя.Видимость 	= Объект.ПоОбмену;
   Элементы.ТочкаОтправитель.Видимость			= Объект.ПоОбмену;
   УстановитьКоличествоПомеченныхСтрок();
   
   НаНесколькоТочек							= (Объект.ВидОперации=Перечисления.ВидыОперацийВыдачаТранзита.НаНесколькоТочек);
   Элементы.ТочкаНазначения.Видимость		= не НаНесколькоТочек;
   Элементы.Покупки.ПодчиненныеЭлементы.ПокупкиТочкаНазначения.Видимость=НаНесколькоТочек;	
   Элементы.ГруппаЗаявкиВТК.Видимость		= ПолучитьВидимостьЗаявок();
   
   Элементы.ТК.Видимость					= Объект.КонтролироватьСупергруппы;
   
   #Область ПартияТК
   Элементы.бб.Видимость					= Ложь;   
   Элементы.ПР.Видимость					= Ложь;
   Элементы.ПартияТК.Видимость				= Ложь;
   Элементы.ГруппаТК.ОтображениеСтраниц		= ОтображениеСтраницФормы.Нет;
   

   Элементы.ГруппаDPD.Видимость				= этоDPD;   
   Элементы.ПартияТК.Видимость				= этоDPD;
   Если этоDPD Тогда
	   Элементы.ГруппаТК.ТекущаяСтраница=Элементы.ГруппаDPD;
   КонецЕсли;   
   
   
   Если (Объект.ТочкаНазначения = СП_РаботаСоСправочниками.ПолучитьПунктВыдачиПо_Коду("0098")) Тогда
	   Элементы.ГруппаТК.ТекущаяСтраница	= Элементы.бб;
	   Элементы.бб.Видимость				= Истина;   
	   Элементы.ПартияТК.Видимость			= Истина;
	   ТолькоПросмотр=ЗначениеЗаполнено(Объект.АктТК) и не РольДоступна("ПолныеПрава");
   ИначеЕсли 	Объект.ТочкаНазначения = СП_РаботаСоСправочниками.ПолучитьПунктВыдачиПо_Коду("0020") или
	   			Объект.ТочкаНазначения = СП_РаботаСоСправочниками.ПолучитьПунктВыдачиПо_Коду("0021")	Тогда	
	   Элементы.ГруппаТК.ТекущаяСтраница	= Элементы.ПР;
	   Элементы.ПР.Видимость				= Истина;
	   Элементы.ПартияТК.Видимость			= Истина;
	   ТолькоПросмотр						= Объект.ПартииТК.Количество()>0  и не РольДоступна("ПолныеПрава");
   КонецЕсли;
   #КонецОбласти 
   
   #Область Супергруппы
   Если не ЗначениеЗаполнено(Объект.Супергруппа) Тогда
	   Элементы.СформироватьСупергруппу.Заголовок	= "Сформировать супергруппу";
   Иначе
	   Элементы.СформироватьСупергруппу.Заголовок	= "Изменить супергруппу";
   КонецЕсли;
   ОбновитьСупергруппу();
   #КонецОбласти 
   ТолькоПросмотр=ТолькоПросмотр Или Объект.ПоОбмену;
КонецПроцедуры // УстановитьВидимость()()

Процедура УстановитьКоличествоПомеченныхСтрок()
	Масс						= Объект.Покупки.НайтиСтроки(новый Структура("Подбор",Истина));	
	КоличествоПомеченныхСтрок	= масс.Количество();
	Объект.СтоимостьХранения	= 0;
	Объект.СтоимостьДоставки	= 0;
	Объект.СтоимостьИтого		= 0;
	Объект.КоличествоИтого		= 0;
	Для каждого стр из Масс Цикл
		Объект.СтоимостьХранения	= Объект.СтоимостьХранения+Стр.СтоимостьХранения;
		Объект.СтоимостьДоставки	= Объект.СтоимостьДоставки+Стр.СтоимостьДоставки;
		Объект.СтоимостьИтого		= Объект.СтоимостьИтого+Стр.СтоимостьИтого;
		Объект.КоличествоИтого		= Объект.КоличествоИтого+Стр.Количество;
	КонецЦикла;
КонецПроцедуры	

&НаСервере
Процедура ПодсветкаСтрок()
    ЭтаФорма.УсловноеОформление.Элементы.Очистить();
	ЭлементУсловногоОформления 		= УсловноеОформление.Элементы.Добавить();
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("Покупки");
	ЭлементОтбора 					= ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Объект.Покупки.Подбор");
	ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение 	= истина;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.БледноЗеленый);	
	
	ЭлементУсловногоОформления 		= УсловноеОформление.Элементы.Добавить();
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("Покупки");
	ЭлементОтбора 					= ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Объект.Покупки.Предупреждение");
	ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение 	= Перечисления.ПредупрежденияПрихода.ЧерныйСписок;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.СветлоСерый);	
	
КонецПроцедуры

#КонецОбласти

#Область Заявки

Функция ПолучитьВидимостьЗаявок()
	Если объект.ЗаявкиВТК.Количество()=0 
		или (объект.ЗаявкиВТК.Количество()=1 и не ЗначениеЗаполнено(объект.ЗаявкиВТК[0].Заявка)) 
		или объект.ПоОбмену Тогда 
		возврат Ложь;
	Иначе
		Возврат истина;
	КонецЕсли;
КонецФункции	

&НаКлиенте
Процедура ЗаявкиВТКПриАктивизацииСтроки(Элемент)
	ОтобратьПоЗаявке();
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоЗаявке()
	Если ОтбиратьПоЗаявкам Тогда
		Элементы.Покупки.ОтборСтрок=Новый ФиксированнаяСтруктура("Заявка",Элементы.ЗаявкиВТК.ТекущиеДанные.Заявка);
	Иначе
		Элементы.Покупки.ОтборСтрок=неопределено;
	КонецЕсли;
КонецПроцедуры	

&НаКлиенте
Процедура ОтбиратьПоЗаявкамПриИзменении(Элемент)
	ОтобратьПоЗаявке();
КонецПроцедуры


#КонецОбласти


#Область Печать


 &НаСервере
Процедура ЗаполнитьЧек(ТабДок,Покупки, ТочкаНазначения)
	Макет = Документы.ВыдачаТранзита.ПолучитьМакет("Чек");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПокупкиШапка = Макет.ПолучитьОбласть("ПокупкиШапка");
	ОбластьПокупки = Макет.ПолучитьОбласть("Покупки");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ТабДок.Очистить();
	ВставлятьРазделительСтраниц = Ложь;
	Итого=0;

    	Шапка.Параметры.Дата=ТекущаяДата();
		Шапка.Параметры.Номер="Не записан";
		
		Шапка.Параметры.НазваниеОрганизации=Константы.НазваниеОрганизации.Получить();
		Шапка.Параметры.ТочкаНазначения=ТочкаНазначения;

		ТабДок.Вывести(Шапка);
	
	
	
	Для каждого ЭлемПокупки из Объект[Покупки] Цикл
		Если не ЭлемПокупки.Подбор Тогда Продолжить; КонецЕсли;	
		Если ТипЗнч(ЭлемПокупки.Покупка)=Тип("СправочникСсылка.Покупки") Тогда
			ОбластьПокупки.Параметры.Организатор=ЭлемПокупки.Покупка.Владелец.Наименование;
		Иначе
			ОбластьПокупки.Параметры.Организатор=ЭлемПокупки.Покупка.Организатор;
		Конецесли;	
		ОбластьПокупки.Параметры.Покупка=ЭлемПокупки.Покупка.Код;
		ОбластьПокупки.Параметры.ПокупкаСпр=ЭлемПокупки.Покупка.Наименование;
		ОбластьПокупки.Параметры.МестоХранения=ЭлемПокупки.МестоХранения;
		ОбластьПокупки.Параметры.Габарит        =ЭлемПокупки.Габарит;
		ОбластьПокупки.Параметры.ВремяХранения  =ЭлемПокупки.ВремяХранения;
		ОбластьПокупки.Параметры.СтоимостьХранения  =ЭлемПокупки.СтоимостьХранения;
		ТабДок.Вывести(ОбластьПокупки);
		Итого= Итого+ЭлемПокупки.СтоимостьХранения;

	КонецЦикла;
	ОбластьПодвал.Параметры.ТочкаНазначения=ТочкаНазначения;
		ОбластьПодвал.Параметры.Итого=Итого;
		ТабДок.Вывести(ОбластьПодвал);
КонецПроцедуры // ПолучитМакетЧека()

&НаКлиенте
Процедура ЧекНЗ(Команда)
	ТабДок = Новый ТабличныйДокумент;
	ЗаполнитьЧек(ТабДок,"Покупки", Объект.ТочкаНазначения);
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.АвтоМасштаб=Истина;
	ТабДок.ПолеСлева=0;
	ТабДок.ПолеСправа=0;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	//ТабДок.Показать();
	ТабДок.Напечатать();
КонецПроцедуры

Процедура ЗаполнитьСжатыйЧек(ТабДок)

	Макет = Документы.ВыдачаТранзита.ПолучитьМакет("Макет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВыдачаТранзитаПокупки.Покупка.Владелец.Наименование КАК Организатор,
		|	ВыдачаТранзитаПокупки.Покупка.Наименование КАК Покупка,
		|	СУММА(ВыдачаТранзитаПокупки.ВремяХранения) КАК ВремяХранения,
		|	СУММА(ВыдачаТранзитаПокупки.СтоимостьХранения) КАК СтоимостьХранения,
		|	ВыдачаТранзитаПокупки.Габарит.Наименование КАК Габарит,
		|	СУММА(ВыдачаТранзитаПокупки.Количество) КАК Количество,
		|	ВыдачаТранзитаПокупки.Участник.Наименование КАК Участник
		|ИЗ
		|	Документ.ВыдачаТранзита.Покупки КАК ВыдачаТранзитаПокупки
		|ГДЕ
		|	ВыдачаТранзитаПокупки.Ссылка = &Ссылка
		|	И ВыдачаТранзитаПокупки.Подбор
		|
		|СГРУППИРОВАТЬ ПО
		|	ВыдачаТранзитаПокупки.Покупка.Владелец.Наименование,
		|	ВыдачаТранзитаПокупки.Покупка.Наименование,
		|	ВыдачаТранзитаПокупки.Габарит.Наименование,
		|	ВыдачаТранзитаПокупки.Участник,
		|	ВыдачаТранзитаПокупки.Участник.Наименование
		|ИТОГИ
		|	СУММА(СтоимостьХранения),
		|	СУММА(Количество)
		|ПО
		|	ОБЩИЕ,
		|	Организатор,
		|	Габарит,
		|	Покупка
		|АВТОУПОРЯДОЧИВАНИЕ";

	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);

	Результат = Запрос.Выполнить();

	Шапка = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги");
	ОбластьОрганизатор = Макет.ПолучитьОбласть("Организатор");
	ОбластьГабарит = Макет.ПолучитьОбласть("Габарит");
	ОбластьПокупка = Макет.ПолучитьОбласть("Покупка");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	
	
    	Шапка.Параметры.Дата=Объект.Дата;
		Шапка.Параметры.Номер=Объект.Номер;
		
		Шапка.Параметры.НазваниеОрганизации=Константы.НазваниеОрганизации.Получить();
		Шапка.Параметры.ТочкаНазначения=Объект.ТочкаНазначения;

		ТабДок.Вывести(Шапка);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ВыборкаОбщийИтог.Следующий();		// Общий итог
	ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
	ТабДок.Вывести(ОбластьОбщийИтог, ВыборкаОбщийИтог.Уровень());

	ВыборкаОрганизатор = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаОрганизатор.Следующий() Цикл
		ОбластьОрганизатор.Параметры.Заполнить(ВыборкаОрганизатор);
		ТабДок.Вывести(ОбластьОрганизатор, ВыборкаОрганизатор.Уровень());

		ВыборкаГабарит = ВыборкаОрганизатор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаГабарит.Следующий() Цикл
		//	ОбластьГабарит.Параметры.Заполнить(ВыборкаГабарит);
		//	ТабДок.Вывести(ОбластьГабарит, ВыборкаГабарит.Уровень());

			ВыборкаПокупка = ВыборкаГабарит.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаПокупка.Следующий() Цикл
				ОбластьПокупка.Параметры.Заполнить(ВыборкаПокупка);
				ТабДок.Вывести(ОбластьПокупка, ВыборкаПокупка.Уровень());

				ВыборкаДетальныеЗаписи = ВыборкаПокупка.Выбрать();

				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
					ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
КонецПроцедуры

&НаКлиенте
Процедура ЧекСжатый(Команда)
	ТабДок = Новый ТабличныйДокумент;
	ЗаполнитьСжатыйЧек(ТабДок);
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.АвтоМасштаб=Истина;
	ТабДок.ПолеСлева=0;
	ТабДок.ПолеСправа=0;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	//ТабДок.Показать();
	ТабДок.Напечатать();

КонецПроцедуры

#КонецОбласти


#Область ТранспортныеКомпании
//Боксбери
&НаСервере
Функция АктСверкиНаСервере()
	Результат=Новый Структура("Форма1, Форма2");
	Если Объект.ТочкаТранзита = СП_РаботаСоСправочниками.ПолучитьПунктВыдачиПо_Коду("0098") Тогда
		ТрекНомера="";
		Для каждого стр из Объект.Покупки Цикл
			Если не стр.Подбор Тогда продолжить КонецЕсли;
			Если ТипЗнч(стр.Покупка)=Тип("СправочникСсылка.Коробки") Тогда
				ТрекНомера=ТрекНомера+","+стр.Покупка.НомерЗаказа;
			КонецЕсли;
		КонецЦикла;	
		ТрекНомера=Прав(ТрекНомера,СтрДлина(ТрекНомера)-1);

		Ответ=Интеграция_BoxBerry.ПечатьАктПередачи(ТрекНомера);
		
		Если Ответ.Успех Тогда
			Результат.Форма1=Ответ.Результат.result[0].sticker;
			Результат.Форма2=Ответ.Результат.result[0].label;
			Если не ЗначениеЗаполнено(Объект.АктТК) Тогда
				Объект.АктТК=Ответ.Результат.result[0].id;
				Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
			КонецЕсли;
		КонецЕсли;
		Возврат Результат;
	КонецЕсли	
КонецФункции

&НаКлиенте
Процедура АктСверки(Команда)
	Если не ТолькоПросмотр Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("После печати Акта документ невозможно будет изменить!"+Символы.ПС+ "ПРОДОЛЖИТЬ? ", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	Результат=АктСверкиНаСервере();
	УстановитьВидимость();
	Попытка
		ЗапуститьПриложение(Результат.Форма1);
		ЗапуститьПриложение(Результат.Форма2);
	Исключение
		
	КонецПопытки;
КонецПроцедуры

//ПочтаРоссии

&НаКлиенте
Процедура СоздатьПартиюПР(Команда)
	Если не ТолькоПросмотр Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("После Создания Партии документ невозможно будет изменить!"+Символы.ПС+ "ПРОДОЛЖИТЬ? ", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		СоздатьПартиюПРНаСервере();
		УстановитьВидимость();
		Прочитать();
	КонецЕсли;
	
	//стрОтвета=ПолучитьПакетДокументовНаСервере(Объект.АктТК);
	
	//ИмяФ=ПолучитьИмяВременногоФайла("zip");
	//Если стрОтвета.Успешно Тогда
	//	ПолучитьФайл(стрОтвета.Адрес,ИмяФ);
	//Конецесли;
КонецПроцедуры

Функция  ПолучитьПакетДокументовНаСервере(НомерПартии)
	стрОтвета=Интеграция_ПочтаРоссии.ПолучитьПакетДокументов(НомерПартии,ЭтоEMS);
	Возврат  стрОтвета;
КонецФункции

Процедура СоздатьПартиюПРНаСервере()
	массЗаказов=новый Массив;
	Для каждого стр из Объект.Покупки Цикл
		массЗаказов.Добавить(стр.Партия.ВнутреннийНомерЗаказаТК);
	КонецЦикла;	
	стрОтвета	= Интеграция_ПочтаРоссии.СформироватьПартию(массЗаказов,Объект.ДатаСдачиВТК,ЭтоEMS);
	
	Если стрОтвета.Свойство("batches") и не стрОтвета.Свойство("errors") Тогда
//		Если стрОтвета.batches.Количество()>1 Тогда
			Для каждого стр из стрОтвета.batches Цикл
				стрПартии=Объект.ПартииТК.Добавить();
				стрПартии.НомерПартии=Формат(стр.batchname,"ЧГ=0");
				стрПартии.Комментарий=стр.mailcategorytext;
//				ЗаказыВПартии=стрОтвета.resultids;
			КонецЦикла;	
//		Иначе	
//			Объект.АктТК=Формат(стрОтвета.batches[0].batchname,"ЧГ=0");
//			ЗаказыВПартии=стрОтвета.resultids;
//		КонецЕсли;
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	КонецЕсли;
	Если стрОтвета.Свойство("errors") Тогда
		Для каждого стр из стрОтвета.errors Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В позиции №"+стр.position+1 +" - "+стр.errordescription);
		КонецЦикла
	КонецЕсли;
	ОтправкаФормы_Ф103();
КонецПроцедуры

Процедура ОтправкаФормы_Ф103()
	Для каждого стр из Объект.ПартииТК Цикл
		стрОтвета	= Интеграция_ПочтаРоссии.ПодготовкаОтправкаФормы_Ф103(стр.НомерПартии,ЭтоEMS);
	КонецЦикла;
	Если стрОтвета=Неопределено Тогда Возврат КонецЕсли;
	Если стрОтвета.Свойство("errors") Тогда
		Для каждого стр из стрОтвета.errors Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В позиции №"+стр.position +" - "+стр.errordetails);
		КонецЦикла
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КвитанцияПР(Команда)
	#Если не ВебКлиент Тогда
	МассивРезультатаов=КвитанцияПРНаСервере();
	Для каждого стр из МассивРезультатаов Цикл
		ИмяФ=ПолучитьИмяВременногоФайла("pdf");
		Если стр.Успешно Тогда
			ПолучитьФайл(стр.Адрес,ИмяФ);
		Конецесли;
	КонецЦикла;
	#КонецЕсли
КонецПроцедуры

&НаСервере
Функция КвитанцияПРНаСервере()
	МассивРезультатаов=Новый Массив;
	Для каждого стр из Элементы.Покупки.ВыделенныеСтроки Цикл
		Партия=Объект.Покупки[стр].Партия;
		Если ТипЗнч(Партия)=Тип("ДокументСсылка.ОтправлениеТранзита") И Партия.НомерЗаказа<>"" Тогда
			
			МассивРезультатаов.Добавить(Интеграция_ПочтаРоссии.ПолучитьКвитанцию_Ф7П(Партия.НомерЗаказа,ЭтоEMS));
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось определитьномерзаказа с строке "+(стр+1) );
		КонецЕсли;	
	КонецЦикла;
	Возврат МассивРезультатаов;
КонецФункции

&НаКлиенте
Процедура Форма_Ф103_ПР(Команда)
	#Если не ВебКлиент Тогда
	стр=Форма_Ф103_ПРНаСервере();
	ИмяФ=ПолучитьИмяВременногоФайла("pdf");
	Если стр.Успешно Тогда
		ПолучитьФайл(стр.Адрес,ИмяФ);
	Конецесли;
	#КонецЕсли
КонецПроцедуры

&НаСервере
Функция Форма_Ф103_ПРНаСервере()
	Интеграция_ПочтаРоссии.ПодготовкаОтправкаФормы_Ф103(Объект.АктТК,ЭтоEMS);
	Возврат Интеграция_ПочтаРоссии.ПолучитьКвитанцию_Ф103(Объект.АктТК,ЭтоEMS);
КонецФункции


&НаСервере
Функция ПакетДокументов_ПРНаСервере()
	МассивРезультатаов	= Новый Массив;
	Для каждого стр из Элементы.ПартииТК.ВыделенныеСтроки Цикл
		НомерПартии	= Объект.ПартииТК[стр].НомерПартии;
		МассивРезультатаов.Добавить(Интеграция_ПочтаРоссии.ПолучитьПакетДокументов(НомерПартии,ЭтоEMS));
	КонецЦикла;
	Возврат МассивРезультатаов;
КонецФункции

&НаКлиенте
Процедура ПакетДокументов_ПР(Команда)
	МассивРезультатаов=ПакетДокументов_ПРНаСервере();
	Для каждого стр из МассивРезультатаов Цикл
		массПартий=Объект.ПартииТК.НайтиСтроки(новый Структура("НомерПартии",стр.ОтправленныеДанные));
		ДопИмя=Строка(Объект.ТочкаНазначения)+"_"+Строка(массПартий[0].НомерПартии)+"_"+Строка(массПартий[0].Комментарий)+".zip";
		ДопИмя=СтрЗаменить(ДопИмя," ","_");
		ИмяФ=КаталогВременныхФайлов()+ДопИмя;
		//ИмяФ=ПолучитьИмяВременногоФайла("zip");
		Если стр.Успешно Тогда
			ПолучитьФайл(стр.Адрес,ИмяФ);
		Конецесли;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура КонтролироватьСупергруппыПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры


&НаКлиенте
Процедура ПечатьНаклеекdpd(Команда)
	
#Если не ВебКлиент Тогда	

	СписокОтправлений = новый СписокЗначений;
	Для каждого элем Из Объект.Покупки Цикл
		СписокОтправлений.Добавить(Элем.Партия);
	КонецЦикла;
	Протокол = Интеграция_ТранспортныеКомпании_Общий.ПолучитьНаклейки(СписокОтправлений);
	Если Протокол.Результат = "ok"  и Протокол.ТипФайла = "Хранилище" Тогда
		ИмяФ	= ПолучитьИмяВременногоФайла("pdf");
		ПолучитьФайл(Протокол.Файл,ИмяФ);
		ЗапуститьПриложение(ИмяФ)
	КонецЕсли;	
	Если Протокол.ТекстОшибки<>"" Тогда
		 ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Протокол.ТекстОшибки);
	КонецЕсли;
	
#КонецЕсли

КонецПроцедуры



#КонецОбласти


#Область Супергруппы

&НаСервере
Функция  СормироватьСупергруппуНаСервере()
	результат	= новый структура("ТранспортнаяКомпания, ВыбранКурьер, МаршрутПустой");
	Если ЗначениеЗаполнено(Объект.Супергруппа) Тогда 
		результат.ТранспортнаяКомпания 	= Объект.Супергруппа.ПунктВыдачи.ТранспортнаяКомпания;
		результат.ВыбранКурьер			= ЗначениеЗаполнено(Объект.Супергруппа.ПунктВыдачи.Курьер);
		результат.МаршрутПустой			= (Объект.Супергруппа.Маршрут.Количество() = 0);
		Возврат результат; 
	КонецЕсли;
							 
	Объект.Супергруппа				= СП_РаботаСоСправочниками.ПолучитьСупергруппуПоНакладной(Объект.Ссылка);
	
	результат.ТранспортнаяКомпания	= Объект.Супергруппа.ПунктВыдачи.ТранспортнаяКомпания;
	результат.ВыбранКурьер			= ЗначениеЗаполнено(Объект.Супергруппа.ПунктВыдачи.Курьер);
	результат.МаршрутПустой			= (Объект.Супергруппа.Маршрут.Количество() = 0);
	возврат результат;
КонецФункции

&НаКлиенте
Процедура СформироватьСупергруппу(Команда)
	ПоказатьВопрос(Новый ОписаниеОповещения("СформироватьСупергруппу_Завершение", ЭтотОбъект),
					"Документ будет записан. Продолжить?", РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСупергруппу_Завершение(РезультатЗапроса, ДоаполнительныеПараметры)  Экспорт
	Если РезультатЗапроса 	= КодВозвратаДиалога.Нет Тогда Возврат; КонецЕсли;
//	Если Не ЗначениеЗаполнено(Объект.Ссылка
	Записать();
	результат	= СормироватьСупергруппуНаСервере();
	
	УстановитьВидимость();
	Если 		результат.ТранспортнаяКомпания 	или 
			 не результат.ВыбранКурьер 			или
			 не результат.МаршрутПустой				 Тогда
		ОткрытьФорму("Документ.ЗаполнитьСупергруппу.Форма.ФормаДокумента",новый Структура("Супергруппа",Объект.Супергруппа),ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		ЗаполнитьМаршрутСупергруппы(Объект.Супергруппа);
	КонецЕсли;
	ОбновитьСупергруппу();
КонецПроцедуры 

Процедура ЗаполнитьМаршрутСупергруппы(Супергруппа)
	документЗаполнения						= Документы.ЗаполнитьСупергруппу.СоздатьДокумент();
	документЗаполнения.Супергруппа			= Супергруппа;
	документЗаполнения.Дата 				= ТекущаяДата();
	документЗаполнения.ДокументОснование 	= Супергруппа.Накладная;
	документЗаполнения.ТочкаНазначения		= Супергруппа.ПунктВыдачи;
	документЗаполнения.Комментарий			= "Записан автоматически при создании супергруппы";
	строкаМаршрута							= документЗаполнения.Маршрут.Добавить();
	строкаМаршрута.ДатаДоставкиПлан			= ТекущаяДата();
	строкаМаршрута.ДатаДоставкифакт			= ТекущаяДата();
	строкаМаршрута.ТранспортнаяКомпания		= Супергруппа.ПунктВыдачи.Курьер;
	строкаМаршрута.ТрэкНомер				= Супергруппа.Код;
	Попытка
	    документЗаполнения.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось заполнить супергруппу: "+Супергруппа+". "+ОписаниеОшибки());	
	КонецПопытки;
	
КонецПроцедуры	


&НаКлиенте
Процедура ЗаполнитьКоленоМаршрута(Команда)
	НомерКолена=Элементы.МаршрутСупергруппы.ТекущиеДанные.НомерСтроки;
	структура_Параметров=Новый Структура();
	
	структура_Супергруппа=Новый Структура();
	структура_Супергруппа.Вставить("Супергруппа"		,Объект.Супергруппа);
	структура_Супергруппа.Вставить("НомерКолена"		,Элементы.МаршрутСупергруппы.ТекущиеДанные.НомерСтроки);
	структура_Супергруппа.Вставить("ТК"					,Элементы.МаршрутСупергруппы.ТекущиеДанные.ТранспортнаяКомпания);
	структура_Супергруппа.Вставить("ДатаДоставкиПлан"	,Элементы.МаршрутСупергруппы.ТекущиеДанные.ДатаДоставкиПлан);
	структура_Супергруппа.Вставить("ДатаДоставкиФакт"	,Элементы.МаршрутСупергруппы.ТекущиеДанные.ДатаДоставкиФакт);
	структура_Супергруппа.Вставить("ТрэкНомер"			,Элементы.МаршрутСупергруппы.ТекущиеДанные.ТрэкНомер);
	структура_Супергруппа.Вставить("Комментарий"		,Элементы.МаршрутСупергруппы.ТекущиеДанные.Комментарий);
	структура_Параметров.Вставить("Супергруппа",структура_Супергруппа);

	ОткрытьФорму("Документ.ЗаполнитьКоленоМаршрута.Форма.ФормаДокумента",структура_Параметров,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
//	Форма_ЗаполнитьКоленоМаршрута=ПолучитьФорму("Документ.ЗаполнитьКоленоМаршрута.Форма.ФормаДокумента",структура_Параметров,ЭтаФорма,,ВариантОткрытияОкна.ОтдельноеОкно);
//	Форма_ЗаполнитьКоленоМаршрута.Открыть();
//	ЭтаФорма.Прочитать();
КонецПроцедуры


Процедура ОбновитьСупергруппу()
	Если ЗначениеЗаполнено(Объект.Супергруппа) Тогда	
		МаршрутСупергруппы.Загрузить(Объект.Супергруппа.Маршрут.Выгрузить());
	КОнецЕсли;	
КонецПроцедуры	


#КонецОбласти

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВедомостьКурьерскойДоставки_Завершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОтправитьВедомостьКурьерскойДоставкиНаСервере();
	КонецЕсли;	
КонецПроцедуры	

&НаКлиенте
Процедура ОтправитьВедомостьКурьерскойДоставки(Команда)
	Если не ЗначениеЗаполнено(Объект.Ссылка) тогда
		Записать( Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	КонецЕсли;

	ОтправитьВедомостьКурьерскойДоставкиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтправитьВедомостьКурьерскойДоставкиНаСервере()
	док = ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.ВыдачаТранзита") );
	док.ОтправитьВедомостьКурьерскойДоставки();
	
КонецПроцедуры



// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

