#Область ПрограммныйИнтерфейс

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	СтоСП_Печать.ДобавитьКомандыПечатиПоступлений(КомандыПечати);
КонецПроцедуры

#КонецОбласти




#Область Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	ТекстыЗапроса = Новый СписокЗначений;
	//СтоСПОбмен_Общий.Получить_ТекстЗапроса_Обмен100сп (Запрос, ТекстыЗапроса, Регистры);
//	СтоСПОбмен_Общий.Получить_ТекстЗапроса_Обмен100СП_РН(Запрос, ТекстыЗапроса, Регистры);
	
	Получить_ТекстЗапроса_НеВыгруженноНаСайт(Запрос, ТекстыЗапроса, Регистры);	
	Получить_ТекстЗапроса_Обмен100СПрн_Ошибки (Запрос, ТекстыЗапроса, Регистры);
	
	Получить_ТекстЗапроса_ОстаткиТоваров(Запрос, ТекстыЗапроса, Регистры);
	Получить_ТекстЗапроса_Приход(Запрос, ТекстыЗапроса, Регистры);
	Получить_ТекстЗапроса_Транзит(Запрос, ТекстыЗапроса, Регистры);
	
	
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.СвояТочка КАК СвояТочка
	|ИЗ
	|	Документ.ПоступлениеПристроя КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                        Реквизиты.Период);
	Запрос.УстановитьПараметр("СвояТочка",                     Реквизиты.СвояТочка);
	Запрос.УстановитьПараметр("Номер",                         Реквизиты.Номер);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",       ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяОбъекта()));
	Запрос.УстановитьПараметр("ПометкаУдаления",               Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("Проведен",                      Реквизиты.Проведен);

КонецПроцедуры

#КонецОбласти

Функция ПолноеИмяОбъекта()
	Возврат "Документ.ПоступлениеПристроя";
КонецФункции


#Область Обмен100сп
Функция ПолучитьТэг_Income(Ссылка,НомерСтроки=Неопределено) Экспорт
	ОтборПоСсылке=?(ТипЗнч(Ссылка)=Тип("Массив")," В (&Ссылка) "," = &Ссылка ");
	ОтборПоСтроке=?(ТипЗнч(Ссылка)=Тип("Массив")," В (&НомерСтроки) "," = &НомерСтроки ");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеПристрояЗаказы.МестоХранения КАК МестоХранения,
		|	ПоступлениеПристрояЗаказы.Габарит КАК Габарит,
		|	ПоступлениеПристрояЗаказы.Ссылка.Дата КАК Дата,
		|	ПоступлениеПристрояЗаказы.ШК КАК ШК,
		|	ПоступлениеПристрояЗаказы.Ссылка.Номер КАК Номер,
		|	ПоступлениеПристрояЗаказы.Пристрой КАК Пристрой,
		|	ПоступлениеПристрояЗаказы.Ссылка.СвояТочка КАК СвояТочка
		|ИЗ
		|	Документ.ПоступлениеПристроя.Заказы КАК ПоступлениеПристрояЗаказы
		|ГДЕ
		|	ПоступлениеПристрояЗаказы.Ссылка "+ОтборПоСсылке+" "+?(НомерСтроки=Неопределено,"", "
		|	И ПоступлениеПристрояЗаказы.НомерСтроки "+ОтборПоСтроке+" ");
	
	Запрос.УстановитьПараметр("НомерСтроки", НомерСтроки);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда Возврат ""; КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗаписьXML=новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку("UTF-8");	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Служебный");
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ЗаписатьНачалоЭлемента("income");
		СтоСП.Вставить_Тэг(ЗаписьXML,"stickerId", 			Формат(Число(Выборка.ШК.Покупка.Код),"ЧГ=0"));    
		СтоСП.Вставить_Тэг(ЗаписьXML,"orderId"	, 			Формат(Число(Выборка.Пристрой.Код),"ЧГ=0"));
		СтоСП.Вставить_Тэг(ЗаписьXML,"orderType"	, 		"bulletin");
		
		СтоСП.Вставить_Тэг(ЗаписьXML,"uid"	, 				Формат(Число(Выборка.Пристрой.Участник.Код),"ЧГ=0"));		
		СтоСП.Вставить_Тэг(ЗаписьXML,"date"	,				Выборка.Дата);
		СтоСП.Вставить_Тэг(ЗаписьXML,"arrivalNumber",       Прав(Выборка.Номер,(СтрДлина(Выборка.Номер)-3)));
		СтоСП.Вставить_Тэг(ЗаписьXML,"transit",             ?(Выборка.Пристрой.ТочкаНазначения<>Выборка.СвояТочка,1,0));
		
		//СтоСПОбмен_Общий.ЗаполнитьТэгиЗаказаПо_ШК(Выборка.ШК,ЗаписьXML);	
		ЗаписьXML.ЗаписатьКонецЭлемента();
	КонецЦикла;
    ЗаписьXML.ЗаписатьКонецЭлемента();
	рез=ЗаписьXML.Закрыть();
	рез=СтрЗаменить(рез,"<Служебный>","");
	рез=СтрЗаменить(рез,"</Служебный>","");
	Возврат рез;
КонецФункции
#КонецОбласти



Функция Получить_ТекстЗапроса_НеВыгруженноНаСайт(Запрос, ТекстыЗапроса, Регистры) Экспорт
	ИмяРегистра = "НеВыгруженноНаСайт";
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если ТипЗнч(Запрос.Параметры.Ссылка)=Тип("ДокументСсылка.ПоступлениеПристроя") Тогда
		 ТекстЗапроса = "
		 |
		 |ВЫБРАТЬ
		 |	ПоступлениеПристрояЗаказы.Ссылка.Дата 		КАК Период,
		 |	ПоступлениеПристрояЗаказы.ШК.Покупка 		КАК Посылка,
		 |	ПоступлениеПристрояЗаказы.МестоХранения 	КАК МестоХранения,
		 |	ПоступлениеПристрояЗаказы.Габарит 			КАК Габарит,
		 |	Значение(Справочник.Коробки.БезКоробки) 	КАК Коробка,
		 |	ПоступлениеПристрояЗаказы.ШК.ПунктВыдачи 	КАК ПунктВыдачи,
		 |	ПоступлениеПристрояЗаказы.Ссылка 			КАК Партия,
		 |	1 КАК Количество
		 |ИЗ
		 |	Документ.ПоступлениеПристроя.Заказы КАК ПоступлениеПристрояЗаказы
		 |ГДЕ
		 |	ПоступлениеПристрояЗаказы.Ссылка = &Ссылка
		 |	И НЕ ПоступлениеПристрояЗаказы.Отправлено
		 |
		 |";
	КонецЕсли;	

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

Функция Получить_ТекстЗапроса_Обмен100СПрн_Ошибки (Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "Обмен100СПрн_Ошибки";
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	//Если Запрос.Параметры.Статус<>Перечисления.СтатусОтпавкиНаСайт.Отправлен Тогда
	//	Возврат "";
	//КонецЕсли; 
	
	ТекстЗапроса =  "
					|
					|ВЫБРАТЬ
	                |	ПоступлениеПристрояЗаказы.Ссылка.Дата 		КАК Период,
	                |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 		КАК ВидДвижения,
	                |	ЗНАЧЕНИЕ(Перечисление.ТипыОбменов100сп.ПоступлениеПристроя) КАК типОбмена,
	                |	ПоступлениеПристрояЗаказы.Ссылка 			КАК Партия,
	                |	ПоступлениеПристрояЗаказы.НомерСтроки 		КАК СтрокаВПартии,
	                |	ПоступлениеПристрояЗаказы.ШК 				КАК Мегаордер,
	                |	""Не привязан пристрой!"" 					КАК СообщениеОшибки,
	                |	1 КАК КоличествоНеИсправленных
	                |ИЗ
	                |	Документ.ПоступлениеПристроя.Заказы КАК ПоступлениеПристрояЗаказы
	                |ГДЕ
	                |	ПоступлениеПристрояЗаказы.Ссылка = &Ссылка
	                |	И НЕ ПоступлениеПристрояЗаказы.Отправлено
	                |
					|
					|";
	
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции


Функция Получить_ТекстЗапроса_ОстаткиТоваров(Запрос, ТекстыЗапроса, Регистры) Экспорт
	ИмяРегистра = "ОстаткиТоваров";
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если ТипЗнч(Запрос.Параметры.Ссылка)=Тип("ДокументСсылка.ПоступлениеПристроя") Тогда
		ТекстЗапроса ="ВЫБРАТЬ
		              |	ПоступлениеПристрояЗаказы.Ссылка.Дата 		КАК Период,
		              |	ПоступлениеПристрояЗаказы.ШК.Покупка 		КАК Покупка,
		              |	ПоступлениеПристрояЗаказы.МестоХранения 	КАК МестоХранения,
		              |	ПоступлениеПристрояЗаказы.Габарит 			КАК Габарит,
		              |	ПоступлениеПристрояЗаказы.Пристрой.Участник КАК Участник,
		              |	ИСТИНА 										КАК Оплачен,
		              |	ЛОЖЬ 										КАК Потерян,
		              |	ПоступлениеПристрояЗаказы.Ссылка 			КАК Партия,
		              |	1 											КАК Количество
		              |ИЗ
		              |	Документ.ПоступлениеПристроя.Заказы КАК ПоступлениеПристрояЗаказы
		              |ГДЕ
		              |	ПоступлениеПристрояЗаказы.Пристрой.ТочкаНазначения = &СвояТочка
		              |	И ПоступлениеПристрояЗаказы.Ссылка = &Ссылка
		              |	И ПоступлениеПристрояЗаказы.Отправлено";
	КонецЕсли;	

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

Функция Получить_ТекстЗапроса_Приход(Запрос, ТекстыЗапроса, Регистры) Экспорт
	ИмяРегистра = "Приход";
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если ТипЗнч(Запрос.Параметры.Ссылка)=Тип("ДокументСсылка.ПоступлениеПристроя") Тогда
		ТекстЗапроса = "ВЫБРАТЬ
		               |	ПоступлениеПристрояЗаказы.Ссылка.Дата 				КАК Период,
		               |	ПоступлениеПристрояЗаказы.Габарит 					КАК Габарит,
		               |	ПоступлениеПристрояЗаказы.МестоХранения				КАК МестоХранения,
		               |	ПоступлениеПристрояЗаказы.ШК.Покупка.Организатор 	КАК Организатор,
		               |	ПоступлениеПристрояЗаказы.ШК.Покупка 				КАК Покупка,
		               |	1 КАК Количество,
		               |	ПоступлениеПристрояЗаказы.ШК.Покупка.Код 			КАК ПокупкаСпр,
		               |	ЗНАЧЕНИЕ(Справочник.Коробки.БезКоробки) 			КАК Коробка,
		               |	ВЫБОР
		               |		КОГДА ПоступлениеПристрояЗаказы.Пристрой.ТочкаНазначения = &СвояТочка
		               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПриходов.ПристройНаСклад)
		               |		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыПриходов.ПристройНаТранзит)
		               |	КОНЕЦ 												КАК ТипПрихода,
		               |	ПоступлениеПристрояЗаказы.Пристрой.Участник 		КАК Участник,
		               |	ПоступлениеПристрояЗаказы.Сумма 					КАК Сумма
		               |ИЗ
		               |	Документ.ПоступлениеПристроя.Заказы 				КАК ПоступлениеПристрояЗаказы
		               |ГДЕ
		               |	ПоступлениеПристрояЗаказы.Отправлено
		               |	И ПоступлениеПристрояЗаказы.Ссылка = &Ссылка";
	КонецЕсли;	

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

Функция Получить_ТекстЗапроса_Транзит(Запрос, ТекстыЗапроса, Регистры) Экспорт
	ИмяРегистра = "Транзит";
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если ТипЗнч(Запрос.Параметры.Ссылка)=Тип("ДокументСсылка.ПоступлениеПристроя") Тогда
		ТекстЗапроса = "
		|
		|ВЫБРАТЬ
		|	ПоступлениеПристрояЗаказы.Ссылка.Дата 		КАК Период,
		|	ПоступлениеПристрояЗаказы.ШК.Покупка 		КАК ПокупкаСсылка,
		|	ПоступлениеПристрояЗаказы.МестоХранения 	КАК МестоХранения,
		|	ПоступлениеПристрояЗаказы.Габарит 			КАК Габарит,
		|	ПоступлениеПристрояЗаказы.Пристрой.Участник КАК Участник,
		|	ПоступлениеПристрояЗаказы.ПВТранзита 		КАК Точка,
		|	ПоступлениеПристрояЗаказы.Ссылка 			КАК Партия,
		|	1 КАК Количество
		|ИЗ
		|	Документ.ПоступлениеПристроя.Заказы КАК ПоступлениеПристрояЗаказы
		|ГДЕ
		|	ПоступлениеПристрояЗаказы.Отправлено
		|	И не ПоступлениеПристрояЗаказы.Пристрой.ТочкаНазначения=&СвояТочка
		|	И ПоступлениеПристрояЗаказы.Ссылка = &Ссылка
		|
		|
		|";
	КонецЕсли;	

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

