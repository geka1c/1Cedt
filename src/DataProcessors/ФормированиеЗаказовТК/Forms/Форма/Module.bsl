
&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	СформироватОТправлениеТранзита(ВыбранноеЗначение);
КонецПроцедуры
&НаКлиенте
Процедура ОбновитьЗаказы()
	//ЗаказыПунктаВыдачи.Параметры.УстановитьЗначениеПараметра("Точка",Элементы.ПунктыВыдачи.ТекущиеДанные.Ссылка);
	//Если Элементы.Участники.ТекущиеДанные<> Неопределено Тогда
	//	ЗаказыПунктаВыдачи.Параметры.УстановитьЗначениеПараметра("Участник",Элементы.Участники.ТекущиеДанные.Участник);
	//КонецЕсли;
	Если Элементы.Участники.ТекущиеДанные=неопределено или Элементы.ПунктыВыдачи.ТекущиеДанные=неопределено Тогда Возврат; КонецЕсли;
	ОбновитьЗаказыНаСервере(Элементы.Участники.ТекущиеДанные.Участник,Элементы.ПунктыВыдачи.ТекущиеДанные.Ссылка);
КонецПроцедуры

Процедура ОбновитьЗаказыНаСервере(Участник,Точка)
	тз=СПЗаказыТК.ПолучитьТЗАдресаЗаказов(Участник,Точка);
	ЗаказыДляОбмена.Очистить();
	ЗаказыДляОбмена.Загрузить(тз);
КонецПроцедуры	


&НаКлиенте
Процедура ОбновитьОжидающиеОтправкиЗаказы()

	Если Элементы.ПунктыВыдачи.ТекущиеДанные=неопределено Тогда Возврат; КонецЕсли;
	ОбновитьОжидающиеОтправкиЗаказыНаСервере(Элементы.ПунктыВыдачи.ТекущиеДанные.Ссылка);
КонецПроцедуры

Процедура ОбновитьОжидающиеОтправкиЗаказыНаСервере(Точка)
	тз=СПЗаказыТК.Получить_НеОтправленныеЗаказы(Точка);
	ОжидаетОтправки.Очистить();
	ОжидаетОтправки.Загрузить(тз);
КонецПроцедуры	


&НаКлиенте
Процедура ОбновитьУчастников()
	Участники.Параметры.УстановитьЗначениеПараметра("Точка",Элементы.ПунктыВыдачи.ТекущиеДанные.Ссылка);
КонецПроцедуры



&НаКлиенте
Процедура ПунктыВыдачиПриАктивизацииСтроки(Элемент)
	ОбновитьУчастников();
	ОбновитьЗаказы();
	Если элементы.ГруппаСтраницы.ТекущаяСтраница=Элементы.ОжидаютОтправки Тогда
		ОбновитьОжидающиеОтправкиЗаказы();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьАдресаЗаказов(Команда)
	ПолучитьАдресаЗаказовНаСервере(Элементы.Участники.ТекущиеДанные.Участник,Элементы.ПунктыВыдачи.ТекущиеДанные.Ссылка);	
	ОбновитьЗаказы();
КонецПроцедуры


Процедура ПолучитьАдресаЗаказовНаСервере(Участник,Точка)
	тз=СПЗаказыТК.ПолучитьТЗАдресаЗаказов(Участник,Точка);
	СПЗаказыТК.ПолучитьАдресаНаТЗЗаказов(тз);
КонецПроцедуры





&НаКлиенте
Процедура ОтправитьЗаказы(Команда)
	//ВыбранныеСтроки=ЗаказыДляОбмена.НайтиСтроки(новый Структура("Подбор",Истина));
	
	//ФРМ=ПолучитьФорму("Обработка.ФормированиеЗаказовТК.Форма.ФормаВыбораАдреса",новый Структура("Участник, Точка",Элементы.Участники.ТекущиеДанные.Участник,Элементы.ПунктыВыдачи.ТекущиеДанные.Ссылка));
	ФРМ=ПолучитьФорму("Обработка.ФормированиеЗаказовТК.Форма.ФормаВыбораАдреса",новый Структура("ВыбранныеСтроки",ЗаказыДляОбмена),ЭтаФорма);
	Если ФРМ.Адреса.Количество()=0 Тогда
		СформироватОТправлениеТранзита();
	ИначеЕсли ФРМ.Адреса.Количество()=1 Тогда
		СформироватОТправлениеТранзита(ФРМ.Адреса[0]);
	Иначе
		ФРМ.открыть();
	Конецесли;	
КонецПроцедуры


&НаКлиенте
Процедура СформироватОТправлениеТранзита(Адрес=Неопределено)
	стрПараметров=новый Структура("Заказы,Адрес,Участник,ТочкаНазначения");
	стрПараметров.Заказы=ЗаказыДляОбмена;
	Если Адрес<>Неопределено  Тогда
		стрАдреса=Новый Структура("Адрес,ФИО,Город,Регион,Телефон,Тип,Индекс,КодПВЗ,email,cityCode,Улица,Дом,Квартира");
		ЗаполнитьЗначенияСвойств(стрАдреса,Адрес);
		стрПараметров.Адрес=стрАдреса;
	КонецЕсли;	
	
	стрПараметров.Адрес=стрАдреса;
	стрПараметров.Участник=Элементы.Участники.ТекущиеДанные.Участник;
	стрПараметров.ТочкаНазначения=Элементы.ПунктыВыдачи.ТекущиеДанные.Ссылка;
	фрмОтправлениеТранзита=ПолучитьФорму("Документ.ОтправлениеТранзита.Форма.ФормаДокумента",стрПараметров);
	фрмОтправлениеТранзита.Открыть();
	//ОбновитьЗаказы();
КонецПроцедуры	

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия="ПровелиОтправлениеТранзита" Тогда  
		
		ОбновитьЗаказы();
		
	ИначеЕсли ИмяСобытия="ПровелиВыдачуТранзита" Тогда  
 		ОбновитьОжидающиеОтправкиЗаказы();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ВыделитВсеЗаказы(Команда)
	Для каждого стр из ЗаказыДляОбмена Цикл
		стр.Подбор=истина;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыделениВсеЗаказы(Команда)
	Для каждого стр из ЗаказыДляОбмена Цикл
		стр.Подбор=Ложь;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ИнвертироватьВыделениеЗаказы(Команда)
	Для каждого стр из ЗаказыДляОбмена Цикл
		стр.Подбор=не стр.Подбор;
	КонецЦикла;	

КонецПроцедуры

&НаКлиенте
Процедура ОтчетПоЗаказам(Команда)
	МассивДокументов=Элементы.ОтправленныеЗаказы.ВыделенныеСтроки;
	СформироватьФайлОтчетаПоЗаказам("postamat",МассивДокументов);
	СформироватьФайлОтчетаПоЗаказам("sdec"    ,МассивДокументов);     
	СформироватьФайлОтчетаПоЗаказам("courier"    ,МассивДокументов);     

КонецПроцедуры



&НаКлиенте
Процедура СформироватьФайлОтчетаПоЗаказам(Тип,МассивДокументов)
	#Если не ВебКлиент Тогда
	Адрес = СформироватьФайлСервер(Тип,МассивДокументов);
	Если Адрес=Неопределено тогда возврат; КонецЕсли ;
	Файл = ПолучитьИзВременногоХранилища(Адрес);
	ИмяФайла = ПолучитьИмяВременногоФайла("xls");
	Файл.Записать(ИмяФайла);
	ЗапуститьПриложение(ИмяФайла);
	#КонецЕсли
КонецПроцедуры // СформироватьФайлОтчетаПоЗаказам()



&НаСервере
Функция СформироватьФайлСервер(Тип,МассивДокументов)

	ПолныйОбъект = РеквизитФормыВЗначение("Объект");
	Файл = ПолныйОбъект.ПолучитьМакет("Шаблон");
	ИмяФайла = ПолучитьИмяВременногоФайла("xls");
	Файл.Записать(ИмяФайла);
	
	Excel = Новый COMОбъект("Excel.Application");
	ДокументEXCEL = Excel.WorkBooks.Open(ИмяФайла);
	Лист = ДокументExcel.Sheets(1);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ОтправлениеТранзита.Ссылка,
	                      |	ОтправлениеТранзита.НомерЗаказа КАК НомерОтправления,
	                      |	ОтправлениеТранзита.Город КАК ГородПолучателя,
	                      |	ОтправлениеТранзита.Участник КАК Получатель,
	                      |	ОтправлениеТранзита.ФИО КАК ФИОПолучателя,
	                      |	ОтправлениеТранзита.Адрес КАК АдресПолучателя,
	                      |	ОтправлениеТранзита.КодПВЗ,
	                      |	ОтправлениеТранзита.Телефон КАК ТелефонПолучателя,
	                      |	ОтправлениеТранзита.ТарифПВ КАК ДопСборЗаДоставкуСПолучателя,
	                      |	ОтправлениеТранзита.ИстинныйПродавец КАК ИстинныйПродавец,
	                      |	ОтправлениеТранзита.Комментарий,
	                      |	"""" КАК ПорядковыйНомерМеста,
	                      |	ОтправлениеТранзита.Вес,
	                      |	ОтправлениеТранзита.Длина,
	                      |	ОтправлениеТранзита.Ширина,
	                      |	ОтправлениеТранзита.Высота,
	                      |	ОтправлениеТранзита.ИстинныйПродавец КАК ОписаниеМеста,
	                      |	ОтправлениеТранзита.НомерЗаказа КАК КодТовараАртикул,
	                      |	ОтправлениеТранзита.ИстинныйПродавец КАК НаименованиеТовара,
	                      |	1 КАК СтоимостьТовара,
	                      |	0 КАК ОплатаСПолучателя,
	                      |	ОтправлениеТранзита.Вес КАК ВесТовара,
	                      |	1 КАК Количество
	                      |ИЗ
	                      |	Документ.ОтправлениеТранзита КАК ОтправлениеТранзита
	                      |ГДЕ
	                      |	ОтправлениеТранзита.Тип = &Тип
	                      |	И ОтправлениеТранзита.Ссылка В(&Ссылка)
	                      |	И ОтправлениеТранзита.Проведен");
						  
	Запрос.параметры.Вставить("Тип" ,Тип);
	Запрос.параметры.Вставить("Ссылка",МассивДокументов);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	НомерСтроки = 2;
	Пока Выборка.Следующий() Цикл
		//Лист.Cells(НомерСтроки,НомерСтолбца).Value = ххххххх; // запись значения по координатам
		Лист.Cells(НомерСтроки,1).Value = Строка(Выборка.НомерОтправления);
		Лист.Cells(НомерСтроки,2).Value = Строка(Выборка.ГородПолучателя);
		Лист.Cells(НомерСтроки,3).Value = Строка(Выборка.Получатель);
		Лист.Cells(НомерСтроки,4).Value = Строка(Выборка.ФИОПолучателя);
		Лист.Cells(НомерСтроки,5).Value = Строка(Выборка.АдресПолучателя);
		Лист.Cells(НомерСтроки,6).Value = Строка(Выборка.КодПВЗ);
		Лист.Cells(НомерСтроки,7).Value = Строка(Выборка.ТелефонПолучателя);
		Лист.Cells(НомерСтроки,8).Value = Строка(Выборка.ДопСборЗаДоставкуСПолучателя);
		Лист.Cells(НомерСтроки,9).Value = Строка(Выборка.ИстинныйПродавец);
		Лист.Cells(НомерСтроки,10).Value = Строка(Выборка.Комментарий);
		Лист.Cells(НомерСтроки,11).Value = Строка(Выборка.ПорядковыйНомерМеста);
		Лист.Cells(НомерСтроки,12).Value = Строка(Выборка.Вес);
		Лист.Cells(НомерСтроки,13).Value = Строка(Выборка.Длина);
		Лист.Cells(НомерСтроки,14).Value = Строка(Выборка.Ширина);
		Лист.Cells(НомерСтроки,15).Value = Строка(Выборка.Высота);
		Лист.Cells(НомерСтроки,16).Value = Строка(Выборка.ОписаниеМеста);
		Лист.Cells(НомерСтроки,17).Value = Строка(Выборка.КодТовараАртикул);
		Лист.Cells(НомерСтроки,18).Value = Строка(Выборка.НаименованиеТовара);
		Лист.Cells(НомерСтроки,19).Value = Строка(Выборка.СтоимостьТовара);
		Лист.Cells(НомерСтроки,20).Value = Строка(Выборка.ОплатаСПолучателя);
		Лист.Cells(НомерСтроки,21).Value = Строка(Выборка.ВесТовара);
		Лист.Cells(НомерСтроки,22).Value = Строка(Выборка.Количество);
		Для инд=1 по 22 Цикл
			Лист.Cells(НомерСтроки,инд).Borders.Linestyle = 1;	
		КонецЦикла;	
		
		НомерСтроки = НомерСтроки+1;
	КонецЦикла;
	Если НомерСтроки=2 Тогда 
		Возврат неопределено;
	КонецЕсли;	
	ДокументExcel.save();
	Excel.Application.Quit();
	
	НовИмя = ПолучитьИмяВременногоФайла();
	КопироватьФайл(ИмяФайла,НовИмя);
	ДД=Новый ДвоичныеДанные(НовИмя);
	//Хранилище = Новый ХранилищеЗначения(ДД,Новый СжатиеДанных(9));
	
	Возврат ПоместитьВоВременноеХранилище(ДД);

КонецФункции 

&НаКлиенте
Процедура ВедомостьЗаказовТК(Команда)
	фрм=ПолучитьФорму("Отчет.ВедомостьЗаказовЧерезТК.Форма",,ЭтаФорма );
	фрм.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ОписьДляПочтыРоссии(Команда)
	МассивДокументов=Элементы.ОтправленныеЗаказы.ВыделенныеСтроки;
	СсылкаНаФорму=ПолучитьСсылкуНаФорму(МассивДокументов);
	ЗапуститьПриложение(СсылкаНаФорму);
КонецПроцедуры

Функция ПолучитьСсылкуНаФорму(МассивДокументов)
	об=Обработки.ОбменСПочтойРоссии.Создать();
     возврат об.ОбменССайтомКвитанцияФ103(МассивДокументов)
КонецФункции	

&НаКлиенте
Процедура СформироватьВыдачуТранзита(Команда)
	СписокЗаказов=новый СписокЗначений;
	Для каждого стр из Элементы.ОжидаетОтправки.ВыделенныеСтроки Цикл
		СписокЗаказов.Добавить(ОжидаетОтправки.НайтиПоИдентификатору(стр).Покупка);
	КонецЦикла;	
	Фрм=ПолучитьФорму("Документ.ВыдачаТранзита.Форма.ФормаДокумента",,ЭтаФорма);
	обВыдачаТранзитаСформы=фрм.Объект;	
	СформироватьВыдачуТранзитаНаСервере(обВыдачаТранзитаСформы,СписокЗаказов,Элементы.ПунктыВыдачи.ТекущиеДанные.Ссылка);
	КопироватьДанныеФормы(обВыдачаТранзитаСформы,фрм.объект);
	фрм.Открыть();
	
	
КонецПроцедуры



&НаСервере
Процедура СформироватьВыдачуТранзитаНаСервере(обВыдачаТранзитаСформы,СписокЗаказов,ТочкаНазначения)
	Если Элементы.ОжидаетОтправки.ВыделенныеСтроки.Количество()=0 тогда Возврат; КонецЕсли;
	обВыдачаТранзита=ДанныеФормыВЗначение(обВыдачаТранзитаСформы,Тип("ДокументОбъект.ВыдачаТранзита"));
	обВыдачаТранзита.Дата=ТекущаяДата();
	обВыдачаТранзита.ЗаполнитьПоСпискуКоробок(СписокЗаказов);
	обВыдачаТранзита.ВидОперации=Перечисления.ВидыОперацийВыдачаТранзита.НаОднуТочку;
	обВыдачаТранзита.ТочкаНазначения=ТочкаНазначения;

	ЗначениеВДанныеФормы(обВыдачаТранзита,обВыдачаТранзитаСформы);
КонецПроцедуры


&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если элементы.ГруппаСтраницы.ТекущаяСтраница=Элементы.ОжидаютОтправки Тогда
		ОбновитьОжидающиеОтправкиЗаказы();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура УчастникиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
    Парам  = Новый Структура("Ключ", ВыбраннаяСтрока);
    ОткрытьФорму("Справочник.Участники.Форма.ФормаКоментария", Парам);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    // СтандартныеПодсистемы.Печать   ОтправленныеЗаказы
	СписокОбъектов=новый Массив;
	СписокОбъектов.Добавить(Метаданные.Документы.ОтправлениеТранзита);
    УправлениеПечатью.ПриСозданииНаСервере(ЭтотОбъект,Элементы.ГруппаПечать,СписокОбъектов);
    // Конец СтандартныеПодсистемы.Печать
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
    УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Элементы.ОтправленныеЗаказы);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать


&НаСервере
Процедура ЗаполнитьЗаказыВнеГрупп(ДанныеФормы)
	обДТ=ДанныеФормыВЗначение(ДанныеФормы,Тип("ДокументОбъект.ДвижениеТранзита"));
	обДТ.ЗаполнитьЗаказамиДруихТочек();
	ЗначениеВДанныеФормы(обДТ,ДанныеФормы);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаказыВнеГрупп()
	форма=ПолучитьФорму("Документ.ДвижениеТранзита.Форма.ФормаДокумента");
	ДанныеФормы = Форма.Объект;
	ЗаполнитьЗаказыВнеГрупп(ДанныеФормы);
	Если ДанныеФормы.ПокупкиТранзит.Количество()>0 Тогда
		КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
		форма.Открыть();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПроверитьЗаказыВнеГрупп();
КонецПроцедуры

