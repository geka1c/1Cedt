
&НаКлиенте
Процедура ГруппаУчастниковПриИзменении(Элемент)
	СписокУчастников=	ПолучитьУчастниковПоГруппе(ГруппаУчастников);
	ОбновитьСписокДокументов();
КонецПроцедуры

&НаСервере
Функция   ПолучитьУчастниковПоГруппе(ГруппаУчастников)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчастникиВГруппах.Участник
		|ИЗ
		|	РегистрСведений.УчастникиВГруппах КАК УчастникиВГруппах
		|ГДЕ
		|	УчастникиВГруппах.Группа = &Группа";

	Запрос.Параметры.Вставить("Группа",ГруппаУчастников);
	выборка=Запрос.Выполнить().Выбрать();
	СЗ=Новый СписокЗначений;
	Пока выборка.Следующий()  Цикл
		СЗ.Добавить(выборка.участник,,истина);	
	КонецЦикла;
	Возврат СЗ;
КонецФункции // ПолучитьУчастниковПоГруппе()


&НаКлиенте
Процедура ВыдатьПокупки(Команда)

	ВыдатьПокупкиНаСервере(Списывать);
    ОбновитьСписокДокументов();
КонецПроцедуры

Процедура ВыдатьПокупкиНаСервере(Списывать)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиТоваровОстатки.Участник КАК Участник,
		|	ОстаткиТоваровОстатки.Потерян,
		|	ОстаткиТоваровОстатки.Покупка,
		|	ОстаткиТоваровОстатки.Оплачен,
		|	ОстаткиТоваровОстатки.МестоХранения,
		|	ОстаткиТоваровОстатки.Габарит,
		|	ОстаткиТоваровОстатки.КоличествоОстаток КАК Количество,
		|	ОстаткиТоваровОстатки.Партия,
		|	Покупки.Наименование КАК ПокупкаСпр,
		|	РАЗНОСТЬДАТ(ОстаткиТоваровОстатки.Партия.Дата,&НаДату, ДЕНЬ) КАК ВремяХранения,
		|	ВЫБОР
		|		КОГДА РАЗНОСТЬДАТ(ОстаткиТоваровОстатки.Партия.Дата, &НаДату, ДЕНЬ) > ОстаткиТоваровОстатки.Габарит.ДниХранения
		|			ТОГДА (ОстаткиТоваровОстатки.Габарит.СтоимостьХранения + (РАЗНОСТЬДАТ(ОстаткиТоваровОстатки.Партия.Дата, &НаДату, ДЕНЬ) - ОстаткиТоваровОстатки.Габарит.ДниХранения) * ОстаткиТоваровОстатки.Габарит.ДобавочнаяСтоимость) * ОстаткиТоваровОстатки.КоличествоОстаток
		|		ИНАЧЕ ОстаткиТоваровОстатки.Габарит.СтоимостьХранения * ОстаткиТоваровОстатки.КоличествоОстаток
		|	КОНЕЦ КАК СтоимостьХранения
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров.Остатки(
		|			,
		|			Участник В (&СписокУчастников)
		|				И Оплачен
		|				И (НЕ Потерян)) КАК ОстаткиТоваровОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Покупки КАК Покупки
		|		ПО ОстаткиТоваровОстатки.Покупка = Покупки.Код
		|ИТОГИ ПО
		|	Участник";

	Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
	Запрос.УстановитьПараметр("СписокУчастников", ПолучитьСписокООтмеченныхУчастников(СписокУчастников));

	
	Результат = Запрос.Выполнить();

	ВыборкаУчастник = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаУчастник.Следующий() Цикл
		обРасходная=Документы.Расходная.СоздатьДокумент();
		обРасходная.Дата=ТекущаяДата();
		обРасходная.Списать=Списывать;
		обРасходная.Автозаполнение=ГруппаУчастников;
		обРасходная.Участник=ВыборкаУчастник.Участник;
		ВыборкаДетальныеЗаписи = ВыборкаУчастник.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтрРасходная=обРасходная.Покупки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрРасходная,ВыборкаДетальныеЗаписи);
		КонецЦикла;
		обРасходная.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;


КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Период.ДатаНачала=НачалоДня(ТекущаяДата());
	Период.ДатаОкончания=КонецДня(ТекущаяДата());
	ОбновитьСписокДокументов();
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокООтмеченныхУчастников(СписокУчастников)
	МассивУчастников=новый Массив;
	Для каждого стр из СписокУчастников Цикл
		если стр.Пометка Тогда
			МассивУчастников.Добавить(стр.Значение);
		КонецЕсли;
	КонецЦикла;
	Возврат МассивУчастников;
КонецФункции
Процедура ОбновитьСписокДокументов()
	ДокументыУчастников.Параметры.УстановитьЗначениеПараметра("ДатаНачала",Период.ДатаНачала);
	ДокументыУчастников.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",Период.ДатаОкончания);
	ДокументыУчастников.Параметры.УстановитьЗначениеПараметра("СписокУчастников",ПолучитьСписокООтмеченныхУчастников(СписокУчастников));
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ОбновитьСписокДокументов();
КонецПроцедуры

&НаКлиенте
Процедура СписокУчастниковПриИзменении(Элемент)
	ОбновитьСписокДокументов();
КонецПроцедуры

&НаКлиенте
Процедура Просмотр(Команда)
	ПечатьДокументов();	
КонецПроцедуры

Процедура ПечатьДокументов()
	ПечатнаяФорма.Очистить();
	запрос=Новый Запрос;
	запрос.Текст=ДокументыУчастников.ТекстЗапроса;

	запрос.Параметры.Вставить("ДатаНачала",Период.ДатаНачала);
	запрос.Параметры.Вставить("ДатаОкончания",Период.ДатаОкончания);
	запрос.Параметры.Вставить("СписокУчастников",ПолучитьСписокООтмеченныхУчастников(СписокУчастников));
	тз=запрос.Выполнить().Выгрузить();
	Для каждого стр Из тз Цикл
		Чек(ПечатнаяФорма , стр.ссылка);
	КонецЦикла;
КонецПроцедуры




 &НаСервере
Процедура Чек(ТабДок, Ссылка) 

	Макет = Документы.Расходная.ПолучитьМакет("ПФ_MXL_Чек");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Расходная.Дата,
	|	Расходная.Номер,
	|	Расходная.Участник,
	|	Расходная.ПоискНикаСтоимость КАК ЗаПоискНика,	
	|	Расходная.Покупки.(
	|		Покупка,
	|		ЕСТЬNULL(Расходная.Покупки.МестоХранения.Родитель.Наименование, """") + ""   \   "" + Расходная.Покупки.МестоХранения.Наименование КАК МестоХранения,
	|		ПокупкаСпр,
	|		Партия,
	|		Партия.Организатор КАК Организатор,
	|		ВремяХранения,
	|		СтоимостьХранения,
	|		Габарит,
	|		Потерян
	|	)
	|ИЗ
	|	Документ.Расходная КАК Расходная
	|ГДЕ
	|	Расходная.Ссылка В(&Ссылка)
	|	И Расходная.Покупки.Потерян = Ложь";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ЗаПоискНика = Макет.ПолучитьОбласть("ЗаПоискНика");

	ОбластьПокупкиШапка = Макет.ПолучитьОбласть("ПокупкиШапка");
	ОбластьПокупки = Макет.ПолучитьОбласть("Покупки");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ВставлятьРазделительСтраниц = Ложь;
	Итого=0;
	Пока Выборка.Следующий() Цикл
		//Если ВставлятьРазделительСтраниц Тогда
		//	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		//КонецЕсли;

		//ТабДок.Вывести(ОбластьЗаголовок);
        ЗаПоискНика.Параметры.Заполнить(Выборка);
        СтоимостьПоиска=Выборка.ЗаПоискНика;

		Шапка.Параметры.Заполнить(Выборка);
		ОбластьПодвал.Параметры.Заполнить(Выборка);

		
    	Шапка.Параметры.Дата=Формат(Выборка.Дата,"ДЛФ=ДД");
		Шапка.Параметры.Номер=Число(Выборка.Номер);
		
		Шапка.Параметры.НазваниеОрганизации=Константы.НазваниеОрганизации.Получить();
//		Шапка.Параметры.Тел=Константы.Телефоны.Получить();

		ТабДок.Вывести(Шапка, Выборка.Уровень());

		//ТабДок.Вывести(ОбластьПокупкиШапка);
		ВыборкаПокупки = Выборка.Покупки.Выбрать();
		Пока ВыборкаПокупки.Следующий() Цикл
			ОбластьПокупки.Параметры.Заполнить(ВыборкаПокупки);
			покупка									= 	СП_РаботаСоСправочниками.ПолучитьПокупкуПо_Коду(ВыборкаПокупки.Покупка);
			ОбластьПокупки.Параметры.Организатор	=	покупка.Владелец.Наименование;
			ТабДок.Вывести(ОбластьПокупки, ВыборкаПокупки.Уровень());
			Итого= Итого+ВыборкаПокупки.СтоимостьХранения;
		КонецЦикла;
			
		//ВставлятьРазделительСтраниц = Истина;
		Если СтоимостьПоиска<>0 Тогда
			ТабДок.Вывести(ЗаПоискНика);
		КонецЕсли;

		ОбластьПодвал.Параметры.Итого=Итого+СтоимостьПоиска;
		ТабДок.Вывести(ОбластьПодвал);
	КонецЦикла;
	//}}
КонецПроцедуры


 &НаСервере
Процедура ЧекНЗ(ТабДок) 
    ТабДок.Очистить();
	Макет = Документы.Расходная.ПолучитьМакет("ПФ_MXL_Чек");
	Запрос = Новый Запрос;
	Запрос.Текст =

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиТоваровОстатки.Участник КАК Участник,
		|	Покупки.Владелец КАК Организатор,
		|	ОстаткиТоваровОстатки.Покупка,
		|	Покупки.Наименование КАК ПокупкаСпр,
		|	ОстаткиТоваровОстатки.МестоХранения,
		|	ОстаткиТоваровОстатки.Габарит,
		|	РАЗНОСТЬДАТ(ОстаткиТоваровОстатки.Партия.Дата, &НаДату, ДЕНЬ) КАК ВремяХранения,
		|	ВЫБОР
		|		КОГДА РАЗНОСТЬДАТ(ОстаткиТоваровОстатки.Партия.Дата, &НаДату, ДЕНЬ) > ОстаткиТоваровОстатки.Габарит.ДниХранения
		|			ТОГДА (ОстаткиТоваровОстатки.Габарит.СтоимостьХранения + (РАЗНОСТЬДАТ(ОстаткиТоваровОстатки.Партия.Дата, &НаДату, ДЕНЬ) - ОстаткиТоваровОстатки.Габарит.ДниХранения) * ОстаткиТоваровОстатки.Габарит.ДобавочнаяСтоимость) * ОстаткиТоваровОстатки.КоличествоОстаток
		|		ИНАЧЕ ОстаткиТоваровОстатки.Габарит.СтоимостьХранения * ОстаткиТоваровОстатки.КоличествоОстаток
		|	КОНЕЦ КАК СтоимостьХранения
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров.Остатки(
		|			,
		|			Участник В (&СписокУчастников)
		|				И Оплачен
		|				И (НЕ Потерян)) КАК ОстаткиТоваровОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Покупки КАК Покупки
		|		ПО ОстаткиТоваровОстатки.Покупка = Покупки.Код
		|ИТОГИ ПО
		|	Участник";

	Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
	Запрос.УстановитьПараметр("СписокУчастников", ПолучитьСписокООтмеченныхУчастников(СписокУчастников));

	Результат = Запрос.Выполнить();

	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ЗаПоискНика = Макет.ПолучитьОбласть("ЗаПоискНика");

	ОбластьПокупкиШапка = Макет.ПолучитьОбласть("ПокупкиШапка");
	ОбластьПокупки = Макет.ПолучитьОбласть("Покупки");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ВставлятьРазделительСтраниц = Ложь;
	
	
	
	Пока Выборка.Следующий() Цикл
		// Вставить обработку выборки ВыборкаУчастник
        Итого=0;

        ЗаПоискНика.Параметры.Заполнить(Выборка);
        СтоимостьПоиска=0;

		Шапка.Параметры.Заполнить(Выборка);
		ОбластьПодвал.Параметры.Заполнить(Выборка);

		
    	Шапка.Параметры.Дата=Формат(ТекущаяДата(),"ДЛФ=ДД");
		Шапка.Параметры.Номер="___";
		
		Шапка.Параметры.НазваниеОрганизации=Константы.НазваниеОрганизации.Получить();
//		Шапка.Параметры.Тел=Константы.Телефоны.Получить();

		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ВыборкаПокупки = Выборка.Выбрать();

		Пока ВыборкаПокупки.Следующий() Цикл
			ОбластьПокупки.Параметры.Заполнить(ВыборкаПокупки);
			ТабДок.Вывести(ОбластьПокупки);
			Итого= Итого+ВыборкаПокупки.СтоимостьХранения;
		КонецЦикла;
		Если СтоимостьПоиска<>0 Тогда
			ТабДок.Вывести(ЗаПоискНика);
		КонецЕсли;

		ОбластьПодвал.Параметры.Итого=Итого+СтоимостьПоиска;
		ТабДок.Вывести(ОбластьПодвал);


	КонецЦикла;
 	                                                     

КонецПроцедуры




&НаКлиенте
Процедура Печать(Команда)
	ПечатнаяФорма.Напечатать();
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрПокупок(Команда)
	 ЧекНЗ(ПечатнаяФорма);
КонецПроцедуры





